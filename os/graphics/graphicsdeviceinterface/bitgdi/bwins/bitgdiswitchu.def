EXPORTS
	call_vector_1 @ 1 NONAME 
	call_vector_2 @ 2 NONAME 
	call_vector_3 @ 3 NONAME 
	call_vector_4 @ 4 NONAME 
	call_vector_5 @ 5 NONAME 
	call_vector_6 @ 6 NONAME 
	call_vector_7 @ 7 NONAME 
	call_vector_8 @ 8 NONAME 
	call_vector_9 @ 9 NONAME 
	call_vector_10 @ 10 NONAME 
	call_vector_11 @ 11 NONAME 
	call_vector_12 @ 12 NONAME 
	call_vector_13 @ 13 NONAME 
	call_vector_14 @ 14 NONAME 
	call_vector_15 @ 15 NONAME 
	call_vector_16 @ 16 NONAME 
	call_vector_17 @ 17 NONAME 
	call_vector_18 @ 18 NONAME 
	call_vector_19 @ 19 NONAME 
	call_vector_20 @ 20 NONAME 
	call_vector_21 @ 21 NONAME 
	call_vector_22 @ 22 NONAME 
	call_vector_23 @ 23 NONAME 
	call_vector_24 @ 24 NONAME 
	call_vector_25 @ 25 NONAME 
	call_vector_26 @ 26 NONAME 
	call_vector_27 @ 27 NONAME 
	call_vector_28 @ 28 NONAME 
	call_vector_29 @ 29 NONAME 
	call_vector_30 @ 30 NONAME 
	call_vector_31 @ 31 NONAME 
	call_vector_32 @ 32 NONAME 
	call_vector_33 @ 33 NONAME 
	call_vector_34 @ 34 NONAME 
	call_vector_35 @ 35 NONAME 
	call_vector_36 @ 36 NONAME 
	call_vector_37 @ 37 NONAME 
	call_vector_38 @ 38 NONAME 
	call_vector_39 @ 39 NONAME 
	call_vector_40 @ 40 NONAME 
	call_vector_41 @ 41 NONAME 
	call_vector_42 @ 42 NONAME 
	call_vector_43 @ 43 NONAME 
	call_vector_44 @ 44 NONAME 
	call_vector_45 @ 45 NONAME 
	call_vector_46 @ 46 NONAME 
	call_vector_47 @ 47 NONAME 
	call_vector_48 @ 48 NONAME 
	call_vector_49 @ 49 NONAME 
	call_vector_50 @ 50 NONAME 
	call_vector_51 @ 51 NONAME 
	call_vector_52 @ 52 NONAME 
	call_vector_53 @ 53 NONAME 
	call_vector_54 @ 54 NONAME 
	call_vector_55 @ 55 NONAME 
	call_vector_56 @ 56 NONAME 
	call_vector_57 @ 57 NONAME 
	call_vector_58 @ 58 NONAME 
	call_vector_59 @ 59 NONAME 
	call_vector_60 @ 60 NONAME 
	call_vector_61 @ 61 NONAME 
	call_vector_62 @ 62 NONAME 
	call_vector_63 @ 63 NONAME 
	call_vector_64 @ 64 NONAME 
	call_vector_65 @ 65 NONAME 
	call_vector_66 @ 66 NONAME 
	call_vector_67 @ 67 NONAME 
	call_vector_68 @ 68 NONAME 
	call_vector_69 @ 69 NONAME 
	call_vector_70 @ 70 NONAME 
	call_vector_71 @ 71 NONAME 
	call_vector_72 @ 72 NONAME 
	call_vector_73 @ 73 NONAME 
	call_vector_74 @ 74 NONAME 
	call_vector_75 @ 75 NONAME 
	call_vector_76 @ 76 NONAME 
	call_vector_77 @ 77 NONAME 
	call_vector_78 @ 78 NONAME 
	call_vector_79 @ 79 NONAME 
	call_vector_80 @ 80 NONAME 
	call_vector_81 @ 81 NONAME 
	call_vector_82 @ 82 NONAME 
	call_vector_83 @ 83 NONAME 
	call_vector_84 @ 84 NONAME 
	call_vector_85 @ 85 NONAME 
	call_vector_86 @ 86 NONAME 
	call_vector_87 @ 87 NONAME 
	call_vector_88 @ 88 NONAME 
	call_vector_89 @ 89 NONAME 
	call_vector_90 @ 90 NONAME 
	call_vector_91 @ 91 NONAME 
	call_vector_92 @ 92 NONAME 
	call_vector_93 @ 93 NONAME 
	call_vector_94 @ 94 NONAME 
	call_vector_95 @ 95 NONAME 
	call_vector_96 @ 96 NONAME 
	call_vector_97 @ 97 NONAME 
	call_vector_98 @ 98 NONAME 
	call_vector_99 @ 99 NONAME 
	call_vector_100 @ 100 NONAME 
	call_vector_101 @ 101 NONAME 
	call_vector_102 @ 102 NONAME 
	call_vector_103 @ 103 NONAME 
	call_vector_104 @ 104 NONAME 
	call_vector_105 @ 105 NONAME 
	call_vector_106 @ 106 NONAME 
	call_vector_107 @ 107 NONAME 
	call_vector_108 @ 108 NONAME 
	call_vector_109 @ 109 NONAME 
	call_vector_110 @ 110 NONAME 
	call_vector_111 @ 111 NONAME 
	call_vector_112 @ 112 NONAME 
	call_vector_113 @ 113 NONAME 
	call_vector_114 @ 114 NONAME 
	call_vector_115 @ 115 NONAME 
	call_vector_116 @ 116 NONAME 
	call_vector_117 @ 117 NONAME 
	call_vector_118 @ 118 NONAME 
	call_vector_119 @ 119 NONAME 
	call_vector_120 @ 120 NONAME 
	call_vector_121 @ 121 NONAME 
	call_vector_122 @ 122 NONAME 
	call_vector_123 @ 123 NONAME 
	call_vector_124 @ 124 NONAME 
	call_vector_125 @ 125 NONAME 
	call_vector_126 @ 126 NONAME 
	call_vector_127 @ 127 NONAME 
	call_vector_128 @ 128 NONAME 
	call_vector_129 @ 129 NONAME 
	call_vector_130 @ 130 NONAME 
	call_vector_131 @ 131 NONAME 
	call_vector_132 @ 132 NONAME 
	call_vector_133 @ 133 NONAME 
	call_vector_134 @ 134 NONAME 
	call_vector_135 @ 135 NONAME 
	call_vector_136 @ 136 NONAME 
	call_vector_137 @ 137 NONAME 
	call_vector_138 @ 138 NONAME 
	call_vector_139 @ 139 NONAME 
	call_vector_140 @ 140 NONAME 
	call_vector_141 @ 141 NONAME 
	call_vector_142 @ 142 NONAME 
	call_vector_143 @ 143 NONAME 
	call_vector_144 @ 144 NONAME 
	call_vector_145 @ 145 NONAME 
	call_vector_146 @ 146 NONAME 
	call_vector_147 @ 147 NONAME 
	call_vector_148 @ 148 NONAME 
	call_vector_149 @ 149 NONAME 
	call_vector_150 @ 150 NONAME 
	call_vector_151 @ 151 NONAME 
	call_vector_152 @ 152 NONAME 
	call_vector_153 @ 153 NONAME 
	call_vector_154 @ 154 NONAME 
	call_vector_155 @ 155 NONAME 
	call_vector_156 @ 156 NONAME ; public: virtual void __thiscall CFbsBitGc::SetFaded(int)
	call_vector_157 @ 157 NONAME 
	call_vector_158 @ 158 NONAME 
	call_vector_159 @ 159 NONAME ; public: virtual void __thiscall CFbsBitGc::SetFadingParameters(unsigned char,unsigned char)
	call_vector_160 @ 160 NONAME ; public: void __thiscall CFbsBitGc::OrientationsAvailable(int * const)
	call_vector_161 @ 161 NONAME ; public: int __thiscall CFbsDevice::SetCustomPalette(class CPalette const *)	
	call_vector_162 @ 162 NONAME ; void __cdecl DummyReserved1(void)
	call_vector_163 @ 163 NONAME ; void __cdecl DummyReserved2(void)
	call_vector_164 @ 164 NONAME ; void __cdecl DummyReserved3(void)
	call_vector_165 @ 165 NONAME ; void __cdecl DummyReserved4(void)
	call_vector_166 @ 166 NONAME ; void __cdecl DummyReserved5(void)
	call_vector_167 @ 167 NONAME ; void __cdecl DummyReserved6(void)
	call_vector_168 @ 168 NONAME ; void __cdecl DummyReserved7(void)
	call_vector_169 @ 169 NONAME ; void __cdecl DummyReserved8(void)
	call_vector_170 @ 170 NONAME ; void __cdecl DummyReserved9(void)
	call_vector_171 @ 171 NONAME ; void __cdecl DummyReserved10(void)
	call_vector_172 @ 172 NONAME ; public: __thiscall TAcceleratedBitmapSpec::TAcceleratedBitmapSpec(class CFbsBitmap *)
	call_vector_173 @ 173 NONAME ; public: __thiscall TAcceleratedBitmapSpec::TAcceleratedBitmapSpec(class RHardwareBitmap)		
	call_vector_174 @ 174 NONAME ; private: void __thiscall TAcceleratedBitmapSpec::DoLock(class TBitmapLockCount &)
	call_vector_175 @ 175 NONAME ; private: void __thiscall TAcceleratedBitmapSpec::DoLock(class TBitmapLockCount &,class TAcceleratedBitmapInfo &)
	call_vector_176 @ 176 NONAME ; private: void __thiscall TAcceleratedBitmapSpec::DoUnlock(class TBitmapLockCount &)
	call_vector_177 @ 177 NONAME ; public: static class TGraphicsAcceleratorCaps const * __cdecl CSoftwareGraphicsAcceleratorBC::GenericCapabilities(void)
	call_vector_178 @ 178 NONAME ; public: int __thiscall TAcceleratedBitmapSpec::GetInfo(class TAcceleratedBitmapInfo &)const 
	call_vector_179 @ 179 NONAME ; public: class RHardwareBitmap  __thiscall CFbsScreenDevice::HardwareBitmap(void)
	call_vector_180 @ 180 NONAME ; class CSoftwareGraphicsAccelerator * CSoftwareGraphicsAcceleratorBC::NewL(class CFbsBitmap *)
	call_vector_181 @ 181 NONAME 
	call_vector_182 @ 182 NONAME ; public: int __thiscall CFbsBitGc::AlphaBlendBitmaps(class TPoint const &,class CFbsBitmap const *,class CFbsBitmap const *,class TRect const &,class TPoint const &,class CFbsBitmap const *,class TPoint const &)
	call_vector_183 @ 183 NONAME ; public: void __thiscall CFbsBitGc::ExternalizeL(class RWriteStream &)
	call_vector_184 @ 184 NONAME ; public: void __thiscall CFbsBitGc::InternalizeL(class RReadStream &)
	call_vector_185 @ 185 NONAME ; public: static enum TDisplayMode  __cdecl CFbsDevice::DisplayMode16M(void)
	call_vector_186 @ 186 NONAME ; public: int __thiscall CFbsDevice::SetScalingFactor(class TPoint const &,int,int,int,int)
	call_vector_187 @ 187 NONAME ; public: void __thiscall CFbsDevice::GetDrawRect(class TRect &)const 
	call_vector_188 @ 188 NONAME ; public: int __thiscall CFbsBitmapDevice::SwapWidthAndHeight(void)
	call_vector_189 @ 189 NONAME ; int CFbsBitGc::AlphaBlendBitmaps(class TPoint const &, class CFbsBitmap const *, class TRect const &, class CFbsBitmap const *, class TPoint const &)
	call_vector_190 @ 190 NONAME ; public: void __thiscall CFbsBitGc::DrawBitmapMasked(class TRect const &,class CFbsBitmap const *,class TRect const &,class CFbsBitmap const *,int)
	call_vector_191 @ 191 NONAME ; class CFbsScreenDevice * CFbsScreenDevice::NewL(int, enum TDisplayMode)
	call_vector_192 @ 192 NONAME ; int CFbsDevice::GetNearestFontToDesignHeightInPixels(class CFont * &, class TFontSpec const &)
	call_vector_193 @ 193 NONAME ; int CFbsDevice::GetNearestFontToDesignHeightInTwips(class CFont * &, class TFontSpec const &)
	call_vector_194 @ 194 NONAME ; int CFbsDevice::GetNearestFontToMaxHeightInPixels(class CFont * &, class TFontSpec const &, int)
	call_vector_195 @ 195 NONAME ; int CFbsDevice::GetNearestFontToMaxHeightInTwips(class CFont * &, class TFontSpec const &, int)
	call_vector_196 @ 196 NONAME ; void CFbsBitGc::Reserved_CFbsBitGc_1(void)
	call_vector_197 @ 197 NONAME ; void CFbsBitGc::Reserved_CFbsBitGc_2(void)
	call_vector_198 @ 198 NONAME ; void CFbsBitGc::Reserved_CFbsBitGc_3(void)
	call_vector_199 @ 199 NONAME ; void CFbsBitGc::Reserved_CFbsBitGc_4(void)
	call_vector_200 @ 200 NONAME ; void CFbsBitGc::Reserved_CFbsBitGc_5(void)
	call_vector_201 @ 201 NONAME ; void CFbsBitGc::Reserved_CBitmapContext_1(void)
	call_vector_202 @ 202 NONAME ; void CFbsBitGc::Reserved_CBitmapContext_2(void)
	call_vector_203 @ 203 NONAME ; void CFbsBitGc::Reserved_CBitmapContext_3(void)
	call_vector_204 @ 204 NONAME ; int CFbsBitGc::APIExtension(class TUid, int*&, int *)
	call_vector_205 @ 205 NONAME ; void CFbsBitGc::Reserved_CGraphicsContext_2(void)
	call_vector_206 @ 206 NONAME ; void CFbsBitGc::DrawBitmapMasked(class TRect const &, class CWsBitmap const *, class TRect const &, class CWsBitmap const *, int)
	call_vector_207 @ 207 NONAME ; int CFbsBitGc::SetClippingRegion(class TRegion const &)
	call_vector_208 @ 208 NONAME ; int CFbsBitGc::AlphaBlendBitmaps(class TPoint const &, class CWsBitmap const *, class TRect const &, class CWsBitmap const *, class TPoint const &)
	call_vector_209 @ 209 NONAME ; class TRgb CFbsBitGc::BrushColor(void)
	call_vector_210 @ 210 NONAME ; class TRgb CFbsBitGc::PenColor(void)
	call_vector_211 @ 211 NONAME ; unsigned long const * CFbsScreenDevice::Bits(void) const
	call_vector_212 @ 212 NONAME ; int CFbsScreenDevice::Stride(void) const
	call_vector_213 @ 213 NONAME ; int CFbsScreenDevice::ScreenNo(void) const
	call_vector_214 @ 214 NONAME ; void CFbsBitGc::ChangeDevice(class CFbsDevice *)
	call_vector_215 @ 215 NONAME ; int CFbsDevice::RegisterLinkedTypeface(class CLinkedTypefaceSpecification const &, int &)
	call_vector_216 @ 216 NONAME ; unsigned int CFbsScreenDevice::DeviceOrientationsAvailable(void) const
	call_vector_217 @ 217 NONAME ; int CFbsScreenDevice::SetDeviceOrientation(enum TDeviceOrientation) const
	call_vector_218 @ 218 NONAME ; void CFbsScreenDevice::GetSurface(class TSurfaceId &) const
	call_vector_219 @ 219 NONAME ; enum TDeviceOrientation CFbsScreenDevice::DeviceOrientation(void) const
	call_vector_220 @ 220 NONAME ; void CFbsBitGc::DrawText(class TDesC16 const &, class CGraphicsContext::TTextParameters const *)
	call_vector_221 @ 221 NONAME ; void CFbsBitGc::DrawText(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TPoint const &)
	call_vector_222 @ 222 NONAME ; void CFbsBitGc::DrawText(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &)
	call_vector_223 @ 223 NONAME ; void CFbsBitGc::DrawText(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &, int, int, enum CGraphicsContext::TTextAlign, int)
	call_vector_224 @ 224 NONAME ; void CFbsBitGc::DrawText(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &, int, enum CGraphicsContext::TTextAlign, int)
	call_vector_225 @ 225 NONAME ; void CFbsBitGc::DrawTextVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TPoint const &, int)
	call_vector_226 @ 226 NONAME ; void CFbsBitGc::DrawTextVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &, int)
	call_vector_227 @ 227 NONAME ; void CFbsBitGc::DrawTextVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &, int, int, int, enum CGraphicsContext::TTextAlign, int)
	call_vector_228 @ 228 NONAME ; void CFbsBitGc::DrawTextVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, class TRect const &, int, int, enum CGraphicsContext::TTextAlign, int)
	call_vector_229 @ 229 NONAME ; void CFbsBitGc::DrawTextVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, int)
	call_vector_230 @ 230 NONAME ; void CFbsBitGc::UpdateJustification(class TDesC16 const &, class CGraphicsContext::TTextParameters const *)
	call_vector_231 @ 231 NONAME ; void CFbsBitGc::UpdateJustificationVertical(class TDesC16 const &, class CGraphicsContext::TTextParameters const *, int)
	call_vector_232 @ 232 NONAME ; int CFbsDevice::SetDrawDeviceOffset(class TPoint const &)

