EXPORTS
	?GetLineBreak@MLineBreaker@@QBEHABVTDesC16@@HHHPAVMContingentLineBreaker@@AAH2@Z @ 1 NONAME ; public: int __thiscall MLineBreaker::GetLineBreak(class TDesC16 const &,int,int,int,class MContingentLineBreaker *,int &,int &)const 
	?GetLineBreakInContext@MLineBreaker@@UBEHABVTDesC16@@HHHAAH@Z @ 2 NONAME ; public: virtual int __thiscall MLineBreaker::GetLineBreakInContext(class TDesC16 const &,int,int,int,int &)const 
	?GetLineBreakL@MLineBreaker@@QBEHABVTDesC16@@HHHPAVMContingentLineBreakerL@@AAH2@Z @ 3 NONAME ; public: int __thiscall MLineBreaker::GetLineBreakL(class TDesC16 const &,int,int,int,class MContingentLineBreakerL *,int &,int &)const 
	?IsHangingCharacter@MLineBreaker@@UBEHI@Z @ 4 NONAME ; public: virtual int __thiscall MLineBreaker::IsHangingCharacter(unsigned int)const 
	?LineBreakClass@MLineBreaker@@UBEIIAAI0@Z @ 5 NONAME ; public: virtual unsigned int __thiscall MLineBreaker::LineBreakClass(unsigned int,unsigned int &,unsigned int &)const 
	?LineBreakPossible@MLineBreaker@@UBEHIIH@Z @ 6 NONAME ; public: virtual int __thiscall MLineBreaker::LineBreakPossible(unsigned int,unsigned int,int)const 
	?ExtendedInterface@MLineBreaker@@UBEPAXAAVTUid@@@Z @ 7 NONAME ; public: virtual void * __thiscall MLineBreaker::ExtendedInterface(class TUid &)const 

