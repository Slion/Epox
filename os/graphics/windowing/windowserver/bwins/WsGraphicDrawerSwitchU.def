EXPORTS
	call_vector_1 @ 1 NONAME ; CWsGraphicDrawer::CWsGraphicDrawer(void)
	call_vector_2 @ 2 NONAME ; TWsGraphicMsgAnimation::TWsGraphicMsgAnimation(void)
	call_vector_3 @ 3 NONAME ; TWsGraphicMsgBufParser::TWsGraphicMsgBufParser(class TDesC8 const &)
	call_vector_4 @ 4 NONAME ; CWsGraphicDrawer::~CWsGraphicDrawer(void)
	call_vector_5 @ 5 NONAME ; void CWsGraphicDrawerArray::AddLC(class CWsGraphicDrawer *)
	call_vector_6 @ 6 NONAME ; void MWsAnimationScheduler::Animate(class MWsScreen &)
	call_vector_7 @ 7 NONAME ; class TTimeIntervalMicroSeconds TWsGraphicMsgAnimation::AnimationTime(class TTime const &, class TTimeIntervalMicroSeconds const &) const
	call_vector_8 @ 8 NONAME ; void CWsGraphicDrawer::BaseConstructL(class MWsGraphicDrawerEnvironment &, struct TGraphicDrawerId const &, class MWsClient &)
	call_vector_9 @ 9 NONAME ; void CWsGraphicDrawerArray::Close(void)
	call_vector_10 @ 10 NONAME ; int TGraphicDrawerId::Compare(struct TGraphicDrawerId const &) const
	call_vector_11 @ 11 NONAME ; int TGraphicDrawerId::Compare(struct TGraphicDrawerId const &, struct TGraphicDrawerId const &)
	call_vector_12 @ 12 NONAME ; int CWsGraphicDrawer::Contains(class TArray<struct TGraphicDrawerId> const &) const
	call_vector_13 @ 13 NONAME ; int TWsGraphicMsgBufParser::Count(void) const
	call_vector_14 @ 14 NONAME ; class CWsGraphicDrawer * WsGraphicDrawer::CreateLC(class TUid, class MWsGraphicDrawerEnvironment &, struct TGraphicDrawerId const &, class MWsClient &, class TDesC8 const &)
	call_vector_15 @ 15 NONAME ; class TPtrC8 TWsGraphicMsgBufParser::Data(int) const
	call_vector_16 @ 16 NONAME ; void CWsGraphicDrawer::Draw(class MWsGc &, class TRect const &, class TDesC8 const &) const
	call_vector_17 @ 17 NONAME ; class MWsGraphicDrawerEnvironment & CWsGraphicDrawer::Env(void)
	call_vector_18 @ 18 NONAME ; int TWsGraphicMsgBufParser::Find(class TUid, int) const
	call_vector_19 @ 19 NONAME ; int CWsGraphicDrawer::HasAsChild(class TArray<struct TGraphicDrawerId> const &) const
	call_vector_20 @ 20 NONAME ; struct TGraphicDrawerId const & CWsGraphicDrawer::Id(void) const
	call_vector_21 @ 21 NONAME ; void CWsGraphicDrawer::Invalidate(void)
	call_vector_22 @ 22 NONAME ; int CWsGraphicDrawerArray::IsEmpty(void) const
	call_vector_23 @ 23 NONAME ; int TWsGraphicMsgAnimation::IsPlaying(class TTime const &, class TTimeIntervalMicroSeconds const &) const
	call_vector_24 @ 24 NONAME ; int CWsGraphicDrawer::IsSharedWith(class TSecureId) const
	call_vector_25 @ 25 NONAME ; int TWsGraphicMsgAnimation::Load(class TWsGraphicMsgBufParser const &)
	call_vector_26 @ 26 NONAME ; int TWsGraphicMsgAnimation::Load(class TWsGraphicMsgBufParser const &, int)
	call_vector_27 @ 27 NONAME ; class MWsClient const & CWsGraphicDrawer::Owner(void) const
	call_vector_28 @ 28 NONAME ; void MWsAnimationScheduler::Redraw(class MWsScreen &)
	call_vector_29 @ 29 NONAME ; int MWsAnimationScheduler::RedrawInvalid(class MWsScreen &, class TArray<struct TGraphicDrawerId> const &)
	call_vector_30 @ 30 NONAME ; int CWsGraphicDrawerArray::Remove(struct TGraphicDrawerId const &)
	call_vector_31 @ 31 NONAME ; int CWsGraphicDrawerArray::RemoveAll(class MWsClient const &)
	call_vector_32 @ 32 NONAME ; int CWsGraphicDrawerArray::RemoveAndDestroy(struct TGraphicDrawerId const &)
	call_vector_33 @ 33 NONAME ; int CWsGraphicDrawerArray::RemoveAndDestroyAll(class MWsClient const &)
	call_vector_34 @ 34 NONAME ; void CWsGraphicDrawerArray::ResetAndDestroy(void)
	call_vector_35 @ 35 NONAME ; class CWsGraphicDrawer const * CWsGraphicDrawerArray::ResolveGraphic(struct TGraphicDrawerId const &) const
	call_vector_36 @ 36 NONAME ; void * MWsObjectProvider::ResolveObjectInterface(unsigned int)
	call_vector_37 @ 37 NONAME ; int CWsGraphicDrawer::SendMessage(class TDesC8 const &)
	call_vector_38 @ 38 NONAME ; int CWsGraphicDrawer::Share(class TSecureId)
	call_vector_39 @ 39 NONAME ; int CWsGraphicDrawer::ShareGlobally(void)
	call_vector_40 @ 40 NONAME ; int CWsGraphicDrawerArray::SwapLC(class CWsGraphicDrawer *)
	call_vector_41 @ 41 NONAME ; class TUid TWsGraphicMsgBufParser::Uid(int) const
	call_vector_42 @ 42 NONAME ; int CWsGraphicDrawer::UnShare(class TSecureId)
	call_vector_43 @ 43 NONAME ; int CWsGraphicDrawer::UnShareGlobally(void)
	call_vector_44 @ 44 NONAME ; int TWsGraphicMsgBufParser::Verify(void) const
	call_vector_45 @ 45 NONAME ; class MWsGraphicDrawerEnvironment const & CWsGraphicDrawer::Env(void) const
	call_vector_46 @ 46 NONAME ; void CWsGraphicDrawer::HandleEvent(struct TWservCrEvent const &)
	call_vector_47 @ 47 NONAME ; int CWsGraphicDrawer::HasEventHandler(void) const
	call_vector_48 @ 48 NONAME ; void CWsGraphicDrawer::SetEventHandler(class MWsEventHandler *)
	call_vector_49 @ 49 NONAME ; TWservCrEvent::TWservCrEvent(unsigned long)
	call_vector_50 @ 50 NONAME ; TWservCrEvent::TWservCrEvent(unsigned long, unsigned long)
	call_vector_51 @ 51 NONAME ; TWservCrEvent::TWservCrEvent(unsigned long, unsigned long, void *)
	call_vector_52 @ 52 NONAME ; int TWservCrEvent::SizeMode(void) const
	call_vector_53 @ 53 NONAME ; unsigned long TWservCrEvent::Type(void) const
	call_vector_54 @ 54 NONAME ; class RRegion const * TWservCrEvent::VisibleRegion(void) const
	call_vector_55 @ 55 NONAME ; int TWservCrEvent::ScreenNumber(void) const
	call_vector_56 @ 56 NONAME ; int TWsGraphicMsgBufParser::LoadFixed(class TUid, void *, int, int) const
	call_vector_57 @ 57 NONAME ; int CWsGraphicDrawer::SendMessage(class CWsMessageData &)
	call_vector_58 @ 58 NONAME ; class TRegion const * TWservCrEvent::DrawingRegion(void) const
	call_vector_59 @ 59 NONAME ; int TWservCrEvent::WindowGroupIdentifier(void) const
	call_vector_60 @ 60 NONAME ; int CWsGraphicDrawerArray::Add(class CWsGraphicDrawer *)
	call_vector_61 @ 61 NONAME ; struct CWsGraphicDrawerArray::XRollBackBase * CWsGraphicDrawerArray::AddTLC(class CWsGraphicDrawer *)
	call_vector_62 @ 62 NONAME ; void CWsGraphicDrawerArray::CommitP(struct CWsGraphicDrawerArray::XRollBackBase *)
	call_vector_63 @ 63 NONAME ; struct CWsGraphicDrawerArray::XRollBackBase * CWsGraphicDrawerArray::RemoveTLC(struct TGraphicDrawerId const &)
	call_vector_64 @ 64 NONAME ; int CWsGraphicDrawerArray::Swap(class CWsGraphicDrawer *)
	call_vector_65 @ 65 NONAME ; struct CWsGraphicDrawerArray::XRollBackBase * CWsGraphicDrawerArray::SwapTLC(class CWsGraphicDrawer *)
	call_vector_66 @ 66 NONAME ; enum CFbsBitGc::TGraphicsOrientation TWservCrEvent::Orientation(void) const
	call_vector_67 @ 67 NONAME ; void WsGraphicDrawer::FinalClose(void)
	call_vector_68 @ 68 NONAME ; int TWservCrEvent::WasVisible(void) const
	call_vector_69 @ 69 NONAME ; TWservCrEvent::TWservCrEvent(unsigned long, unsigned long, void *, class MWsWindow *)
	call_vector_70 @ 70 NONAME ; class MWsWindow * TWservCrEvent::Window(void) const
	call_vector_71 @ 71 NONAME ; CWsPlugin::CWsPlugin(void)
	call_vector_72 @ 72 NONAME ; CWsRenderStage::CWsRenderStage(void)
	call_vector_73 @ 73 NONAME ; CWsPlugin::~CWsPlugin(void)
	call_vector_74 @ 74 NONAME ; CWsRenderStage::~CWsRenderStage(void)
	call_vector_75 @ 75 NONAME ; void CWsPlugin::BaseConstructL(class MWsGraphicDrawerEnvironment &)
	call_vector_76 @ 76 NONAME ; void CWsRenderStage::BaseConstructL(void)
	call_vector_77 @ 77 NONAME ; class MWsGraphicDrawerEnvironment & CWsPlugin::Env(void)
	call_vector_78 @ 78 NONAME ; class MWsGraphicDrawerEnvironment const & CWsPlugin::Env(void) const
	call_vector_79 @ 79 NONAME ; class CWsRenderStage * CWsRenderStage::Next(void)
	call_vector_80 @ 80 NONAME ; class TDesC16 const & CWsPlugin::PluginName(void) const
	call_vector_81 @ 81 NONAME ; void * CWsRenderStage::ResolveObjectInterface(unsigned int)
	call_vector_82 @ 82 NONAME ; void CWsRenderStage::SetNext(class CWsRenderStage *)
	call_vector_83 @ 83 NONAME ; class TSurfaceId const * TWservCrEvent::SurfaceId(void) const
	call_vector_84 @ 84 NONAME ; void MWsAnimationScheduler::Animate(class MWsScreen &, class TRequestStatus *)

