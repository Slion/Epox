EXPORTS
	call_vector_1 @ 1 NONAME ; CCommandBuffer::~CCommandBuffer(void)
	call_vector_2 @ 2 NONAME ; CRemoteGc::~CRemoteGc(void)
	call_vector_3 @ 3 NONAME ; void CRemoteGc::ExternalizeL(class RWsGraphicMsgBuf &, int)
	call_vector_4 @ 4 NONAME ; void CCommandBuffer::InternalizeL(class TDesC8 const &)
	call_vector_5 @ 5 NONAME ; class CCommandBuffer * CCommandBuffer::NewL(void)
	call_vector_6 @ 6 NONAME ; class CRemoteGc * CRemoteGc::NewL(class CWsScreenDevice *)
	call_vector_7 @ 7 NONAME ; int CCommandBuffer::Play(class TPoint const &, class TRect const &, class MWsGraphicResolver const &, class CBitmapContext &)
	call_vector_8 @ 8 NONAME ; void CRemoteGc::ResetCommandBuffer(void)
	call_vector_9 @ 9 NONAME ; void CRemoteGc::SetCommandBufferObserver(class MCommandBufferObserver *)
	call_vector_10 @ 10 NONAME ; void CRemoteGc::BeginDraw(class TRect const &)
	call_vector_11 @ 11 NONAME ; void CRemoteGc::EndDraw(void)
	call_vector_12 @ 12 NONAME ; void CCommandBuffer::InternalizeAppendL(class TDesC8 const &)
	call_vector_13 @ 13 NONAME ; int CCommandBuffer::Play(class TPoint const &, class TRegion const *, class TRect const &, class MWsGraphicResolver const &, class CBitmapContext &)
	call_vector_14 @ 14 NONAME ; class TRegion const & CCommandBuffer::ClippingRegion(void) const
	call_vector_15 @ 15 NONAME ; int CCommandBuffer::IsIdentical(class CCommandBuffer const &) const
	call_vector_16 @ 16 NONAME ; int CCommandBuffer::Play(class TPoint const &, class TRegion const *, class TRect const &, class RWsSession &, class CWindowGc &)
	call_vector_17 @ 17 NONAME ; int CCommandBuffer::Play(class TPoint const &, class TRegion const *, class TRect const &, class MWsGraphicResolver const &, class MWsGraphicsContext &)

