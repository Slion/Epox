//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: 
//
//! @file
//! @SYMTestSuiteName		PBASE-F32-RFS-Files-PublicApi-RAM
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.
//! @SYMScriptAuthor 		Sergei Tveritin
//! @SYMScriptDescription	The test script contains API files & directories related tests for RFs functions that perform operations on a RAM (not removeable RAM drive).

LOAD_SUITE	T_Sfsrv


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2001
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2001
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetSessionPath() and SessionPath() test.
//!				Uses API elements: SetSessionPath(), SessionPath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call SessionPath() and check that it returns "<DRIVE>:\base\T_Sfsrv\" where <DRIVE> is a test drive letter.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The path "<DRIVE>:\base\T_Sfsrv\" was successfully set and get where <DRIVE> is a test drive letter.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2001-001-SetSessionPath_command03
		COMMAND		RFs1	SessionPath		PBASE-F32-RFS-PublicApi-2001-001-SessionPath_command04
		COMMAND		RFs1	Close
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2001


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2002
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2002
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function RealName() test.
//!				Uses API elements: RealName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call RealName() and pass "test.txt" as parameter,
//!				   and check that it returns "<DRIVE>:\base\T_Sfsrv\test.txt" where <DRIVE> is a test drive letter.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function RealName() return "<DRIVE>:\base\T_Sfsrv\test.txt" successfully where <DRIVE> is a test drive letter.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2002-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2002-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	RealName		PBASE-F32-RFS-PublicApi-2002-001-RealName_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2002-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2002


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2003
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2003
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Parse(const TDesC &aName, TParse &aParse) test.
//!				Uses API elements: Parse().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create a file "test03.txt" in a "<DRIVE>:\base\T_Sfsrv\" directory where <DRIVE> is a test drive letter.
//!				3. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				4. Call Parse() and pass "test03.txt" as parameter,
//!				   and check that it return "test03" as a name of file, ".txt" as a extension.
//!				5. Remove the test03.txt file.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Parse() return KErrNone, "test03" and ".txt" returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2003-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2003-001-SetSessionPath_command09
		COMMAND		RFs1	Parse		PBASE-F32-RFS-PublicApi-2003-001-Parse_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2003-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2003


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2004
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2004
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Parse(const TDesC &aName, const TDesC &aRelated, TParse &aParse) test.
//!				Uses API elements: Parse().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Parse() and pass "*&test.txt" as parameter,
//!				   and check that it return "test" as a name of file, ".txt" as a extension and "*" as a related.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Parse() return KErrNone, "test",".txt" and "*" returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2004-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2004-001-SetSessionPath_command09
		COMMAND		RFs1	Parse		PBASE-F32-RFS-PublicApi-2004-001-Parse_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2004-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2004


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2005
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2005
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDir() test.
//!				Uses API elements: MkDir(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents has a "TestDir" of directory.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function MkDir() return KErrNone, "<DRIVE>:\base\T_Sfsrv\TestDir\" directory was successfully created.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2005-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2005-001-MkDir_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2005-001-GetDir_command05
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2005-001-RmDir_command06
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2005


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2006
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2006
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDirAll() test.
//!				Uses API elements: MkDirAll(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\TestDirAll\" as parameter.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents has a "TestDirAll" of directory.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDirAll\" as parameter.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function MkDirAll() return KErrNone, "<DRIVE>:\base\T_Sfsrv\TestDirAll\" directory was successfully created.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2006-001-SetSessionPath_command03
		COMMAND		RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2006-001-MkDirAll_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2006-001-GetDir_command05
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2006-001-RmDir_command06
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2006


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2007
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2007
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function RmDir() test.
//!				Uses API elements: RmDir(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				5. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents hasn't a "TestDir" of directory.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function RmDir() return KErrNone, "<DRIVE>:\base\T_Sfsrv\TestDir\" and "<DRIVE>:\base\T_Sfsrv\TestDirAll\" directories was successfully removed.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2007-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2007-001-MkDir_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2007-001-RmDir_command05
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2007-001-GetDir_command06
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2007


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2008
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2008
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetDir(const TDesC &aName, const TUidType &anEntryUid, TUint anEntrySortKey, CDir *&aFileList) test,
//!				with a filtered list of a directory's contents by UID type.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and and setting up parameter "_uidtype" as "0" for including UID type in filtered list.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Filtered list of a directory's contents by UID type has been returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2008-001-SetSessionPath_command03
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2008-001-GetDir_command04
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2008


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2009
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2009
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetDir(const TDesC &aName, TUint anEntryAttMask, TUint anEntrySortKey, CDir *&anEntryList, CDir *&aDirList) test,
//!				with a filtered list of the directory and file entries contained in a directory.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and setting up parameter "_isdirlist" as TRUE for filtered list of directory entries only.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The list of a directory's and files has been returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2009-001-SetSessionPath_command03
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2009-001-GetDir_command04
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2009


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2010
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2010
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Replace() test.
//!				Uses API elements: Replace(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Replace() and pass "testing.txt" as parameter as old name and "replace.txt" as parameter as a new name of file.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents has a "replace.txt" of file.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The file "testing.txt" replaced to "replace.txt" successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2010-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2010-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	Replace		PBASE-F32-RFS-PublicApi-2010-001-Replace_command10
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2010-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2010-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2010


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2011
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2011
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Rename() test.
//!				Uses API elements: Rename(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Rename() and pass "testing.txt" as parameter as old name and "rename.txt" as parameter as a new name of file.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents has a "rename.txt" of file.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The file "testing.txt" renamed to "rename.txt" successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2011-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2011-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	Rename		PBASE-F32-RFS-PublicApi-2011-001-Rename_command10
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2011-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2011-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2011


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2012
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2012
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Delete() test.
//!				Uses API elements: Delete(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Delete() and pass "testing.txt" as parameter.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents hasn't a "testing.txt" of file.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The file "testing.txt" was successfully removed.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2012-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2012-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2012-001-Delete_command10
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2012-001-GetDir_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2012


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2013
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2013
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions Att() and SetAtt() test.
//!				Uses API elements: SetAtt(), Att().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call SetAtt() and pass "KEntryAttReadOnly" of attribute as parameter for "test.txt" of file.
//!				4. Call Att() and pass "test.txt" as parameter,
//!				   and check that the "test.txt" file has a "KEntryAttReadOnly" of attribute.
//!				5. Call SetAtt() to clear "KEntryAttReadOnly" attribute for the "test.txt" file.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The attribute "KEntryAttReadOnly" was successfully set and get.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2013-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2013-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2013-001-SetAtt_command10
		COMMAND		RFs1	Att		PBASE-F32-RFS-PublicApi-2013-001-Att_command11
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2013-001-SetAtt_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2013-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2013


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2014
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2014
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetModified() and Modified() test.
//!				Uses API elements: SetModified(), Modified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call SetModified() and pass "20060101:" as parameter for "test.txt" of file.
//!				4. Call Modified() and pass "test.txt" as parameter,
//!				   and check that the "test.txt" file has a "20060101:" as last modification date.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The last modification date and time of a file was successfully set and get.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2014-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2014-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetModified		PBASE-F32-RFS-PublicApi-2014-001-SetModified_command10
		COMMAND		RFs1	Modified		PBASE-F32-RFS-PublicApi-2014-001-Modified_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2014-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2014


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2015
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2015
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetEntry() and Entry() test.
//!				Uses API elements: SetEntry(), Entry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call SetEntry()  and pass "20060101:" and "KEntryAttReadOnly" as parameter for "test.txt" of file.
//!				4. Call Entry() and pass "test.txt" as parameter,
//!				   and check that the "test.txt" file has a "20060101:" as last modification date,
//!				   and "KEntryAttReadOnly" as attribute.
//!				5. Call SetEntry() to clear "KEntryAttReadOnly" attribute for the "test.txt" file.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The last modification date and attribute of file was successfully set and get.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFile	RFile1
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2015-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2015-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2015-001-SetEntry_command10
		COMMAND		RFs1	Entry		PBASE-F32-RFS-PublicApi-2015-001-Entry_command11
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2015-001-SetEntry_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2015-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2015


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2016
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2016
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function ReadFileSection() test.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call ReadFileSection()  and pass "test.txt" as parameter, offset = 0, length = 10, buffer with a length = 10.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The data from a file "test.txt" returned successfully and not NULL.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2016-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2016-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2016-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2016-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2016-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2016


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2017
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2017
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function IsFileOpen() test.
//!				Uses API elements: IsFileOpen().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call IsFileOpen()  and pass "test.txt" as parameter and that it is not open.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The file "test.txt" is closed.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2017-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	IsFileOpen		PBASE-F32-RFS-PublicApi-2017-001-IsFileOpen_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2017-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2017


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2018
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2018
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetShortName() test.
//!				Uses API elements: GetShortName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetShortName() and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter,
//!				   and check that it return "test.txt".
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The short name "test.txt" return successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2018-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetShortName		PBASE-F32-RFS-PublicApi-2018-001-GetShortName_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2018-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2018


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2019
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2019
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetLongName() test.
//!				Uses API elements: GetLongName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetLongName() and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter,
//!				   and check that it return "test.txt".
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The long name "test.txt" return successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2019-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetLongName		PBASE-F32-RFS-PublicApi-2019-001-GetLongName_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2019-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2019


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2020
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2020
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function IsFileInRom() test.
//!				Uses API elements: IsFileInRom().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call IsFileInRom() and pass "test.txt" as parameter and check that faile is not in ROM.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The file "test.txt" is not in ROM.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2020-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2020-001-SetSessionPath_command09
		COMMAND		RFs1	IsFileInRom		PBASE-F32-RFS-PublicApi-2020-001-IsFileInRom_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2020-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2020


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2021
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2021
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function IsValidName(const TDesC &anEntryName) test.
//!				Uses API elements: IsValidName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call IsValidName() and pass "test.txt" as parameter and check that is valid name.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The filename "test.txt" is valid.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2021-001-SetSessionPath_command03
		COMMAND		RFs1	IsValidName		PBASE-F32-RFS-PublicApi-2021-001-IsValidName_command04
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2021


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2022
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2022
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function IsValidName(const TDesC &aFileName, TText &aBadChar) test with a illegal character within a filename.
//!				Uses API elements: IsValidName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call IsValidName() and pass "*&^test.txt" as parameter and check that isn't valid name.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The filename isn't valid and illegal characters "*" returned properly.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2022-001-SetSessionPath_command03
		COMMAND		RFs1	IsValidName		PBASE-F32-RFS-PublicApi-2022-001-IsValidName_command04
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2022


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2023
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2023
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function SetSessionToPrivate() test.
//!				Uses API elements: SetSessionToPrivate().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionToPrivate() and pass a drive as parameter.
//!				3. Call SessionPath() method and check that it return "<DRIVE>:\Private\200041C1\" where <DRIVE> is a letter of the drive and
//!				   "200041C1" must be the same number which is declared in mmp file as UID.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	SessionPath() returns KErrNone and the correct private path
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2023-001-SetSessionPath_command03
		COMMAND		RFs1	SetSessionToPrivate		PBASE-F32-RFS-PublicApi-2023-001-SetSessionToPrivate_command04
		COMMAND		RFs1	SessionPath		PBASE-F32-RFS-PublicApi-2023-001-SessionPath_command05
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2023


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2024
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2024
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function CreatePrivatePath() and PrivatePath() test.
//!				Uses API elements: CreatePrivatePath(), PrivatePath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call CreatePrivatePath() and pass a drive as parameter.
//!				3. Call PrivatePath() and check that it returns "\Private\200041C1\"
//!				   where "200041C1" must be the same number which is declared in mmp file as UID.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	The private path for the drive driver created and returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	CreatePrivatePath		PBASE-F32-RFS-PublicApi-2024-001-CreatePrivatePath_command03
		COMMAND		RFs1	PrivatePath		PBASE-F32-RFS-PublicApi-2024-001-PrivatePath_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2024-001-RmDir_command05
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2024


///////////////////////////////
//
// REALNAME
//
///////////////////////////////


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2026
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2026
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions RealName() test where file does not exist.
//!				Uses API elements: RealName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call RealName() and pass "<DRIVE>:\base\T_Sfsrv\none.txt" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function RealName() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	RealName		PBASE-F32-RFS-PublicApi-2026-001-RealName_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2026



///////////////////////////////
//
// SETSESSIONPATH
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2027
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2027
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetSessionPath() test where file does not exist.
//!				Uses API elements: SetSessionPath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\NoneDir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetSessionPath() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2027-001-SetSessionPath_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2027


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2028
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2028
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetSessionPath() negative test for session path is invalid.
//!				Uses API elements: SetSessionPath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetSessionPath() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2028-001-SetSessionPath_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2028



///////////////////////////////
//
// PARSE
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2029
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2029
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Parse(const TDesC &aName, TParse &aParse) test where name of parse is invalid.
//!				Uses API elements: Parse().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Parse() and pass "<DRIVE>:\<>:"/|.txt" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Parse() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Parse		PBASE-F32-RFS-PublicApi-2029-001-Parse_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2029


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2031
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2031
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Parse(const TDesC &aName, const TDesC &aRelated, TParse &aParse) test where name of parse is invalid.
//!				Uses API elements: Parse().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Parse() and pass "<DRIVE>:\<>:"/|.txt" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Parse() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Parse		PBASE-F32-RFS-PublicApi-2031-001-Parse_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2031


///////////////////////////////
//
// MKDIR
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2034
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2034
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function MkDir() negative test where name of directory is invalide.
//!				Uses API elements: MkDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\MkDir<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2034-001-SetSessionPath_command03
		COMMAND	!Error=-28	RFs1	MkDir		PBASE-F32-RFS-PublicApi-2034-001-MkDir_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2034


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2035
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2035
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function MkDir() negative test where directory is exist.
//!				Uses API elements: MkDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\MkDirTwice\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\MkDirTwice\" as parameter.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\MkDirTwice\" as parameter.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDir() return KErrAlreadyExists.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2035-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2035-001-MkDir_command04
		COMMAND	!Error=-11	RFs1	MkDir		PBASE-F32-RFS-PublicApi-2035-001-MkDir_command05
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2035-001-RmDir_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2035



///////////////////////////////
//
// MKDIRALL
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2036
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2036
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function MkDir() negative test where name of directory is invalide.
//!				Uses API elements: MkDirAll().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\MkDirAll<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDirAll() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2036-001-SetSessionPath_command03
		COMMAND	!Error=-28	RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2036-001-MkDirAll_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2036


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2037
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2037
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function MkDir() negative test where directory is exist.
//!				Uses API elements: MkDirAll().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\MkDirAllTwice\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\MkDirAllTwice\" as parameter.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\MkDirTwice\" as parameter.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDirAll() return KErrAlreadyExists.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2037-001-SetSessionPath_command03
		COMMAND			RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2037-001-MkDirAll_command04
		COMMAND	!Error=-11	RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2037-001-MkDirAll_command05
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2037-001-RmDir_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2037



///////////////////////////////
//
// RMDIR
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2038
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2038
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function RmDir() negative test where name of directory is invalid.
//!				Uses API elements: RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\RmDir<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function RmDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	RmDir		PBASE-F32-RFS-PublicApi-2038-001-RmDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2038


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2039
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2039
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function RmDir() negative test where directory does not exist.
//!				Uses API elements: RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\NoneDir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function RmDir() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	RmDir		PBASE-F32-RFS-PublicApi-2039-001-RmDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2039



///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2040
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2040
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) negative test,
//!				where name of directory is invalid.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\ErrDir<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2040-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2040


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2041
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2041
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) negative test,
//!				where directory does not exist.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\NoneDir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrPathNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-12	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2041-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2041


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2042
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2042
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) test,
//!				where sort key flag is used for exclusive matching.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create files "test42a.txt" and "test42b.txt".
//!				3. Call SetAtt() and pass "test42a.txt" as name and "KEntryAttReadOnly" as attribute of file.
//!				4. Call Att() and pass "test42a.txt" as name and check that the attrtribute "KEntryAttReadOnly" is set.
//!				5. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "KEntryAttMatchExclusive|KEntryAttReadOnly" as attribute bitmask where <DRIVE> is a test drive letter,
//!				   and check that the file "test42a.txt" is exist in list of entries.
//!				6. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "KEntryAttMatchExclusive|KEntryAttReadOnly" as attribute bitmask where <DRIVE> is a test drive letter,
//!				   and check that the file "test42b.txt" is not exist in list of entries.
//!				7. Call SetAtt() and pass "test42a.txt" as name and "KEntryAttNormal" as attribute of file.
//!				8. Delete files "test42a.txt" and "test42b.txt".
//!				9. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone, the file "test42a.txt" is not exist in list of entries.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2042-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2042-001-Create_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2042-001-SetAtt_command11
		COMMAND		RFs1	Att		PBASE-F32-RFS-PublicApi-2042-001-Att_command12
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2042-001-GetDir_command13
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2042-001-GetDir_command14
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2042-001-Delete_command15
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2042-001-SetAtt_command16
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2042-001-Delete_command17
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2042


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2043
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2043
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) test,
//!				where ordering is requested to be both ascending and descending at the same time.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "EAscending|EDescending" as sort key where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2043-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2043-001-Create_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2043-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2043-001-Delete_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2043-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2043



///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2044
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2044
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) negative test,
//!				where name of directory is invalide.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\ErrDir<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2044-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2044


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2045
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2045
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) negative test,
//!				where directory does not exist.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\NoneDir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrPathNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-12	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2045-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2045


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2046
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2046
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) test,
//!				where sort key flag is used for exclusive matching.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\Test46a\" as name where <DRIVE> is a test drive letter.
//!				3. Create file "test46a.txt".
//!				4. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "KEntryAttMatchExclusive|KEntryAttDir" as attribute bitmask where <DRIVE> is a test drive letter,
//!				   and check that the directories "Test46a" is exist in list of entries.
//!				5. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "KEntryAttMatchExclusive|KEntryAttDir" as attribute bitmask where <DRIVE> is a test drive letter,
//!				   and check that the file "test46a.txt" is not exist in list of entries.
//!				6. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\Test46a\" as name where <DRIVE> is a test drive letter.
//!				7. Delete file "test46a.txt".
//!				8. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone, the directories "Test46a" is not exist in list of entries.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFile	RFile1
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2046-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2046-001-MkDir_command09
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2046-001-GetDir_command10
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2046-001-GetDir_command11
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2046-001-RmDir_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2046-001-Delete_command13
		COMMAND		RFs1	Close
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2046


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2047
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2047
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) negative test,
//!				where ordering is requested to be both ascending and descending at the same time.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "EAscending|EDescending" as sort key where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2047-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2047-001-Create_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2047-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2047-001-Delete_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2047-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2047



///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2048
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2048
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) negative test,
//!				where name of directory is invalid.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\ErrDir<>:"/|\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2048-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2048


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2049
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2049
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) negative test,
//!				where directory name does not exist.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\NoneDir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrPathNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-12	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2049-001-GetDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2049


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2050
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2050
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) test,
//!				for invalid entry UID type.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "-12345" as UID type where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2050-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2050-001-Create_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2050-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2050-001-Delete_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2050-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2050


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2051
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2051
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) negative test,
//!				where ordering is requested to be both ascending and descending at the same time.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass parameters "<DRIVE>:\base\T_Sfsrv\" as name and "EAscending|EDescending" as sort key where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2051-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2051-001-Create_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2051-001-GetDir_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2051-001-Delete_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2051-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2051



///////////////////////////////
//
// DELETE
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2052
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2052
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test where file does not exist.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "<DRIVE>:\base\T_Sfsrv\nonefile.txt" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	Delete		PBASE-F32-RFS-PublicApi-2052-001-Delete_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2052


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2053
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2053
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test where name of file is invalid.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "<>:"/|.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Delete		PBASE-F32-RFS-PublicApi-2053-001-Delete_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2053


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2054
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2054
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test for readonly file.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "<DRIVE>:\base\T_Sfsrv\testing.txt" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrAccessDenied.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2054-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2054-001-SetAtt_command09
		COMMAND	!Error=-21	RFs1	Delete		PBASE-F32-RFS-PublicApi-2054-001-Delete_command10
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2054-001-SetAtt_command11
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2054-001-Delete_command12
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2054


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2055
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2055
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() test for system file.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call SetAtt() and pass parameters "testing.txt" as name and "KEntryAttSystem" attribute of file.
//!				4. Call Delete() and pass parameter "testing.txt" as name of file.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Delete() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2055-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2055-001-SetSessionPath_command09
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2055-001-SetAtt_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2055-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2055



///////////////////////////////
//
// REPLASE
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2056
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2056
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() negative test where old file does not exist.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Replace() and pass the parameters "none.txt" as old name and "replace.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2056-001-SetSessionPath_command03
		COMMAND	!Error=-1	RFs1	Replace		PBASE-F32-RFS-PublicApi-2056-001-Replace_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2056


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2057
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2057
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() negative test where old name of file is invalid.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Replace() and pass the parameters "<>:"/|.txt" as old name and "replace.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2057-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2057-001-SetSessionPath_command09
		COMMAND	!Error=-28	RFs1	Replace		PBASE-F32-RFS-PublicApi-2057-001-Replace_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2057-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2057


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2058
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2058
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() negative test where new name of file is invalid.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Replace() and pass the parameters "testing.txt" as old name and "<>:"/|.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2058-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2058-001-SetSessionPath_command09
		COMMAND	!Error=-28	RFs1	Replace		PBASE-F32-RFS-PublicApi-2058-001-Replace_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2058-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2058


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2059
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2059
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() test where new file exists and is a read-only file.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create two files "T_Sfsrv59_old.txt" and "T_Sfsrv59_new.txt", making sure that the files are closed.
//!				3. Call SetAtt() to set "T_Sfsrv59_new.txt" file's KEntryAttReadOnly attribute.
//!				4. Call Replace() and pass the parameters "T_Sfsrv59_old.txt" as old name and "T_Sfsrv59_new.txt" as a new name of file.
//!				5. Call Delete() method on old file name.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() returns KErrAccessDenied.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2059-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2059-001-Create_command07
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2059-001-SetAtt_command11
		COMMAND			RFs1	Att		PBASE-F32-RFS-PublicApi-2059-001-Att_command12
		COMMAND			RFs1	SetSessionPath	PBASE-F32-RFS-PublicApi-2059-001-SetSessionPath_command13
		COMMAND	!Error=-21    	RFs1	Replace		PBASE-F32-RFS-PublicApi-2059-001-Replace_command14
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2059-001-SetAtt_command15
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2059-001-Delete_command16
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2059-001-Delete_command17
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2059


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2060
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2060
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() negative test where new path of new file has a other drive.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\" as parameter where <DRIVE> is a MMC drive letter.
//!				3. Call Replace() and pass the parameters "T_Sfsrv60_old.txt" as old name and "\base\T_Sfsrv\T_Sfsrv60_new.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() return KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2060-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2060-001-SetSessionPath_command09
		COMMAND	!Error=-6	RFs1	Replace		PBASE-F32-RFS-PublicApi-2060-001-Replace_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2060-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2060


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2061
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2061
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where new path of new file has a other drive.
//!				Uses API elements: Rename().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\" as parameter where <DRIVE> is a MMC drive letter.
//!				3. Call Rename() and pass the parameters "T_Sfsrv61_old.txt" as old name and "\base\T_Sfsrv\T_Sfsrv61_new.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2061-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2061-001-SetSessionPath_command09
		COMMAND	!Error=-6	RFs1	Rename		PBASE-F32-RFS-PublicApi-2061-001-Rename_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2061-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2061


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2062
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2062
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where new name of file is invalid.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Rename() and pass the parameters "testing.txt" as old name and "<>:"/|.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2062-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2062-001-SetSessionPath_command09
		COMMAND	!Error=-28	RFs1	Rename		PBASE-F32-RFS-PublicApi-2062-001-Rename_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2062-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2062


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2063
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2063
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where old name of file is invalid.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Rename() and pass the parameters "<>:"/|.txt" as old name and "rename.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2063-001-SetSessionPath_command03
		COMMAND	!Error=-28	RFs1	Rename		PBASE-F32-RFS-PublicApi-2063-001-Rename_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2063


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2064
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2064
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where new file is exist and read only.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Rename() and pass the parameters "testing.txt" as old name and "rename.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrAlreadyExists.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2064-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2064-001-Create_command07
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2064-001-SetAtt_command11
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2064-001-SetSessionPath_command12
		COMMAND	!Error=-11	RFs1	Rename		PBASE-F32-RFS-PublicApi-2064-001-Rename_command13
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2064-001-SetAtt_command14
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2064-001-Delete_command15
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2064-001-Delete_command16
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2064


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2065
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2065
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where old file does not exist.
//!				Uses API elements: Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Rename() and pass the parameters "none.txt" as old name and "rename.txt" as a new name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2065-001-SetSessionPath_command03
		COMMAND	!Error=-1	RFs1	Rename		PBASE-F32-RFS-PublicApi-2065-001-Rename_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2065



///////////////////////////////
//
// ATT
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2066
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2066
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Att() negative test where file does not exist.
//!				Uses API elements: Att().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Att() and pass parameter "<DRIVE>:\base\T_Sfsrv\none.txt" as name of file where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Att() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	Att		PBASE-F32-RFS-PublicApi-2066-001-Att_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2066


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2067
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2067
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Att() negative test where name of file is invalid.
//!				Uses API elements: Att().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Att() and pass parameter "<>:"/|.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Att() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Att		PBASE-F32-RFS-PublicApi-2067-001-Att_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2067



///////////////////////////////
//
// SETATT
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2068
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2068
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetAtt() negative test where file does not exist.
//!				Uses API elements: SetAtt().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameter "none.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetAtt() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2068-001-SetAtt_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2068


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2069
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2069
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Att() negative test where name of file is invalid.
//!				Uses API elements: AttSetAtt).
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameter "<>:"/|.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetAtt() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2069-001-SetAtt_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2069


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2070
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2070
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetAtt() test where the attribute to be set is too big number.
//!				Uses API elements: SetAtt().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameters "testing.txt" as name and "99999999" as set attribute.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetAtt() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2070-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2070-001-SetAtt_command09
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2070-001-SetAtt_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2070-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2070


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2071
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2071
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetAtt() test where the sets attribute "KEntryAttVolume" for RAM drive.
//!				Uses API elements: SetAtt(), Att().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameters "<DRIVE>:\" as name and "KEntryAttVolume" as attribute to be set, where <DRIVE> is a test drive letter.
//!				3. Call Att() and check that attribute "KEntryAttVolume" is ignored.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetAtt() and Att() return KErrBadName, as "<DRIVE>:\" is not a valid file name or directory
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2071-001-SetAtt_command04
		COMMAND	!Error=-28	RFs1	Att		PBASE-F32-RFS-PublicApi-2071-001-Att_command05
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2071


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2072
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2072
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetAtt() negative test where attribute appears in both bitmasks.
//!				Uses API elements: SetAtt().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameters "testing.txt" as name and "KEntryAttReadOnly" as clear attribute.
//!				   and "KEntryAttReadOnly" as set attribute.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetAtt() return FSCLIENT panic Code = 21.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2072-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND	!Error=-28	RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2072-001-SetAtt_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2072-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	!PanicCode=21 !PanicString="FSCLIENT panic"
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2072-002-Delete_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2072



///////////////////////////////
//
// MODIFIED
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2073
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2073
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Modified() negative test where name of file is invalid.
//!				Uses API elements: Modified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Modified() and pass "<>:"/|.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Modified() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Modified		PBASE-F32-RFS-PublicApi-2073-001-Modified_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2073


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2074
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2074
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Modified() negative test where file does not exist.
//!				Uses API elements: Modified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Modified() and pass "none.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Modified() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	Modified		PBASE-F32-RFS-PublicApi-2074-001-Modified_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2074



///////////////////////////////
//
// SETMODIFIED
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2075
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2075
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetModified() negative test where file does not exist.
//!				Uses API elements: SetModified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetModified() and pass parameters "20060101:" as time and "none.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetModified() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	SetModified		PBASE-F32-RFS-PublicApi-2075-001-SetModified_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2075


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2076
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2076
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetModified() negative test where name of file is invalid.
//!				Uses API elements: SetModified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetModified() and pass parameters "20060101:" as time and "<>:"/|.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetModified() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	SetModified		PBASE-F32-RFS-PublicApi-2076-001-SetModified_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2076


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2077
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2077
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetModified() test where time is 0.
//!				Uses API elements: SetModified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetModified() and pass parameters 0-time and "test.txt" (that resides on a MMC drive) as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetModified() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2077-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetModified		PBASE-F32-RFS-PublicApi-2077-001-SetModified_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2077-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2077


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2078
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2078
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetModified() negative test when the file is read only and open.
//!				Uses API elements: SetModified().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Open();
//!				3. Call SetModified() and pass parameters "20060101:" as time and "testing.txt" as name of file.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetModified() return KErrInUse.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2078-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2078-001-SetAtt_command08
		COMMAND			RFile1	Open		PBASE-F32-RFS-PublicApi-2078-001-Open_command10
		COMMAND	!Error=-14	RFs1	SetModified		PBASE-F32-RFS-PublicApi-2078-001-SetModified_command12
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2078-001-SetAtt_command17
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2078-001-Delete_command18
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2078



///////////////////////////////
//
// ENTRY
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2079
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2079
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Entry() negative test where name of file is invalid.
//!				Uses API elements: Entry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Entry() and pass "<>:"/|.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Entry() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Entry		PBASE-F32-RFS-PublicApi-2079-001-Entry_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2079


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2080
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2080
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions Entry() negative test where file does not exist.
//!				Uses API elements: Entry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Entry() and pass "none.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Entry() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	Entry		PBASE-F32-RFS-PublicApi-2080-001-Entry_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2080



///////////////////////////////
//
// SETENTRY
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2081
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2081
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() negative test where file does not exist.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass "none.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetEntry() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2081-001-SetEntry_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2081


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2082
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2082
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() negative test where name of file is invalid.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass "<>:"/|.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetEntry() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2082-001-SetEntry_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2082


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2083
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2083
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() test where set attribute is a big number.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass parameters "test.txt" as name and "2147483647" (hex FFFFFFFF) as set attribute of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetEntry() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2083-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2083-001-SetEntry_command09
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2083-001-SetEntry_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2083-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2083


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2084
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2084
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() negative test where an attribute is set and unset in the same time.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass parameters "test.txt" as name and KEntryAttReadOnly as both clear and set attribute.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetEntry() return FSCLIENT panic Code = 21.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2084-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2084-001-SetEntry_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2084-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	!PanicCode=21 !PanicString="FSCLIENT panic"
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2084-002-Delete_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2084


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2085
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2085
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() negative test where time is negative.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass parameters "test.txt" as name (that resides on a MMC drive) and "-12345" as time and read only.
//!				3. Call Delete() fails with error KErrAccessDenied
//!				4. Call SetEntry() and remove read only.
//!				5. Call Delete().
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	First Delete() call returns KErrAccessDenied.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2085-001-Create_command05
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND			RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2085-001-SetEntry_command09
		COMMAND	!Error=-21	RFs1	Delete		PBASE-F32-RFS-PublicApi-2085-001-Delete_command10
		COMMAND			RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2085-001-SetEntry_command11
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2085-001-Delete_command12
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE			PBASE-F32-RFS-PublicApi-2085


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2086
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2086
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Functions SetEntry() negative test where attribute appears in both bitmasks.
//!				Uses API elements: SetEntry().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetEntry() and pass parameters "test.txt" as name and "KEntryAttReadOnly" as set attribute
//!				   and "KEntryAttReadOnly" as clear attribute.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetEntry() return FSCLIENT panic Code = 21.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2086-001-Create_command05
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2086-001-SetEntry_command09
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2086-001-Delete_command10
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	!PanicCode=21 !PanicString="FSCLIENT panic"
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2086-002-Delete_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2086



///////////////////////////////
//
// READFILESECTION
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2087
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2087
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function ReadFileSection() negative test where name of file is invalid.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call ReadFileSection() and pass parameter "<>:"/|.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function ReadFileSection() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2087-001-ReadFileSection_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2087


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2088
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2088
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function ReadFileSection() negative test where file does not exist.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call ReadFileSection() and pass parameter "none.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function ReadFileSection() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2088-001-ReadFileSection_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2088


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2089
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2089
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function ReadFileSection() negative test where the offset from the start is negative.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call ReadFileSection() and pass parameters "test.txt" as name of file and "-12345" as offset.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function ReadFileSection() return panic FSCLIENT: 19.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2089-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2089-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2089-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2089-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2089-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	!PanicCode=19 !PanicString="FSCLIENT panic"
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2089-002-Delete_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2089


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2090
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2090
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function ReadFileSection() negative test where the number of bytes to be read from the file greater than the maximum length of the target buffer.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Creating the buffer length equaling 10 bytes for the data to be read from the file.
//!				2. Call ReadFileSection() and pass parameters "test.txt" as name,
//!				   "20" as the number of bytes to be read from the file,
//!				   "10" as the buffer length for the data to be read from the file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function ReadFileSection() return FSCLIENT panic = 27.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2090-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2090-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2090-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2090-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2090-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	!PanicCode=27 !PanicString="FSCLIENT panic"
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2090-002-Delete_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2090



///////////////////////////////
//
// ISFILEISOPEN
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2091
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2091
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function IsFileOpen() negative test where name of file is invalid.
//!				Uses API elements: IsFileOpen().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call IsFileOpen() and pass parameter "<>:"/|.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function IsFileOpen() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	IsFileOpen		PBASE-F32-RFS-PublicApi-2091-001-IsFileOpen_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2091


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2092
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2092
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function IsFileOpen() negative test where file does not exist.
//!				Uses API elements: IsFileOpen().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call IsFileOpen() and pass parameter "<DRIVE>:\base\T_Sfsrv\none.txt" as name of file where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function IsFileOpen() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	IsFileOpen		PBASE-F32-RFS-PublicApi-2092-001-IsFileOpen_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2092



///////////////////////////////
//
// GETSHORTNAME
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2093
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2093
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetShortName() negative test where name of file is invalid.
//!				Uses API elements: GetShortName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetShortName() and pass parameter "<DRIVE>:\base\T_Sfsrv\<>:"/|.txt" as name of file where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function IsFileOpen() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	GetShortName		PBASE-F32-RFS-PublicApi-2093-001-GetShortName_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2093


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2094
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2094
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetShortName() negative test where file does not exist.
//!				Uses API elements: GetShortName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetShortName() and pass parameter "<DRIVE>:\base\T_Sfsrv\none.txt" as name of file where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function IsFileOpen() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	GetShortName		PBASE-F32-RFS-PublicApi-2094-001-GetShortName_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2094



///////////////////////////////
//
// GETLONGNAME
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2095
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2095
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetLongName() negative test where name of file is invalid.
//!				Uses API elements: GetLongName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetLongName() and pass parameter "<DRIVE>:\base\T_Sfsrv\<>:"/|.txt" as name of file where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetLongName() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	GetLongName		PBASE-F32-RFS-PublicApi-2095-001-GetLongName_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2095


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2096
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2096
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetLongName() negative test where file does not exist.
//!				Uses API elements: GetLongName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetLongName() and pass parameter "none.txt" as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetLongName() return KErrNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-1	RFs1	GetLongName		PBASE-F32-RFS-PublicApi-2096-001-GetLongName_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2096



///////////////////////////////
//
// ISFILEINROM
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2097
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2097
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function IsFileInRom() test where name of file is invalid.
//!				Uses API elements: IsFileInRom().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call IsFileInRom() and pass parameter "<DRIVE>:\base\T_Sfsrv\<>:"/|.txt" as name of file and check that the result is FALSE where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function IsFileInRom() return FALSE.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	IsFileInRom		PBASE-F32-RFS-PublicApi-2097-001-IsFileInRom_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2097


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2098
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2098
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function IsFileInRom() test where file does not exist.
//!				Uses API elements: IsFileInRom().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call IsFileInRom() and pass parameter "<DRIVE>:\base\T_Sfsrv\none.txt" as name of file and check that the result is FALSE where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function IsFileInRom() return FALSE.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	IsFileInRom		PBASE-F32-RFS-PublicApi-2098-001-IsFileInRom_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2098



///////////////////////////////
//
// ISVALIDNAME (const TDesC &anEntryName)
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2099
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2099
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function IsValidName(const TDesC &anEntryName) test where name has double backslashes.
//!				Uses API elements: IsValidName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call IsValidName() and pass parameter "<DRIVE>:\\\\test.txt" as name of file and check that the result is FALSE where <DRIVE> is a test drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function IsValidName() return FALSE.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	IsValidName		PBASE-F32-RFS-PublicApi-2099-001-IsValidName_command03
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2099


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2102
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2102
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function SetSessionToPrivate() test where drive is nonmounted.
//!				Uses API elements: SetSessionToPrivate().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionToPrivate() and pass "<DRIVE>" as parameter where <DRIVE> is nonmounted drive letter.
//!				3. Call RFile:Create to create a file in private location
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function RFile:Create() return KErrNotReady.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	rfs
		CREATE_OBJECT	RFile	file
		COMMAND			rfs	new
		COMMAND			rfs	Connect
		COMMAND			rfs	FileSystemName		PBASE-F32-RFS-PublicApi-2102-001-FileSystemName_command03
		COMMAND			rfs	DismountFileSystem		PBASE-F32-RFS-PublicApi-2102-001-DismountFileSystem_command04
		COMMAND			rfs	SetSessionToPrivate		PBASE-F32-RFS-PublicApi-2102-001-SetSessionToPrivate_command05
		COMMAND			file	new
		COMMAND	!Error=-18	file	Create		PBASE-F32-RFS-PublicApi-2102-001-Create_command08
		COMMAND			file	Close
		COMMAND			file	~
		COMMAND			rfs	MountFileSystem		PBASE-F32-RFS-PublicApi-2102-001-MountFileSystem_command12
		COMMAND			rfs	Close
		COMMAND			rfs	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2102


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2104
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2104
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function CreatePrivatePath() negative test where drive is nonmounted.
//!				Uses API elements: CreatePrivatePath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call CreatePrivatePath() and pass "<DRIVE>" as parameter where <DRIVE> is nonmounted drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function CreatePrivatePath() return KErrNotReady.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	FileSystemName		PBASE-F32-RFS-PublicApi-2104-001-FileSystemName_command03
		COMMAND			RFs1	DismountFileSystem		PBASE-F32-RFS-PublicApi-2104-001-DismountFileSystem_command04
		COMMAND	!Error=-18	RFs1	CreatePrivatePath		PBASE-F32-RFS-PublicApi-2104-001-CreatePrivatePath_command05
		COMMAND			RFs1	MountFileSystem		PBASE-F32-RFS-PublicApi-2104-001-MountFileSystem_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2104


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2105
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2105
//! @SYMAPI			RFs
//! @SYMCreationDate		19/03/2007
//! @SYMTestCaseDesc		Functions SetAtt() test where the sets attribute "KEntryAttVolume" for a file.
//!				Uses API elements: SetAtt(), Att().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetAtt() and pass parameters "<DRIVE>:\test2105.txt" as name and "KEntryAttVolume" as attribute to be set, where <DRIVE> is a test drive letter.
//!				3. Call Att() check that "KEntryAttVolume" is not set.
//!				4. Call Delete() method.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetAtt() return KErrNone, KEntryAttVolume cannot be used and is ignored.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	rfs
		CREATE_OBJECT	RFile	file
		COMMAND		rfs	new
		COMMAND		rfs	Connect
		COMMAND		file	new
		COMMAND		file	Create		PBASE-F32-RFS-PublicApi-2105-001-Create_command05
		COMMAND		file	Close
		COMMAND		file	~
		COMMAND		rfs	SetAtt		PBASE-F32-RFS-PublicApi-2105-001-SetAtt_command09
		COMMAND		rfs	Att		PBASE-F32-RFS-PublicApi-2105-001-Att_command10
		COMMAND		rfs	Delete		PBASE-F32-RFS-PublicApi-2105-001-Delete_command11
		COMMAND		rfs	Close
		COMMAND		rfs	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2105

///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2201
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2201
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) negative test, 
//!				where name of directory include wildcard.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create a "<DRIVE>:\base\T_Sfsrv\testdir\" directory where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\te*\" as parameter.
//!				4. Remove "<DRIVE>:\base\T_Sfsrv\testdir\" directory.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	MkDir		PBASE-F32-RFS-PublicApi-2201-001-MkDir_command03
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2201-001-GetDir_command04
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2201-001-RmDir_command05
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2201


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2202
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2202
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) test, 
//!				where name of files include wildcard.
//!				Uses API elements: SetSessionPath(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create files "file1.txt" and "file2.txt"
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file1.txt" of file.
//!				5. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file2.txt" of file.
//!				6. Delete files "file1.txt" and "file2.txt"
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2202-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2202-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2202-001-Create_command08
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2202-001-GetDir_command12
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2202-001-GetDir_command13
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2202-001-Delete_command14
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2202-001-Delete_command15
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2202


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2203
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2203
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList) negative test, 
//!				where path includes nonmounted drive.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\" as parameter where <DRIVE> is nonmounted drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNotReady.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	FileSystemName		PBASE-F32-RFS-PublicApi-2203-001-FileSystemName_command03
		COMMAND			RFs1	DismountFileSystem		PBASE-F32-RFS-PublicApi-2203-001-DismountFileSystem_command04
		COMMAND	!Error=-18	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2203-001-GetDir_command05
		COMMAND			RFs1	MountFileSystem		PBASE-F32-RFS-PublicApi-2203-001-MountFileSystem_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2203


///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2204
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2204
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) negative test, 
//!				where name of directory include wildcard.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create a "<DRIVE>:\base\T_Sfsrv\testdir\" directory where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\te*\" as parameter.
//!				4. Remove "<DRIVE>:\base\T_Sfsrv\testdir\" directory.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	MkDir		PBASE-F32-RFS-PublicApi-2204-001-MkDir_command03
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2204-001-GetDir_command04
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2204-001-RmDir_command05
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2204


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2205
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2205
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) test, 
//!				where name of files include wildcard.
//!				Uses API elements: SetSessionPath(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create files "file1.txt" and "file2.txt"
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file1.txt" of file.
//!				5. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file2.txt" of file.
//!				6. Delete files "file1.txt" and "file2.txt"
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2205-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2205-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2205-001-Create_command08
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2205-001-GetDir_command12
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2205-001-GetDir_command13
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2205-001-Delete_command14
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2205-001-Delete_command15
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2205


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2206
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2206
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,TUint anEntryAttMask,TUint anEntrySortKey,CDir*& anEntryList,CDir*& aDirList) negative test,
//!				where path includes nonmounted drive.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\" as parameter where <DRIVE> is nonmounted drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNotReady.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	FileSystemName		PBASE-F32-RFS-PublicApi-2206-001-FileSystemName_command03
		COMMAND			RFs1	DismountFileSystem		PBASE-F32-RFS-PublicApi-2206-001-DismountFileSystem_command04
		COMMAND	!Error=-18	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2206-001-GetDir_command05
		COMMAND			RFs1	MountFileSystem		PBASE-F32-RFS-PublicApi-2206-001-MountFileSystem_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2206


///////////////////////////////
//
// GETDIR
// TInt GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) const;
//
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2207
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2207
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) negative test, 
//!				where name of directory include wildcard.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Create a "<DRIVE>:\base\T_Sfsrv\testdir\" directory where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\te*\" as parameter.
//!				4. Remove "<DRIVE>:\base\T_Sfsrv\testdir\" directory.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	MkDir		PBASE-F32-RFS-PublicApi-2207-001-MkDir_command03
		COMMAND	!Error=-28	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2207-001-GetDir_command04
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2207-001-RmDir_command05
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2207


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2208
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2208
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) test, 
//!				where name of files include wildcard.
//!				Uses API elements: SetSessionPath(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create files "file1.txt" and "file2.txt"
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file1.txt" of file.
//!				5. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\*.txt" as parameter where <DRIVE> is a test drive letter.
//!				   and check that list of directory contents has a "file2.txt" of file.
//!				6. Delete files "file1.txt" and "file2.txt"
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetDir() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2208-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2208-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2208-001-Create_command08
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2208-001-GetDir_command12
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2208-001-GetDir_command13
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2208-001-Delete_command14
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2208-001-Delete_command15
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2208


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2209
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2209
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function GetDir(const TDesC& aName,const TUidType& anEntryUid,TUint anEntrySortKey,CDir*& aFileList) negative test,
//!				where path includes nonmounted drive.
//!				Uses API elements: GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call GetDir() and pass "<DRIVE>:\" as parameter where <DRIVE> is nonmounted drive letter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function GetDir() return KErrNotReady.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	FileSystemName		PBASE-F32-RFS-PublicApi-2209-001-FileSystemName_command03
		COMMAND			RFs1	DismountFileSystem		PBASE-F32-RFS-PublicApi-2209-001-DismountFileSystem_command04
		COMMAND	!Error=-18	RFs1	GetDir		PBASE-F32-RFS-PublicApi-2209-001-GetDir_command05
		COMMAND			RFs1	MountFileSystem		PBASE-F32-RFS-PublicApi-2209-001-MountFileSystem_command06
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2209


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2210
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2210
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Rename() negative test where new name of file includes wildcard.
//!				Uses API elements: SetSessionPath(), Rename().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create file "test_old.txt".
//!				4. Call Rename() and pass the parameters "test_old.txt" as old name and "test*.txt" as a new name of file.
//!				5. Delete file "test_old.txt".
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Rename() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2210-001-SetSessionPath_command03
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2210-001-Create_command06
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND	!Error=-28	RFs1	Rename		PBASE-F32-RFS-PublicApi-2210-001-Rename_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2210-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2210


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2211
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2211
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function Rename() test of renaming the directories.
//!				Uses API elements: SetSessionPath(), Rename(), GetDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\DirOld\" as parameter where <DRIVE> is a test drive letter.
//!				4. Call Rename() and pass the parameters "DirOld" as old name and "DirNew" as a new name of directory.
//!				5. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter,
//!				   and check that list of directory contents has a "DirNew" of directory.
//!				6. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\DirNew\" as parameter where <DRIVE> is a test drive letter.
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function Rename() returns KErrNone, the directory "DirOld" renamed to "DirNew" successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2211-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2211-001-MkDir_command04
		COMMAND		RFs1	Rename		PBASE-F32-RFS-PublicApi-2211-001-Rename_command05
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2211-001-GetDir_command06
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2211-001-RmDir_command07
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2211


///////////////////////////////
// REPLACE
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2212
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2212
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Replace() negative test where new name of file includes wildcard.
//!				Uses API elements: SetSessionPath(), Replace().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create file "test_old.txt".
//!				4. Call Replace() and pass the parameters "test_old.txt" as old name and "*.txt" as a new name of file.
//!				5. Delete files "test_old.txt".
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Replace() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2212-001-SetSessionPath_command03
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2212-001-Create_command06
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND	!Error=-28	RFs1	Replace		PBASE-F32-RFS-PublicApi-2212-001-Replace_command10
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2212-001-Delete_command11
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2212


///////////////////////////////
// MKDIR
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2213
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2213
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDir() negative test that would create a directory in a directory that doesn't exist.
//!				Uses API elements: MkDir(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExist\NewDir\" as parameter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents hasn't a "DoesntExist" of directory.
//!				4. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDir() return KErrPathNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-12	RFs1	MkDir		PBASE-F32-RFS-PublicApi-2213-001-MkDir_command03
		COMMAND			RFs1	GetDir		PBASE-F32-RFS-PublicApi-2213-001-GetDir_command04
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2213


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2214
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2214
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDir() test where the path doesn't end with "\".
//!				Uses API elements: MkDir(), GetDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExist\NewDir" as parameter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   and check that list of directory contents has a "DoesntExist" of directory.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExist\" as parameter,
//!				   and check that list of directory contents hasn't a "NewDir" of directory.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\DoesntExist\" as parameter.
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function MkDir() return KErrNone, directories "DoesntExist" is created, "NewDir" not created..
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2214-001-MkDir_command03
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2214-001-GetDir_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2214-001-GetDir_command05
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2214-001-RmDir_command06
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2214


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2215
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2215
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDir() negative test where the path doesn't exist and not ended with "\".
//!				Uses API elements: MkDir(), GetDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExist\NewDir1\NewDir2" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function MkDir() return KErrPathNotFound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-12	RFs1	MkDir		PBASE-F32-RFS-PublicApi-2215-001-MkDir_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2215


///////////////////////////////
// MKDIRALL
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2216
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2216
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function MkDirAll() that would create a directory in a directory that doesn't exist.
//!				Uses API elements: MkDirAll(), GetDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\NewDirAll\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   check that list of directory contents has a "DoesntExistAll" of directory.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\" as parameter,
//!				   check that list of directory contents has a "NewDirAll" of directory.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\NewDirAll\" as parameter.
//!				6. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\" as parameter.
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function MkDirAll() return KErrNone, directories "DoesntExistAll" and "NewDirAll" is created.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2216-001-MkDirAll_command03
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2216-001-GetDir_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2216-001-GetDir_command05
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2216-001-RmDir_command06
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2216-001-RmDir_command07
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2216


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2217
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2217
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function MkDirAll() test where the path doesn't end with "\".
//!				Uses API elements: MkDirAll(), GetDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDirAll() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\NewDirAll" as parameter where <DRIVE> is a test drive letter.
//!				3. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   check that list of directory contents has a "DoesntExistAll" of directory.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\" as parameter,
//!				   check that list of directory contents hasn't a "NewDirAll" of directory.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\DoesntExistAll\" as parameter.
//!				6. Call Close() method
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function MkDirAll() return KErrNone, directories "DoesntExistAll" is created, "NewDirAll" not created.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDirAll		PBASE-F32-RFS-PublicApi-2217-001-MkDirAll_command03
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2217-001-GetDir_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2217-001-GetDir_command05
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2217-001-RmDir_command06
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2217


///////////////////////////////
// DELETE
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2218
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2218
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test where name of file includes "?" of wildcard.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "delete?.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Delete		PBASE-F32-RFS-PublicApi-2218-001-Delete_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2218


///////////////////////////////
// RMDIR
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2219
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2219
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function RmDir() negative test removing non empty directory.
//!				Uses API elements: RmDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\" as parameter.
//!				3. Call Create() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\file1.txt" as parameter where <DRIVE> is a test drive letter.
//!				4. Call Create() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\file2.txt" as parameter where <DRIVE> is a test drive letter.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\" as parameter where <DRIVE> is a test drive letter.
//!				6. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   check that list of directory contents has a "RmDir" of directory.
//!				7. Delete files "file1.txt" and "file2.txt".
//!				8. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\" as parameter.
//!				9. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function RmDir() return KErrInUse.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2219-001-SetSessionPath_command03
		COMMAND			RFs1	MkDir		PBASE-F32-RFS-PublicApi-2219-001-MkDir_command04
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2219-001-Create_command07
		COMMAND			RFile1	Close
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2219-001-Create_command09
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND	!Error=-14	RFs1	RmDir		PBASE-F32-RFS-PublicApi-2219-001-RmDir_command13
		COMMAND			RFs1	GetDir		PBASE-F32-RFS-PublicApi-2219-001-GetDir_command14
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2219-001-Delete_command15
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2219-001-Delete_command16
		COMMAND			RFs1	RmDir		PBASE-F32-RFS-PublicApi-2219-001-RmDir_command17
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2219


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2220
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2220
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function RmDir() test removing directory where path doesn't end with a backslash.
//!				Uses API elements: MkDir(), GetDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\RmDir\" as parameter.
//!				3. Call RmDir) and pass "<DRIVE>:\base\T_Sfsrv\RmDir\None" as parameter where <DRIVE> is a test drive letter.
//!				4. Call GetDir() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter,
//!				   check that list of directory contents hasn't a "RmDir" of directory.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function RmDir() return KErrNone, directory "RmDir" is removed.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2220-001-MkDir_command03
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2220-001-RmDir_command04
		COMMAND		RFs1	GetDir		PBASE-F32-RFS-PublicApi-2220-001-GetDir_command05
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2220


///////////////////////////////
// GETSHORTNAME
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2221
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2221
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetShortName() test.
//!				Uses API elements: SetSessionPath(), GetShortName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create file "TestLongNameFile.txt".
//!				4. Call GetShortName() and pass "TestLongNameFile.txt" as parameter of long name of file,
//!				   and check that it return "TESTLO~1.TXT".
//!				5. Delete file "TestLongNameFile.txt".
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetShortName() return KErNone, the short name "TESTLO~1.TXT" return successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2221-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2221-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetShortName		PBASE-F32-RFS-PublicApi-2221-001-GetShortName_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2221-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2221


///////////////////////////////
// GETLONGNAME
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2222
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2222
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function GetLongName() test.
//!				Uses API elements: SetSessionPath(), GetLongName().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Create file "TestLongNameFile.txt".
//!				4. Call GetLongName() and pass "TESTLO~1.TXT"  as parameter of short name of file,
//!				   and check that it return "TestLongNameFile.txt".
//!				5. Delete file "TestLongNameFile.txt".
//!				6. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function GetLongName() return KErNone, the long name "TestLongNameFile.txt" return successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2222-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2222-001-Create_command06
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	GetLongName		PBASE-F32-RFS-PublicApi-2222-001-GetLongName_command10
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2222-001-Delete_command11
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2222


///////////////////////////////
// ISFILEOPEN
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2223
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2223
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function IsFileOpen() test.
//!				Uses API elements: SetSessionPath(), IsFileOpen().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call RFile's Open() and pass "test.txt" as parameter of file name.
//!				4. Call IsFileOpen()  and pass "test.txt" as parameter and check that it is open.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function IsFileOpen() return KErNone, file "test.txt" is open.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2223-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2223-001-Create_command06
		COMMAND		RFs1	IsFileOpen		PBASE-F32-RFS-PublicApi-2223-001-IsFileOpen_command08
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2223-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2223


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2224
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2224
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetSessionPath() test where path is an empty string and function SessionPath() test
//!				where check that the current path is system default path.
//!				Uses API elements: SetSessionPath(), SessionPath().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and some valid directory path on the C-drive.
//!				3. Call SetSessionPath() and pass empty string as parameter of path.
//!				4. Call SessionPath() and check that it is the same as was set by the first SetSessionPath() call.
//!				5. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetSessionPath return KErrNone and doesn't change session path.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2224-001-SetSessionPath_command03
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2224-001-SetSessionPath_command04
		COMMAND		RFs1	SessionPath		PBASE-F32-RFS-PublicApi-2224-001-SessionPath_command05
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2224


///////////////////////////////
// SETATT & ATT
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2225
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2225
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetAtt() and Att() test for directory.
//!				Uses API elements: SetSessionPath(), SetAtt() and Att(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				4. Call SetAtt() and pass "TestDir" as name of directory.
//!				5. Call Att() and pass "TestDir" as name of directory and check that flag of directory is set.
//!				6. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetAtt() and Att() return KErrNone, flag of directory is set.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2225-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2225-001-MkDir_command04
		COMMAND		RFs1	SetAtt		PBASE-F32-RFS-PublicApi-2225-001-SetAtt_command05
		COMMAND		RFs1	Att		PBASE-F32-RFS-PublicApi-2225-001-Att_command06
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2225-001-RmDir_command07
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2225


///////////////////////////////
// SETENTRY & ENTRY
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2226
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2226
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetEntry() and Entry() test for directory.
//!				Uses API elements: SetSessionPath(), SetEntry(), Entry(), Modified(),  MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\TetsDir\" as parameter.
//!				4. Call SetEntry() and pass "TestDir" as name of directory, "20090101" as time of modified. 
//!				5. Call Entry() and pass "TestDir" as name of directory and check that flag of directory is set.
//!				6. Call Modified() and pass "TestDir" as name of directory and check that time of modified is set to "20090101".
//!				7. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				8. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetEntry() and Entry() return KErrNone, time of modified is set to "20090101".
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2226-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2226-001-MkDir_command04
		COMMAND		RFs1	SetEntry		PBASE-F32-RFS-PublicApi-2226-001-SetEntry_command05
		COMMAND		RFs1	Entry		PBASE-F32-RFS-PublicApi-2226-001-Entry_command06
		COMMAND		RFs1	Modified		PBASE-F32-RFS-PublicApi-2226-001-Modified_command07
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2226-001-RmDir_command08
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2226


///////////////////////////////
// SETMODIFIED & MODIFIED
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2227
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2227
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions SetModified() and Modified() test for directory and uses SetModified() to set a future time for the directory.
//!				Uses API elements: SetSessionPath(), SetEntry(), Entry(), Modified(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				4. Call SetModified() and pass "TestDir" as name of directory, "20990101" as time of modified. 
//!				5. Call Modified() and pass "TestDir" as name of directory and check that time of modified is set to "20990101".
//!				6. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\TestDir\" as parameter.
//!				7. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetModified() and Modified() return KErrNone, time of modified is set to "20990101".
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2227-001-SetSessionPath_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-2227-001-MkDir_command04
		COMMAND		RFs1	SetModified		PBASE-F32-RFS-PublicApi-2227-001-SetModified_command05
		COMMAND		RFs1	Modified		PBASE-F32-RFS-PublicApi-2227-001-Modified_command06
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-2227-001-RmDir_command07
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2227


///////////////////////////////
// READFILESECTION
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2229
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2229
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions ReadFileSection() test where offset, in bytes, from the start has some positive number.
//!				Uses API elements: SetSessionPath(), ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Create() passing "EFileShareAny" as file mode and "test2229.txt" as name of file.
//!				4. Call Write() passing some data to write as argument.
//!				5. Call Close() to close created file.
//!				6. Call ReadFileSection()  and pass "test2229.txt" as parameter as name of file and
//!				   "10" as offset, in bytes, from the start.
//!				7. Call Delete() passing parameter "test2229.txt" as name of file. 
//!				8. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Function SetSessionPath() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2229-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2229-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2229-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2229-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2229-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2229


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2230
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2230
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions ReadFileSection() test where number of bytes to be read is greater than file size.
//!				Uses API elements: SetSessionPath(), ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Create() passing "EFileShareAny" as file mode and "test2230.txt" as name of file.
//!				4. Call Write() passing some data to write as argument.
//!				5. Call Close() to close created file.
//!				6. Call ReadFileSection()  and pass "test2230.txt" as parameter as name of file and
//!				   "5555" number of bytes to be read.
//!				7. Call Delete() passing parameter "test2230.txt" as name of file.
//!				8. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetSessionPath() return KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2230-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2230-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2230-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2230-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2230-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2230


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2231
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2231
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions ReadFileSection() negative test where passed the name of directory instead of name of file.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call ReadFileSection()  and pass "<DRIVE>:\base\T_Sfsrv\" as parameter as name of file.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function SetSessionPath() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2231-001-ReadFileSection_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2231


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2232
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2232
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function ReadFileSection() test with 0 as a length argument.
//!				Uses API elements: ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call ReadFileSection()  and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter, offset = 0, length = 0, buffer with a length = 10.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	ReadFileSection() returns KErrNone.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2232-001-SetSessionPath_command03
		COMMAND		RFile1	new
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-2232-001-Create_command06
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-2232-001-Write_command07
		COMMAND		RFile1	Close
		COMMAND		RFile1	~
		COMMAND		RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2232-001-ReadFileSection_command11
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-2232-001-Delete_command12
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2232


///////////////////////////////
// DELETE
///////////////////////////////

START_TESTCASE 			PBASE-F32-RFS-PublicApi-2233
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2233
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test where name of file includes "*" of wildcard.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "delete*.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Delete		PBASE-F32-RFS-PublicApi-2233-001-Delete_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2233


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2234
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2234
//! @SYMAPI			RFs
//! @SYMCreationDate		5/10/2006
//! @SYMTestCaseDesc		Function Delete() negative test where name of file includes "*" and "?" of wildcards.
//!				Uses API elements: Delete().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call Delete() and pass "delete*?.txt" as parameter.
//!				3. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function Delete() return KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!Error=-28	RFs1	Delete		PBASE-F32-RFS-PublicApi-2234-001-Delete_command03
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2234


START_TESTCASE 			PBASE-F32-RFS-PublicApi-2228
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-2228
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Functions ReadFileSection() negative test where the number of bytes to be read is negative.
//!				Uses API elements: SetSessionPath(), ReadFileSection().
//! @SYMTestActions		1. Call Connect() method.
//!				2. Call SetSessionPath() and pass "<DRIVE>:\base\T_Sfsrv\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call Create() passing "EFileShareAny" as file mode and "test2228.txt" as name of file.
//!				4. Call Write() passing some data to write as argument.
//!				5. Call Close() to close created file.
//!				6. Call ReadFileSection()  and pass "test2228.txt" as parameter as name of file and
//!				   "-1" as number of bytes to be read.
//!				7. Call Delete() passing parameter "test2228.txt" as name of file. 
//!				8. Call Close() method.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function ReadFileSection() return KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv 	\base\PBASE-F32-RFS-Files-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND			RFs1	SetSessionPath		PBASE-F32-RFS-PublicApi-2228-001-SetSessionPath_command03
		COMMAND			RFile1	new
		COMMAND			RFile1	Create		PBASE-F32-RFS-PublicApi-2228-001-Create_command06
		COMMAND			RFile1	Write		PBASE-F32-RFS-PublicApi-2228-001-Write_command07
		COMMAND			RFile1	Close
		COMMAND			RFile1	~
		COMMAND	!Error=-6	RFs1	ReadFileSection		PBASE-F32-RFS-PublicApi-2228-001-ReadFileSection_command11
		COMMAND			RFs1	Delete		PBASE-F32-RFS-PublicApi-2228-001-Delete_command12
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-2228
