//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: 
//
//! @file
//! @SYMTestSuiteName		PBASE-F32-RFS-Misc-PublicApi-RAM
//! @SYMScriptTestEnvironment	This test script requires a basic ROM.
//! @SYMScriptAuthor 		Oleg Kuznetsov
//! @SYMScriptDescription	The test script contains API tests for RFs functions that perform operations on a RAM (not removeable RAM drive).

LOAD_SUITE	T_Sfsrv


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3003
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3003
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat) version) test.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() and pass ENotifyDir as parameter and starts waiting for a notification on the background.
//!				3. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter where <DRIVE> is a test drive letter.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after creation of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3003-001-NotifyChange_command03
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3003-001-MkDir_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3003-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3003


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3004
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3004
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) version) test.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass ENotifyDir as parameter and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3004-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3004-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3004-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3004


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3005
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3005
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChangeCancel() test.
//!				Uses API elements: NotifyChange(),
//!				NotifyChangeCancel(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() and pass ENotifyDir as parameter and starts waiting for a notification on the background.
//!				3. Call NotifyChangeCancel().
//!				4. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter where <DRIVE> is a test drive letter.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter.
//!				6. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrCancel(-3) after creation and deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-3	RFs1	NotifyChange		PBASE-F32-RFS-PublicApi-3005-001-NotifyChange_command03
		COMMAND			RFs1	NotifyChangeCancel	PBASE-F32-RFS-PublicApi-3005-001-NotifyChangeCancel_command04
		COMMAND			RFs1	MkDir			PBASE-F32-RFS-PublicApi-3005-001-MkDir_command05
		COMMAND			RFs1	RmDir			PBASE-F32-RFS-PublicApi-3005-001-RmDir_command06
		OUTSTANDING	
		COMMAND			RFs1	Close		
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3005


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3006
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3006
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChangeCancel() (NotifyChangeCancel(TRequestStatus &aStat) version) test.
//!				Uses API elements: NotifyChange(),
//!				NotifyChangeCancel(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() and pass ENotifyDir as parameter and starts waiting for a notification on the background.
//!				3. Call NotifyChangeCancel() asynchronous version.
//!				4. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter where <DRIVE> is a test drive letter.
//!				5. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter.
//!				6. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrCancel(-3) after creation and deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-3	RFs1	NotifyChange		PBASE-F32-RFS-PublicApi-3006-001-NotifyChange_command03
		COMMAND			RFs1	NotifyChangeCancel	PBASE-F32-RFS-PublicApi-3006-001-NotifyChangeCancel_command04
		COMMAND			RFs1	MkDir			PBASE-F32-RFS-PublicApi-3006-001-MkDir_command05
		COMMAND			RFs1	RmDir			PBASE-F32-RFS-PublicApi-3006-001-RmDir_command06
		OUTSTANDING	
		COMMAND			RFs1	Close		
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3006


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3007
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3007
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpace() test.
//!				Uses API elements: NotifyDiskSpace(), ReserveDriveSpace().
//! @SYMTestActions		1. Call Connect().
//!				2. Set NotifyDiskSpace treshold on a drive to freespace-1000 and starts waiting for a notification on the background.
//!				3. Call ReserveDriveSpace() and pass the drive, 2000 as parameters.
//!				4. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Notification was received that threshold is crossed, request status is KErrNone
//! @SYMTestType		CIT
	START_TEST_BLOCK	200	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	Volume			PBASE-F32-RFS-PublicApi-3007-001-Volume_command03
		COMMAND		RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3007-001-NotifyDiskSpace_command04
		COMMAND		RFs1	ReserveDriveSpace	PBASE-F32-RFS-PublicApi-3007-001-ReserveDriveSpace_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3007


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3008
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3008
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpaceCancel() test.
//!				Uses API elements: NotifyDiskSpace(), NotifyDiskSpaceCancel().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyDiskSpace() and pass a drive, 3000 as parameters and starts waiting for a notification on the background.
//!				3. Call NotifyDiskSpaceCancel().
//!				4. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Notification was canceled, request status is KErrCancel(-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-3	RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3008-001-NotifyDiskSpace_command03
		COMMAND			RFs1	NotifyDiskSpaceCancel	PBASE-F32-RFS-PublicApi-3008-001-NotifyDiskSpaceCancel_command04
		OUTSTANDING	
		COMMAND			RFs1	Close		
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3008


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3009
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3009
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpaceCancel() (NotifyDiskSpaceCancel(TRequestStatus &aStat) version) test.
//!				Uses API elements: NotifyDiskSpace(), NotifyDiskSpaceCancel().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyDiskSpace() and pass a drive, 99999 as parameters and starts waiting for a notification on the background.
//!				3. Call NotifyDiskSpaceCancel() passing the given request status.
//!				4. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Notification was canceled, request status is KErrCancel(-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-3	RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3009-001-NotifyDiskSpace_command03
		COMMAND			RFs1	NotifyDiskSpaceCancel	PBASE-F32-RFS-PublicApi-3009-001-NotifyDiskSpaceCancel_command04
		OUTSTANDING	
		COMMAND			RFs1	Close		
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3009


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3013
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3013
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function SetNotifyChange() test.
//!				Uses API elements: SetNotifyChange(),NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call SetNotifyChange() and pass "FALSE" as parameter.
//!				3. Call NotifyChange() and pass ENotifyDir as parameter
//!				4. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter where <DRIVE> is a test drive letter.
//!				5. Call SetNotifyChange() and pass "TRUE" as parameter.
//!				6. Call RmDir and pass "<DRIVE>:\base\T_Sfsrv\fgfd\" as parameter.
//!				7. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	KErrNone, Notify doesn't occur after creating dir.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetNotifyChange		PBASE-F32-RFS-PublicApi-3013-001-SetNotifyChange_command03
		COMMAND		RFs1	NotifyChange		PBASE-F32-RFS-PublicApi-3013-001-NotifyChange_command04
		COMMAND		RFs1	MkDir			PBASE-F32-RFS-PublicApi-3013-001-MkDir_command05
		COMMAND		RFs1	SetNotifyChange		PBASE-F32-RFS-PublicApi-3013-001-SetNotifyChange_command06
		COMMAND		RFs1	RmDir			PBASE-F32-RFS-PublicApi-3013-001-RmDir_command07
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3013


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3106
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3106
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange(TNotifyType aType, TRequestStatus &aStat) test with notify type ENotifyAttributes.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() passing ENotifyAttributes as parameter and starts waiting for a notification on the background.
//!				3. Call SetEntry() and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter where <DRIVE> is a test drive letter, set att mask KEntryAttReadOnly, clear att mask KEntryAttNormal.
//!				4. Call SetEntry() and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter where <DRIVE> is a test drive letter, set att mask KEntryAttNormal, clear att mask KEntryAttReadOnly.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFile1	new		
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-3106-001-Create_command05
		COMMAND		RFile1	Close		
		COMMAND		RFile1	~		
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3106-001-NotifyChange_command09
		COMMAND		RFs1	SetEntry	PBASE-F32-RFS-PublicApi-3106-001-SetEntry_command10
		OUTSTANDING	
		COMMAND		RFs1	SetEntry	PBASE-F32-RFS-PublicApi-3106-001-SetEntry_command12
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-3106-001-Delete_command13
		COMMAND		RFs1	Close
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3106


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3108
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3108
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) negative test where incorrect path parameter.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() and pass ENotifyAll as parameter and bad path as parameter "<DRIVE>:\base\T_Sfsrv\*" where <DRIVE> is a test drive letter and starts waiting for a notification on the background.
//!				3. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function return status KErrBadName.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-28	RFs1	NotifyChange		PBASE-F32-RFS-PublicApi-3108-001-NotifyChange_command03
		OUTSTANDING	
		COMMAND			RFs1	Close
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3108


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3112
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3112
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpace() negative test where threshold value less than zero.
//!				Uses API elements: NotifyDiskSpace().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyDiskSpace() and pass parameter -12345 as treshold value and starts waiting for a notification on the background.
//!				3. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function return status KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-6	RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3112-001-NotifyDiskSpace_command03
		OUTSTANDING	
		COMMAND			RFs1	Close
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3112


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3113
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3113
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpace() negative test where the threshold value outside its limits.
//!				Uses API elements: NotifyDiskSpace().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyDiskSpace() and pass parameter greater than the limit of treshold value and starts waiting for a notification on the background.
//!				3. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Function return status KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new		
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-6	RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3113-001-NotifyDiskSpace_command03
		OUTSTANDING	
		COMMAND			RFs1	Close		
		COMMAND			RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3113


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3118
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3118
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function SetNotifyUser() test notifycation.
//!				Uses API elements: SetNotifyUser().
//! @SYMTestActions		1. Call Connect().
//!				2. Call SetNotifyUser() and pass "FALSE" as parameter.
//!				3. Call GetNotifyUser() and check that it returns "FALSE".
//!				4. Call RFile's Open(), open file as read only and pass "<DRIVE>:\base\T_Sfsrv\test.txt" as parameter where <DRIVE> is a test drive letter.
//!				5. Call Write() trying to write data into readonly file and check that the notification not appears.
//!				6. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	SetNotifyUser	PBASE-F32-RFS-PublicApi-3118-001-SetNotifyUser_command03
		COMMAND		RFs1	GetNotifyUser	PBASE-F32-RFS-PublicApi-3118-001-GetNotifyUser_command04
		COMMAND		RFile1	new		
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-3118-001-Create_command07
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-3118-001-Write_command08
		COMMAND		RFile1	Close		
		COMMAND		RFile1	~		
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-3118-001-Delete_command12
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3118


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3125
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3125
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat) version) test that passes 0 instead of TNotifyType (it starts from 1 if you see f32file.h).
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\temp_dir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass 0 and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\temp_dir\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3125-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3125-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3125-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3125


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3126
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3126
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) version) test that passes -1 instead of TNotifyType (it starts from 1 if you see f32file.h).
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\temp_dir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass -1 and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\temp_dir\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3126-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3126-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3126-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3126


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3128
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3128
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyDiskSpaceCancel() (NotifyDiskSpaceCancel(TRequestStatus &aStat) version) test that cancel same request twice.
//!				Uses API elements: NotifyDiskSpace(), NotifyDiskSpaceCancel().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyDiskSpace() and pass a drive, 99999 as parameters and starts waiting for a notification on the background.
//!				3. Call NotifyDiskSpaceCancel() passing the request status.
//!				4. Call NotifyDiskSpaceCancel() passing the request status again.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Notification was canceled, request status is KErrCancel(-3) and the call doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND			RFs1	new
		COMMAND			RFs1	Connect
		COMMAND	!AsyncError=-3	RFs1	NotifyDiskSpace		PBASE-F32-RFS-PublicApi-3128-001-NotifyDiskSpace_command03
		COMMAND			RFs1	NotifyDiskSpaceCancel	PBASE-F32-RFS-PublicApi-3128-001-NotifyDiskSpaceCancel_command04
		COMMAND			RFs1	NotifyDiskSpaceCancel	PBASE-F32-RFS-PublicApi-3128-001-NotifyDiskSpaceCancel_command05
		OUTSTANDING	
		COMMAND			RFs1	Close
		COMMAND			RFs1	~
	END_TEST_BLOCK	
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3128

START_TESTCASE 			PBASE-F32-RFS-PublicApi-3015
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3015
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) version) test that uses a root path as a monitored path.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\temp_dir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass ENotifyDir and "<DRIVE>:\" as parameters and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\temp_dir\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3015-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3015-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3015-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close		
		COMMAND		RFs1	~		
	END_TEST_BLOCK
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3015


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3110
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3110
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) test with notify type ENotifyEntry, EFileShareAny, EFileShareWrite, EFileShareFile.
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call NotifyChange() passing ENotifyEntry as parameter and "<DRIVE>:\base\T_Sfsrv" as parameter where <DRIVE> is a test drive letter and starts waiting for a notification on the background.
//!				3. Call Create() passing EFileShareAny as file mode and "<DRIVE>:\base\T_Sfsrv\test.ttt" as parameter where <DRIVE> is a test drive letter.
//!				4. Call NotifyChange() passing ENotifyWrite as parameter and "<DRIVE>:\base\T_Sfsrv" as parameter where <DRIVE> is a test drive letter and starts waiting for a notification on the background.
//!				5. Call Write() passing some data to write as argument.
//!				6. Call Close() to close created file.
//!				7. Call NotifyChange() passing ENotifyFile as parameter and "<DRIVE>:\base\T_Sfsrv" as parameter where <DRIVE> is a test drive letter and starts waiting for a notification on the background.
//!				8. Call Delete() passing "<DRIVE>:\base\T_Sfsrv\test.ttt" as parameter where <DRIVE> is a test drive let
//!				9. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Doesn't cause panic.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		CREATE_OBJECT	RFile	RFile1
		COMMAND		RFs1	new		
		COMMAND		RFs1	Connect
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3110-001-NotifyChange_command03
		COMMAND		RFile1	new		
		COMMAND		RFile1	Create		PBASE-F32-RFS-PublicApi-3110-001-Create_command06
		OUTSTANDING	
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3110-001-NotifyChange_command09
		COMMAND		RFile1	Write		PBASE-F32-RFS-PublicApi-3110-001-Write_command11
		OUTSTANDING	
		COMMAND		RFile1	Close
		COMMAND		RFile1	~		
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3110-001-NotifyChange_command16
		COMMAND		RFs1	Delete		PBASE-F32-RFS-PublicApi-3110-001-Delete_command17
		OUTSTANDING	
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3110


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3123
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3123
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) version) test that passes 0 instead of TNotifyType (it starts from 1 if you see f32file.h).
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\temp_dir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass 0 and "<DRIVE>:\" as parameters and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\temp_dir\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3123-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3123-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3123-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3123


START_TESTCASE 			PBASE-F32-RFS-PublicApi-3124
//! @SYMTestCaseID		PBASE-F32-RFS-PublicApi-3124
//! @SYMAPI			RFs
//! @SYMTestCaseDesc		Function NotifyChange() (NotifyChange(TNotifyType aType, TRequestStatus &aStat, const TDesC &aPathName) version) test that passes -1 instead of TNotifyType (it starts from 1 if you see f32file.h).
//!				Uses API elements: NotifyChange(), MkDir(), RmDir().
//! @SYMTestActions		1. Call Connect().
//!				2. Call MkDir() and pass "<DRIVE>:\base\T_Sfsrv\temp_dir\" as parameter where <DRIVE> is a test drive letter.
//!				3. Call NotifyChange() and pass -1 and "<DRIVE>:\" as parameters and starts waiting for a notification on the background.
//!				4. Call RmDir() and pass "<DRIVE>:\base\T_Sfsrv\fgfd\temp_dir\" as parameter.
//!				5. Call Close().
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		Critical
//! @SYMTestExpectedResults	Request status is KErrNone after deletion of directory.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	T_Sfsrv	\base\PBASE-F32-RFS-Misc-PublicApi-RAM.ini 
		CREATE_OBJECT	RFs	RFs1
		COMMAND		RFs1	new
		COMMAND		RFs1	Connect
		COMMAND		RFs1	MkDir		PBASE-F32-RFS-PublicApi-3124-001-MkDir_command03
		COMMAND		RFs1	NotifyChange	PBASE-F32-RFS-PublicApi-3124-001-NotifyChange_command04
		COMMAND		RFs1	RmDir		PBASE-F32-RFS-PublicApi-3124-001-RmDir_command05
		OUTSTANDING	
		COMMAND		RFs1	Close
		COMMAND		RFs1	~
	END_TEST_BLOCK
END_TESTCASE 			PBASE-F32-RFS-PublicApi-3124


