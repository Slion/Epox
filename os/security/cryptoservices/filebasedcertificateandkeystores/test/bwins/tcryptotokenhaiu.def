EXPORTS
	?NewLC@CCryptoTokenHai@@SAPAV1@PAVMCTToken@@@Z @ 1 NONAME ; class CCryptoTokenHai * CCryptoTokenHai::NewLC(class MCTToken *)
	?KeyPresent@CCryptoTokenHai@@QAEHH@Z @ 2 NONAME ; int CCryptoTokenHai::KeyPresent(int)
	?ListL@CCryptoTokenHai@@QBEXABUTCTKeyAttributeFilter@@AAV?$RPointerArray@VCCTKeyInfo@@@@@Z @ 3 NONAME ; void CCryptoTokenHai::ListL(struct TCTKeyAttributeFilter const &, class RPointerArray<class CCTKeyInfo> &) const
	?ExportPublicKeyL@CCryptoTokenHai@@QAEXHAAPAVHBufC8@@@Z @ 4 NONAME ; void CCryptoTokenHai::ExportPublicKeyL(int, class HBufC8 * &)
	?DecryptL@CCryptoTokenHai@@QAEXHABVTDesC8@@AAPAVHBufC8@@@Z @ 5 NONAME ; void CCryptoTokenHai::DecryptL(int, class TDesC8 const &, class HBufC8 * &)
	?ExportPrivateKeyL@CCryptoTokenHai@@QAEXHAAPAVHBufC8@@@Z @ 6 NONAME ; void CCryptoTokenHai::ExportPrivateKeyL(int, class HBufC8 * &)
	?ImportKeyL@CCryptoTokenHai@@QAEXABVTDesC16@@ABVTDesC8@@1@Z @ 7 NONAME ; void CCryptoTokenHai::ImportKeyL(class TDesC16 const &, class TDesC8 const &, class TDesC8 const &)
	?SignL@CCryptoTokenHai@@QAEXHABVTDesC8@@AAPAVHBufC8@@@Z @ 8 NONAME ; void CCryptoTokenHai::SignL(int, class TDesC8 const &, class HBufC8 * &)
	?NewL@CCryptoTokenHai@@SAPAV1@PAVMCTToken@@@Z @ 9 NONAME ; class CCryptoTokenHai * CCryptoTokenHai::NewL(class MCTToken *)
	??1CCryptoTokenHai@@UAE@XZ @ 10 NONAME ; CCryptoTokenHai::~CCryptoTokenHai(void)

