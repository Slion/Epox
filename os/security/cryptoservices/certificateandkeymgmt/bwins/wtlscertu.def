EXPORTS
; NEW:
	??0TWTLSValidationStatus@@QAE@W4TValidationError@@H@Z @ 1 NONAME ; public: __thiscall TWTLSValidationStatus::TWTLSValidationStatus(enum TValidationError,int)
	??1CWTLSCertChain@@UAE@XZ @ 2 NONAME ; public: virtual __thiscall CWTLSCertChain::~CWTLSCertChain(void)
	??1CWTLSCertificate@@UAE@XZ @ 3 NONAME ; public: virtual __thiscall CWTLSCertificate::~CWTLSCertificate(void)
	??1CWTLSName@@UAE@XZ @ 4 NONAME ; public: virtual __thiscall CWTLSName::~CWTLSName(void)
	??1CWTLSStructuredText@@UAE@XZ @ 5 NONAME ; public: virtual __thiscall CWTLSStructuredText::~CWTLSStructuredText(void)
	??1CWTLSText@@UAE@XZ @ 6 NONAME ; public: virtual __thiscall CWTLSText::~CWTLSText(void)
	??1CWTLSValidationResult@@UAE@XZ @ 7 NONAME ; public: virtual __thiscall CWTLSValidationResult::~CWTLSValidationResult(void)
	?AppendCertsL@CWTLSCertChain@@QAEXABVTPtrC8@@@Z @ 8 NONAME ; public: void __thiscall CWTLSCertChain::AppendCertsL(class TPtrC8 const &)
	?Cert@CWTLSCertChain@@QBEABVCWTLSCertificate@@H@Z @ 9 NONAME ; public: class CWTLSCertificate const & __thiscall CWTLSCertChain::Cert(int)const 
	?ChainHasRoot@CWTLSCertChain@@QBEHXZ @ 10 NONAME ; public: int __thiscall CWTLSCertChain::ChainHasRoot(void)const 
	?CharacterSet@CWTLSText@@QBEHXZ @ 11 NONAME ; public: int __thiscall CWTLSText::CharacterSet(void)const 
	?Count@CWTLSCertChain@@QBEHXZ @ 12 NONAME ; public: int __thiscall CWTLSCertChain::Count(void)const 
	?Count@CWTLSStructuredText@@QBEHXZ @ 13 NONAME ; public: int __thiscall CWTLSStructuredText::Count(void)const 
	?Country@CWTLSStructuredText@@QBE?AVTPtrC16@@XZ @ 14 NONAME ; public: class TPtrC16  __thiscall CWTLSStructuredText::Country(void)const 
	?DataElementEncoding@CWTLSCertificate@@UBEPBVTPtrC8@@I@Z @ 15 NONAME ; public: virtual class TPtrC8 const * __thiscall CWTLSCertificate::DataElementEncoding(unsigned int)const 
	?DisplayNameL@CWTLSName@@QBEPAVHBufC16@@XZ @ 16 NONAME ; public: class HBufC16 * __thiscall CWTLSName::DisplayNameL(void)const 
	?DisplayNameL@CWTLSStructuredText@@QBEPAVHBufC16@@XZ @ 17 NONAME ; public: class HBufC16 * __thiscall CWTLSStructuredText::DisplayNameL(void)const 
	?Error@CWTLSValidationResult@@QBE?BVTWTLSValidationStatus@@XZ @ 18 NONAME ; public: class TWTLSValidationStatus const  __thiscall CWTLSValidationResult::Error(void)const 
	?ExactMatchL@CWTLSName@@QBEHABV1@@Z @ 19 NONAME ; public: int __thiscall CWTLSName::ExactMatchL(class CWTLSName const &)const 
	?ExactMatchL@CWTLSText@@QBEHABV1@@Z @ 20 NONAME ; public: int __thiscall CWTLSText::ExactMatchL(class CWTLSText const &)const 
	?FieldByIndex@CWTLSStructuredText@@QBEABVTWTLSStructuredTextField@@H@Z @ 21 NONAME ; public: class TWTLSStructuredTextField const & __thiscall CWTLSStructuredText::FieldByIndex(int)const 
	?FieldByName@CWTLSStructuredText@@QBEPBVTWTLSStructuredTextField@@ABVTDesC16@@@Z @ 22 NONAME ; public: class TWTLSStructuredTextField const * __thiscall CWTLSStructuredText::FieldByName(class TDesC16 const &)const 
	?InternalizeL@CWTLSCertificate@@UAEXAAVRReadStream@@@Z @ 23 NONAME ; public: virtual void __thiscall CWTLSCertificate::InternalizeL(class RReadStream &)
	?IsEqualL@CWTLSCertificate@@QBEHABV1@@Z @ 24 NONAME ; public: int __thiscall CWTLSCertificate::IsEqualL(class CWTLSCertificate const &)const 
	?IsSelfSignedL@CWTLSCertificate@@UBEHXZ @ 25 NONAME ; public: virtual int __thiscall CWTLSCertificate::IsSelfSignedL(void)const 
	?IsTCAL@CWTLSCertificate@@QBEHXZ @ 26 NONAME ; public: int __thiscall CWTLSCertificate::IsTCAL(void)const 
	?IssuerL@CWTLSCertificate@@UBEPAVHBufC16@@XZ @ 27 NONAME ; public: virtual class HBufC16 * __thiscall CWTLSCertificate::IssuerL(void)const 
	?IssuerName@CWTLSCertificate@@QBEABVCWTLSName@@XZ @ 28 NONAME ; public: class CWTLSName const & __thiscall CWTLSCertificate::IssuerName(void)const 
	?Name@CWTLSText@@QBE?AVTPtrC16@@XZ @ 29 NONAME ; public: class TPtrC16  __thiscall CWTLSText::Name(void)const 
	?NameData@CWTLSName@@QBE?AVTPtrC8@@XZ @ 30 NONAME ; public: class TPtrC8  __thiscall CWTLSName::NameData(void)const 
	?NameType@CWTLSName@@QBEEXZ @ 31 NONAME ; public: unsigned char __thiscall CWTLSName::NameType(void)const 
	?NewL@CWTLSAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@@Z @ 32 NONAME ; public: static class CWTLSAlgorithmIdentifier * __cdecl CWTLSAlgorithmIdentifier::NewL(class TDesC8 const &)
	?NewL@CWTLSAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@AAH@Z @ 33 NONAME ; public: static class CWTLSAlgorithmIdentifier * __cdecl CWTLSAlgorithmIdentifier::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSCertChain@@SAPAV1@AAVRFs@@ABVTPtrC8@@ABV?$CArrayPtr@VCWTLSCertificate@@@@@Z @ 34 NONAME ; public: static class CWTLSCertChain * __cdecl CWTLSCertChain::NewL(class RFs &,class TPtrC8 const &,class CArrayPtr<class CWTLSCertificate> const &)
	?NewL@CWTLSCertChain@@SAPAV1@AAVRFs@@ABVTPtrC8@@VTUid@@@Z @ 35 NONAME ; public: static class CWTLSCertChain * __cdecl CWTLSCertChain::NewL(class RFs &,class TPtrC8 const &,class TUid)
	?NewL@CWTLSCertificate@@SAPAV1@AAVRReadStream@@@Z @ 36 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewL(class RReadStream &)
	?NewL@CWTLSCertificate@@SAPAV1@ABV1@@Z @ 37 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewL(class CWTLSCertificate const &)
	?NewL@CWTLSCertificate@@SAPAV1@ABVTDesC8@@@Z @ 38 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewL(class TDesC8 const &)
	?NewL@CWTLSCertificate@@SAPAV1@ABVTDesC8@@AAH@Z @ 39 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSName@@SAPAV1@ABV1@@Z @ 40 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewL(class CWTLSName const &)
	?NewL@CWTLSName@@SAPAV1@ABVTDesC8@@@Z @ 41 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewL(class TDesC8 const &)
	?NewL@CWTLSName@@SAPAV1@ABVTDesC8@@AAH@Z @ 42 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSRSAPublicKey@@SAPAV1@ABVTDesC8@@@Z @ 43 NONAME ; public: static class CWTLSRSAPublicKey * __cdecl CWTLSRSAPublicKey::NewL(class TDesC8 const &)
	?NewL@CWTLSRSAPublicKey@@SAPAV1@ABVTDesC8@@AAH@Z @ 44 NONAME ; public: static class CWTLSRSAPublicKey * __cdecl CWTLSRSAPublicKey::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSRSASignatureResult@@SAPAV1@ABVCAlgorithmIdentifier@@ABVTDesC8@@@Z @ 45 NONAME ; public: static class CWTLSRSASignatureResult * __cdecl CWTLSRSASignatureResult::NewL(class CAlgorithmIdentifier const &,class TDesC8 const &)
	?NewL@CWTLSSigningAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@@Z @ 46 NONAME ; public: static class CWTLSSigningAlgorithmIdentifier * __cdecl CWTLSSigningAlgorithmIdentifier::NewL(class TDesC8 const &)
	?NewL@CWTLSSigningAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@AAH@Z @ 47 NONAME ; public: static class CWTLSSigningAlgorithmIdentifier * __cdecl CWTLSSigningAlgorithmIdentifier::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSStructuredText@@SAPAV1@ABVTDesC8@@@Z @ 48 NONAME ; public: static class CWTLSStructuredText * __cdecl CWTLSStructuredText::NewL(class TDesC8 const &)
	?NewL@CWTLSStructuredText@@SAPAV1@ABVTDesC8@@AAH@Z @ 49 NONAME ; public: static class CWTLSStructuredText * __cdecl CWTLSStructuredText::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSSubjectPublicKeyInfo@@SAPAV1@ABVTDesC8@@@Z @ 50 NONAME ; public: static class CWTLSSubjectPublicKeyInfo * __cdecl CWTLSSubjectPublicKeyInfo::NewL(class TDesC8 const &)
	?NewL@CWTLSSubjectPublicKeyInfo@@SAPAV1@ABVTDesC8@@AAH@Z @ 51 NONAME ; public: static class CWTLSSubjectPublicKeyInfo * __cdecl CWTLSSubjectPublicKeyInfo::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSText@@SAPAV1@ABVTDesC8@@@Z @ 52 NONAME ; public: static class CWTLSText * __cdecl CWTLSText::NewL(class TDesC8 const &)
	?NewL@CWTLSText@@SAPAV1@ABVTDesC8@@AAH@Z @ 53 NONAME ; public: static class CWTLSText * __cdecl CWTLSText::NewL(class TDesC8 const &,int &)
	?NewL@CWTLSValidationResult@@SAPAV1@XZ @ 54 NONAME ; public: static class CWTLSValidationResult * __cdecl CWTLSValidationResult::NewL(void)
	?NewL@CWTLSValidityPeriod@@SAPAV1@ABVTDesC8@@@Z @ 55 NONAME ; public: static class CWTLSValidityPeriod * __cdecl CWTLSValidityPeriod::NewL(class TDesC8 const &)
	?NewL@CWTLSValidityPeriod@@SAPAV1@ABVTDesC8@@AAH@Z @ 56 NONAME ; public: static class CWTLSValidityPeriod * __cdecl CWTLSValidityPeriod::NewL(class TDesC8 const &,int &)
	?NewLC@CWTLSAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@@Z @ 57 NONAME ; public: static class CWTLSAlgorithmIdentifier * __cdecl CWTLSAlgorithmIdentifier::NewLC(class TDesC8 const &)
	?NewLC@CWTLSAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@AAH@Z @ 58 NONAME ; public: static class CWTLSAlgorithmIdentifier * __cdecl CWTLSAlgorithmIdentifier::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSCertChain@@SAPAV1@AAVRFs@@ABVTPtrC8@@ABV?$CArrayPtr@VCWTLSCertificate@@@@@Z @ 59 NONAME ; public: static class CWTLSCertChain * __cdecl CWTLSCertChain::NewLC(class RFs &,class TPtrC8 const &,class CArrayPtr<class CWTLSCertificate> const &)
	?NewLC@CWTLSCertChain@@SAPAV1@AAVRFs@@ABVTPtrC8@@VTUid@@@Z @ 60 NONAME ; public: static class CWTLSCertChain * __cdecl CWTLSCertChain::NewLC(class RFs &,class TPtrC8 const &,class TUid)
	?NewLC@CWTLSCertificate@@SAPAV1@AAVRReadStream@@@Z @ 61 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewLC(class RReadStream &)
	?NewLC@CWTLSCertificate@@SAPAV1@ABV1@@Z @ 62 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewLC(class CWTLSCertificate const &)
	?NewLC@CWTLSCertificate@@SAPAV1@ABVTDesC8@@@Z @ 63 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewLC(class TDesC8 const &)
	?NewLC@CWTLSCertificate@@SAPAV1@ABVTDesC8@@AAH@Z @ 64 NONAME ; public: static class CWTLSCertificate * __cdecl CWTLSCertificate::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSName@@SAPAV1@ABV1@@Z @ 65 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewLC(class CWTLSName const &)
	?NewLC@CWTLSName@@SAPAV1@ABVTDesC8@@@Z @ 66 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewLC(class TDesC8 const &)
	?NewLC@CWTLSName@@SAPAV1@ABVTDesC8@@AAH@Z @ 67 NONAME ; public: static class CWTLSName * __cdecl CWTLSName::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSRSAPublicKey@@SAPAV1@ABVTDesC8@@@Z @ 68 NONAME ; public: static class CWTLSRSAPublicKey * __cdecl CWTLSRSAPublicKey::NewLC(class TDesC8 const &)
	?NewLC@CWTLSRSAPublicKey@@SAPAV1@ABVTDesC8@@AAH@Z @ 69 NONAME ; public: static class CWTLSRSAPublicKey * __cdecl CWTLSRSAPublicKey::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSRSASignatureResult@@SAPAV1@ABVCAlgorithmIdentifier@@ABVTDesC8@@@Z @ 70 NONAME ; public: static class CWTLSRSASignatureResult * __cdecl CWTLSRSASignatureResult::NewLC(class CAlgorithmIdentifier const &,class TDesC8 const &)
	?NewLC@CWTLSSigningAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@@Z @ 71 NONAME ; public: static class CWTLSSigningAlgorithmIdentifier * __cdecl CWTLSSigningAlgorithmIdentifier::NewLC(class TDesC8 const &)
	?NewLC@CWTLSSigningAlgorithmIdentifier@@SAPAV1@ABVTDesC8@@AAH@Z @ 72 NONAME ; public: static class CWTLSSigningAlgorithmIdentifier * __cdecl CWTLSSigningAlgorithmIdentifier::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSStructuredText@@SAPAV1@ABVTDesC8@@@Z @ 73 NONAME ; public: static class CWTLSStructuredText * __cdecl CWTLSStructuredText::NewLC(class TDesC8 const &)
	?NewLC@CWTLSStructuredText@@SAPAV1@ABVTDesC8@@AAH@Z @ 74 NONAME ; public: static class CWTLSStructuredText * __cdecl CWTLSStructuredText::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSSubjectPublicKeyInfo@@SAPAV1@ABVTDesC8@@@Z @ 75 NONAME ; public: static class CWTLSSubjectPublicKeyInfo * __cdecl CWTLSSubjectPublicKeyInfo::NewLC(class TDesC8 const &)
	?NewLC@CWTLSSubjectPublicKeyInfo@@SAPAV1@ABVTDesC8@@AAH@Z @ 76 NONAME ; public: static class CWTLSSubjectPublicKeyInfo * __cdecl CWTLSSubjectPublicKeyInfo::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSText@@SAPAV1@ABVTDesC8@@@Z @ 77 NONAME ; public: static class CWTLSText * __cdecl CWTLSText::NewLC(class TDesC8 const &)
	?NewLC@CWTLSText@@SAPAV1@ABVTDesC8@@AAH@Z @ 78 NONAME ; public: static class CWTLSText * __cdecl CWTLSText::NewLC(class TDesC8 const &,int &)
	?NewLC@CWTLSValidationResult@@SAPAV1@XZ @ 79 NONAME ; public: static class CWTLSValidationResult * __cdecl CWTLSValidationResult::NewLC(void)
	?NewLC@CWTLSValidityPeriod@@SAPAV1@ABVTDesC8@@@Z @ 80 NONAME ; public: static class CWTLSValidityPeriod * __cdecl CWTLSValidityPeriod::NewLC(class TDesC8 const &)
	?NewLC@CWTLSValidityPeriod@@SAPAV1@ABVTDesC8@@AAH@Z @ 81 NONAME ; public: static class CWTLSValidityPeriod * __cdecl CWTLSValidityPeriod::NewLC(class TDesC8 const &,int &)
	?Organization@CWTLSStructuredText@@QBE?AVTPtrC16@@XZ @ 82 NONAME ; public: class TPtrC16  __thiscall CWTLSStructuredText::Organization(void)const 
	?ServiceName@CWTLSStructuredText@@QBE?AVTPtrC16@@XZ @ 83 NONAME ; public: class TPtrC16  __thiscall CWTLSStructuredText::ServiceName(void)const 
	?SignedDataL@CWTLSCertificate@@UBE?BVTPtrC8@@XZ @ 84 NONAME ; public: virtual class TPtrC8 const  __thiscall CWTLSCertificate::SignedDataL(void)const 
	?SubjectL@CWTLSCertificate@@UBEPAVHBufC16@@XZ @ 85 NONAME ; public: virtual class HBufC16 * __thiscall CWTLSCertificate::SubjectL(void)const 
	?SubjectName@CWTLSCertificate@@QBEABVCWTLSName@@XZ @ 86 NONAME ; public: class CWTLSName const & __thiscall CWTLSCertificate::SubjectName(void)const 
	?Type@TWTLSStructuredTextField@@QBE?AVTPtrC16@@XZ @ 87 NONAME ; public: class TPtrC16  __thiscall TWTLSStructuredTextField::Type(void)const 
	?ValidateL@CWTLSCertChain@@QAEXAAVCWTLSValidationResult@@ABVTTime@@AAVTRequestStatus@@@Z @ 88 NONAME ; public: void __thiscall CWTLSCertChain::ValidateL(class CWTLSValidationResult &,class TTime const &,class TRequestStatus &)
	?Value@TWTLSStructuredTextField@@QBE?AVTPtrC16@@XZ @ 89 NONAME ; public: class TPtrC16  __thiscall TWTLSStructuredTextField::Value(void)const 
	?VerifyL@CWTLSRSASignatureResult@@UAEHABVTDesC8@@@Z @ 90 NONAME ; public: virtual int __thiscall CWTLSRSASignatureResult::VerifyL(class TDesC8 const &)
	?Version@CWTLSCertificate@@QBEHXZ @ 91 NONAME ; public: int __thiscall CWTLSCertificate::Version(void)const 
	?Warnings@CWTLSValidationResult@@QBEABV?$CArrayFixFlat@VTWTLSValidationStatus@@@@XZ @ 92 NONAME ; public: class CArrayFixFlat<class TWTLSValidationStatus> const & __thiscall CWTLSValidationResult::Warnings(void)const 

