EXPORTS
	??1CCertificateAppInfoManager@@UAE@XZ @ 1 NONAME ; CCertificateAppInfoManager::~CCertificateAppInfoManager(void)
	??1CUnifiedCertStore@@UAE@XZ @ 2 NONAME ; CUnifiedCertStore::~CUnifiedCertStore(void)
	??1CUnifiedKeyStore@@UAE@XZ @ 3 NONAME ; CUnifiedKeyStore::~CUnifiedKeyStore(void)
	?AddL@CCertificateAppInfoManager@@QAEXABVTCertificateAppInfo@@@Z @ 4 NONAME ; void CCertificateAppInfoManager::AddL(class TCertificateAppInfo const &)
	?ApplicationL@CCertificateAppInfoManager@@QBEABVTCertificateAppInfo@@ABVTUid@@AAH@Z @ 5 NONAME ; class TCertificateAppInfo const & CCertificateAppInfoManager::ApplicationL(class TUid const &, int &) const
	?Applications@CCertificateAppInfoManager@@QBEABV?$RArray@VTCertificateAppInfo@@@@XZ @ 6 NONAME ; class RArray<class TCertificateAppInfo> const & CCertificateAppInfoManager::Applications(void) const
	?CancelCreateKey@CUnifiedKeyStore@@QAEXXZ @ 7 NONAME ; void CUnifiedKeyStore::CancelCreateKey(void)
	?CancelDeleteKey@CUnifiedKeyStore@@QAEXXZ @ 8 NONAME ; void CUnifiedKeyStore::CancelDeleteKey(void)
	?CancelExportEncryptedKey@CUnifiedKeyStore@@QAEXXZ @ 9 NONAME ; void CUnifiedKeyStore::CancelExportEncryptedKey(void)
	?CancelExportKey@CUnifiedKeyStore@@QAEXXZ @ 10 NONAME ; void CUnifiedKeyStore::CancelExportKey(void)
	?CancelImportKey@CUnifiedKeyStore@@QAEXXZ @ 11 NONAME ; void CUnifiedKeyStore::CancelImportKey(void)
	?CancelInitialize@CUnifiedCertStore@@QAEXXZ @ 12 NONAME ; void CUnifiedCertStore::CancelInitialize(void)
	?CancelInitialize@CUnifiedKeyStore@@QAEXXZ @ 13 NONAME ; void CUnifiedKeyStore::CancelInitialize(void)
	?CancelRelock@CUnifiedKeyStore@@QAEXXZ @ 14 NONAME ; void CUnifiedKeyStore::CancelRelock(void)
	?CancelRemove@CUnifiedCertStore@@QAEXXZ @ 15 NONAME ; void CUnifiedCertStore::CancelRemove(void)
	?CancelSetApplicability@CUnifiedCertStore@@QAEXXZ @ 16 NONAME ; void CUnifiedCertStore::CancelSetApplicability(void)
	?CancelSetManagementPolicy@CUnifiedKeyStore@@QAEXXZ @ 17 NONAME ; void CUnifiedKeyStore::CancelSetManagementPolicy(void)
	?CancelSetPassphraseTimeout@CUnifiedKeyStore@@QAEXXZ @ 18 NONAME ; void CUnifiedKeyStore::CancelSetPassphraseTimeout(void)
	?CancelSetTrust@CUnifiedCertStore@@QAEXXZ @ 19 NONAME ; void CUnifiedCertStore::CancelSetTrust(void)
	?CancelSetUsePolicy@CUnifiedKeyStore@@QAEXXZ @ 20 NONAME ; void CUnifiedKeyStore::CancelSetUsePolicy(void)
	?CertStore@CUnifiedCertStore@@QAEAAVMCTCertStore@@H@Z @ 21 NONAME ; class MCTCertStore & CUnifiedCertStore::CertStore(int)
	?CertStoreCount@CUnifiedCertStore@@QBEHXZ @ 22 NONAME ; int CUnifiedCertStore::CertStoreCount(void) const
	?CreateKey@CUnifiedKeyStore@@QAEXHW4TKeyUsagePKCS15@@IABVTDesC16@@W4EKeyAlgorithm@CKeyInfoBase@@HVTTime@@3AAPAVCCTKeyInfo@@AAVTRequestStatus@@@Z @ 23 NONAME ; void CUnifiedKeyStore::CreateKey(int, enum TKeyUsagePKCS15, unsigned int, class TDesC16 const &, enum CKeyInfoBase::EKeyAlgorithm, int, class TTime, class TTime, class CCTKeyInfo * &, class TRequestStatus &)
	?DeleteKey@CUnifiedKeyStore@@QAEXVTCTTokenObjectHandle@@AAVTRequestStatus@@@Z @ 24 NONAME ; void CUnifiedKeyStore::DeleteKey(class TCTTokenObjectHandle, class TRequestStatus &)
	?ExportEncryptedKey@CUnifiedKeyStore@@QAEXVTCTTokenObjectHandle@@ABVCPBEncryptParms@@AAPAVHBufC8@@AAVTRequestStatus@@@Z @ 25 NONAME ; void CUnifiedKeyStore::ExportEncryptedKey(class TCTTokenObjectHandle, class CPBEncryptParms const &, class HBufC8 * &, class TRequestStatus &)
	?ExportKey@CUnifiedKeyStore@@QAEXVTCTTokenObjectHandle@@AAPAVHBufC8@@AAVTRequestStatus@@@Z @ 26 NONAME ; void CUnifiedKeyStore::ExportKey(class TCTTokenObjectHandle, class HBufC8 * &, class TRequestStatus &)
	?ImportKey@CUnifiedKeyStore@@QAEXHABVTDesC8@@W4TKeyUsagePKCS15@@ABVTDesC16@@HVTTime@@3AAPAVCCTKeyInfo@@AAVTRequestStatus@@@Z @ 27 NONAME ; void CUnifiedKeyStore::ImportKey(int, class TDesC8 const &, enum TKeyUsagePKCS15, class TDesC16 const &, int, class TTime, class TTime, class CCTKeyInfo * &, class TRequestStatus &)
	?Initialize@CUnifiedCertStore@@QAEXAAVTRequestStatus@@@Z @ 28 NONAME ; void CUnifiedCertStore::Initialize(class TRequestStatus &)
	?Initialize@CUnifiedKeyStore@@QAEXAAVTRequestStatus@@@Z @ 29 NONAME ; void CUnifiedKeyStore::Initialize(class TRequestStatus &)
	?KeyStore@CUnifiedKeyStore@@QAEAAVMCTKeyStore@@H@Z @ 30 NONAME ; class MCTKeyStore & CUnifiedKeyStore::KeyStore(int)
	?KeyStoreCount@CUnifiedKeyStore@@QBEHXZ @ 31 NONAME ; int CUnifiedKeyStore::KeyStoreCount(void) const
	?KeyStoreManager@CUnifiedKeyStore@@QAEAAVMCTKeyStoreManager@@H@Z @ 32 NONAME ; class MCTKeyStoreManager & CUnifiedKeyStore::KeyStoreManager(int)
	?KeyStoreManagerCount@CUnifiedKeyStore@@QBEHXZ @ 33 NONAME ; int CUnifiedKeyStore::KeyStoreManagerCount(void) const
	?List@CUnifiedCertStore@@QAEXAAV?$RMPointerArray@VCCTCertInfo@@@@ABVCCertAttributeFilter@@ABVTDesC8@@AAVTRequestStatus@@@Z @ 34 NONAME ; void CUnifiedCertStore::List(class RMPointerArray<class CCTCertInfo> &, class CCertAttributeFilter const &, class TDesC8 const &, class TRequestStatus &)
	?List@CUnifiedCertStore@@QAEXAAV?$RMPointerArray@VCCTCertInfo@@@@ABVCCertAttributeFilter@@V?$RPointerArray@$$CBVTDesC8@@@@AAVTRequestStatus@@@Z @ 35 NONAME ; void CUnifiedCertStore::List(class RMPointerArray<class CCTCertInfo> &, class CCertAttributeFilter const &, class RPointerArray<class TDesC8 const >, class TRequestStatus &)
	?NewL@CCertificateAppInfoManager@@SAPAV1@AAVRFs@@H@Z @ 36 NONAME ; class CCertificateAppInfoManager * CCertificateAppInfoManager::NewL(class RFs &, int)
	?NewL@CCertificateAppInfoManager@@SAPAV1@XZ @ 37 NONAME ; class CCertificateAppInfoManager * CCertificateAppInfoManager::NewL(void)
	?NewL@CUnifiedCertStore@@SAPAV1@AAVRFs@@H@Z @ 38 NONAME ; class CUnifiedCertStore * CUnifiedCertStore::NewL(class RFs &, int)
	?NewL@CUnifiedKeyStore@@SAPAV1@AAVRFs@@@Z @ 39 NONAME ; class CUnifiedKeyStore * CUnifiedKeyStore::NewL(class RFs &)
	?NewLC@CCertificateAppInfoManager@@SAPAV1@AAVRFs@@H@Z @ 40 NONAME ; class CCertificateAppInfoManager * CCertificateAppInfoManager::NewLC(class RFs &, int)
	?NewLC@CCertificateAppInfoManager@@SAPAV1@XZ @ 41 NONAME ; class CCertificateAppInfoManager * CCertificateAppInfoManager::NewLC(void)
	?NewLC@CUnifiedCertStore@@SAPAV1@AAVRFs@@H@Z @ 42 NONAME ; class CUnifiedCertStore * CUnifiedCertStore::NewLC(class RFs &, int)
	?NewLC@CUnifiedKeyStore@@SAPAV1@AAVRFs@@@Z @ 43 NONAME ; class CUnifiedKeyStore * CUnifiedKeyStore::NewLC(class RFs &)
	?ReadOnlyCertStore@CUnifiedCertStore@@QAEAAVMCTCertStore@@H@Z @ 44 NONAME ; class MCTCertStore & CUnifiedCertStore::ReadOnlyCertStore(int)
	?ReadOnlyCertStoreCount@CUnifiedCertStore@@QBEHXZ @ 45 NONAME ; int CUnifiedCertStore::ReadOnlyCertStoreCount(void) const
	?Relock@CUnifiedKeyStore@@QAEXAAVTRequestStatus@@@Z @ 46 NONAME ; void CUnifiedKeyStore::Relock(class TRequestStatus &)
	?Remove@CUnifiedCertStore@@QAEXABVCCTCertInfo@@AAVTRequestStatus@@@Z @ 47 NONAME ; void CUnifiedCertStore::Remove(class CCTCertInfo const &, class TRequestStatus &)
	?RemoveL@CCertificateAppInfoManager@@QAEXABVTUid@@@Z @ 48 NONAME ; void CCertificateAppInfoManager::RemoveL(class TUid const &)
	?Retrieve@CUnifiedCertStore@@QAEXABVCCTCertInfo@@AAPAVCCertificate@@AAVTRequestStatus@@@Z @ 49 NONAME ; void CUnifiedCertStore::Retrieve(class CCTCertInfo const &, class CCertificate * &, class TRequestStatus &)
	?SetApplicability@CUnifiedCertStore@@QAEXABVCCTCertInfo@@ABV?$RArray@VTUid@@@@AAVTRequestStatus@@@Z @ 50 NONAME ; void CUnifiedCertStore::SetApplicability(class CCTCertInfo const &, class RArray<class TUid> const &, class TRequestStatus &)
	?SetManagementPolicy@CUnifiedKeyStore@@QAEXVTCTTokenObjectHandle@@ABVTSecurityPolicy@@AAVTRequestStatus@@@Z @ 51 NONAME ; void CUnifiedKeyStore::SetManagementPolicy(class TCTTokenObjectHandle, class TSecurityPolicy const &, class TRequestStatus &)
	?SetPassphraseTimeout@CUnifiedKeyStore@@QAEXHAAVTRequestStatus@@@Z @ 52 NONAME ; void CUnifiedKeyStore::SetPassphraseTimeout(int, class TRequestStatus &)
	?SetTrust@CUnifiedCertStore@@QAEXABVCCTCertInfo@@HAAVTRequestStatus@@@Z @ 53 NONAME ; void CUnifiedCertStore::SetTrust(class CCTCertInfo const &, int, class TRequestStatus &)
	?SetUsePolicy@CUnifiedKeyStore@@QAEXVTCTTokenObjectHandle@@ABVTSecurityPolicy@@AAVTRequestStatus@@@Z @ 54 NONAME ; void CUnifiedKeyStore::SetUsePolicy(class TCTTokenObjectHandle, class TSecurityPolicy const &, class TRequestStatus &)
	?WritableCertStore@CUnifiedCertStore@@QAEAAVMCTWritableCertStore@@H@Z @ 55 NONAME ; class MCTWritableCertStore & CUnifiedCertStore::WritableCertStore(int)
	?WritableCertStoreCount@CUnifiedCertStore@@QBEHXZ @ 56 NONAME ; int CUnifiedCertStore::WritableCertStoreCount(void) const
	?NewL@CUnifiedCertStore@@SAPAV1@AAVRFs@@HAAV?$RArray@H@@@Z @ 57 NONAME ; class CUnifiedCertStore * CUnifiedCertStore::NewL(class RFs &, int, class RArray<int> &)
	?NewLC@CUnifiedCertStore@@SAPAV1@AAVRFs@@HAAV?$RArray@H@@@Z @ 58 NONAME ; class CUnifiedCertStore * CUnifiedCertStore::NewLC(class RFs &, int, class RArray<int> &)

