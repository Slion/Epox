EXPORTS
	?AesCancelRead@RCryptoDriver@@QAEXXZ @ 1 NONAME ; void RCryptoDriver::AesCancelRead(void)
	?AesCancelWrite@RCryptoDriver@@QAEXXZ @ 2 NONAME ; void RCryptoDriver::AesCancelWrite(void)
	?AesRead@RCryptoDriver@@QAEXAAVTRequestStatus@@AAVTDes8@@K@Z @ 3 NONAME ; void RCryptoDriver::AesRead(class TRequestStatus &, class TDes8 &, unsigned long)
	?AesWrite@RCryptoDriver@@QAEXAAVTRequestStatus@@AAVTDesC8@@@Z @ 4 NONAME ; void RCryptoDriver::AesWrite(class TRequestStatus &, class TDesC8 &)
	?GetConfig@RCryptoDriver@@QAEHAAV?$TPckgBuf@VTConfig@RCryptoDriver@@@@@Z @ 5 NONAME ; int RCryptoDriver::GetConfig(class TPckgBuf<class RCryptoDriver::TConfig> &)
	?GetHwVersions@RCryptoDriver@@QAEHAAV?$TPckgBuf@VTHwVersions@RCryptoDriver@@@@@Z @ 6 NONAME ; int RCryptoDriver::GetHwVersions(class TPckgBuf<class RCryptoDriver::THwVersions> &)
	?Open@RCryptoDriver@@QAEHXZ @ 7 NONAME ; int RCryptoDriver::Open(void)
	?Random@RCryptoDriver@@QAEXAAVTRequestStatus@@AAVTDes8@@@Z @ 8 NONAME ; void RCryptoDriver::Random(class TRequestStatus &, class TDes8 &)
	?RandomCancel@RCryptoDriver@@QAEXXZ @ 9 NONAME ; void RCryptoDriver::RandomCancel(void)
	?SetAesConfig@RCryptoDriver@@QAEHHW4TChainingMode@1@ABVTDesC8@@1@Z @ 10 NONAME ; int RCryptoDriver::SetAesConfig(int, enum RCryptoDriver::TChainingMode, class TDesC8 const &, class TDesC8 const &)
	?SetConfig@RCryptoDriver@@QAEHABV?$TPckgBuf@VTConfig@RCryptoDriver@@@@@Z @ 11 NONAME ; int RCryptoDriver::SetConfig(class TPckgBuf<class RCryptoDriver::TConfig> const &)

