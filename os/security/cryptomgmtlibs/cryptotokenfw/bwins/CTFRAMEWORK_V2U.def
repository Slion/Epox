EXPORTS
	??0CCTTokenType@@IAE@XZ @ 1 NONAME ; CCTTokenType::CCTTokenType(void)
	??0CKeyInfoBase@@IAE@V?$TBuf8@$0BE@@@W4TKeyUsagePKCS15@@IPAVHBufC16@@HABVTSecurityPolicy@@3W4EKeyAlgorithm@0@HHVTTime@@5PAVHBufC8@@@Z @ 2 NONAME ; CKeyInfoBase::CKeyInfoBase(class TBuf8<20>, enum TKeyUsagePKCS15, unsigned int, class HBufC16 *, int, class TSecurityPolicy const &, class TSecurityPolicy const &, enum CKeyInfoBase::EKeyAlgorithm, int, int, class TTime, class TTime, class HBufC8 *)
	??0CKeyInfoBase@@IAE@XZ @ 3 NONAME ; CKeyInfoBase::CKeyInfoBase(void)
	??0MCTTokenObject@@IAE@AAVMCTToken@@@Z @ 4 NONAME ; MCTTokenObject::MCTTokenObject(class MCTToken &)
	??0MCertInfo@@IAE@ABV0@@Z @ 5 NONAME ; MCertInfo::MCertInfo(class MCertInfo const &)
	??0MCertInfo@@IAE@ABVTDesC16@@W4TCertificateFormat@@W4TCertificateOwnerType@@HPBV?$TBuf8@$0BE@@@3HH@Z @ 6 NONAME ; MCertInfo::MCertInfo(class TDesC16 const &, enum TCertificateFormat, enum TCertificateOwnerType, int, class TBuf8<20> const *, class TBuf8<20> const *, int, int)
	??0MCertInfo@@IAE@XZ @ 7 NONAME ; MCertInfo::MCertInfo(void)
	??0TCTKeyAttributeFilter@@QAE@XZ @ 8 NONAME ; TCTKeyAttributeFilter::TCTKeyAttributeFilter(void)
	??0TCTTokenHandle@@QAE@ABV0@@Z @ 9 NONAME ; TCTTokenHandle::TCTTokenHandle(class TCTTokenHandle const &)
	??0TCTTokenHandle@@QAE@VTUid@@H@Z @ 10 NONAME ; TCTTokenHandle::TCTTokenHandle(class TUid, int)
	??0TCTTokenHandle@@QAE@XZ @ 11 NONAME ; TCTTokenHandle::TCTTokenHandle(void)
	??0TCTTokenObjectHandle@@QAE@ABV0@@Z @ 12 NONAME ; TCTTokenObjectHandle::TCTTokenObjectHandle(class TCTTokenObjectHandle const &)
	??0TCTTokenObjectHandle@@QAE@VTCTTokenHandle@@H@Z @ 13 NONAME ; TCTTokenObjectHandle::TCTTokenObjectHandle(class TCTTokenHandle, int)
	??0TCTTokenObjectHandle@@QAE@XZ @ 14 NONAME ; TCTTokenObjectHandle::TCTTokenObjectHandle(void)
	??0TCertificateAppInfo@@QAE@ABVTUid@@ABV?$TBuf@$0IA@@@@Z @ 15 NONAME ; TCertificateAppInfo::TCertificateAppInfo(class TUid const &, class TBuf<128> const &)
	??0TCertificateAppInfo@@QAE@XZ @ 16 NONAME ; TCertificateAppInfo::TCertificateAppInfo(void)
	??1CCTCertInfo@@MAE@XZ @ 17 NONAME ; CCTCertInfo::~CCTCertInfo(void)
	??1CCTTokenType@@MAE@XZ @ 18 NONAME ; CCTTokenType::~CCTTokenType(void)
	??1CCTTokenTypeDeleteHandler@@UAE@XZ @ 19 NONAME ; CCTTokenTypeDeleteHandler::~CCTTokenTypeDeleteHandler(void)
	??1CKeyInfoBase@@MAE@XZ @ 20 NONAME ; CKeyInfoBase::~CKeyInfoBase(void)
	??1MCertInfo@@IAE@XZ @ 21 NONAME ; MCertInfo::~MCertInfo(void)
	??4TCertificateAppInfo@@QAEAAV0@ABV0@@Z @ 22 NONAME ; class TCertificateAppInfo & TCertificateAppInfo::operator=(class TCertificateAppInfo const &)
	??8CCTCertInfo@@QBEHABV0@@Z @ 23 NONAME ; int CCTCertInfo::operator==(class CCTCertInfo const &) const
	??8TCTTokenHandle@@QBEHABV0@@Z @ 24 NONAME ; int TCTTokenHandle::operator==(class TCTTokenHandle const &) const
	??8TCTTokenObjectHandle@@QBEHABV0@@Z @ 25 NONAME ; int TCTTokenObjectHandle::operator==(class TCTTokenObjectHandle const &) const
	?AddTokenRef@MCTTokenObject@@IAEXXZ @ 26 NONAME ; void MCTTokenObject::AddTokenRef(void)
	?CancelGetInterface@MCTToken@@QAEXXZ @ 27 NONAME ; void MCTToken::CancelGetInterface(void)
	?CancelNotify@MCTToken@@UAEXXZ @ 28 NONAME ; void MCTToken::CancelNotify(void)
	?CertificateFormat@CCTCertInfo@@QBE?AW4TCertificateFormat@@XZ @ 29 NONAME ; enum TCertificateFormat CCTCertInfo::CertificateFormat(void) const
	?CertificateOwnerType@CCTCertInfo@@QBE?AW4TCertificateOwnerType@@XZ @ 30 NONAME ; enum TCertificateOwnerType CCTCertInfo::CertificateOwnerType(void) const
	?ConstructL@CCTTokenType@@IAEXVTUid@@ABVTDesC16@@VRFs@@@Z @ 31 NONAME ; void CCTTokenType::ConstructL(class TUid, class TDesC16 const &, class RFs)
	?ConstructL@CKeyInfoBase@@IAEXAAVRReadStream@@@Z @ 32 NONAME ; void CKeyInfoBase::ConstructL(class RReadStream &)
	?ConstructL@CKeyInfoBase@@IAEXXZ @ 33 NONAME ; void CKeyInfoBase::ConstructL(void)
	?CreateL@SecurityDialogFactory@@SAPAVMSecurityDialog@@XZ @ 34 NONAME ; class MSecurityDialog * SecurityDialogFactory::CreateL(void)
	?DoRelease@MCTToken@@MAEXXZ @ 35 NONAME ; void MCTToken::DoRelease(void)
	?DoRelease@MCTTokenInterface@@MAEXXZ @ 36 NONAME ; void MCTTokenInterface::DoRelease(void)
	?DoRelease@MCTTokenObject@@MAEXXZ @ 37 NONAME ; void MCTTokenObject::DoRelease(void)
	?ExternalizeL@CKeyInfoBase@@QBEXAAVRWriteStream@@@Z @ 38 NONAME ; void CKeyInfoBase::ExternalizeL(class RWriteStream &) const
	?ExternalizeL@MCertInfo@@QBEXAAVRWriteStream@@@Z @ 39 NONAME ; void MCertInfo::ExternalizeL(class RWriteStream &) const
	?ExternalizeL@TCertificateAppInfo@@QBEXAAVRWriteStream@@@Z @ 40 NONAME ; void TCertificateAppInfo::ExternalizeL(class RWriteStream &) const
	?GetInterface@MCTToken@@QAEXVTUid@@AAPAVMCTTokenInterface@@AAVTRequestStatus@@@Z @ 41 NONAME ; void MCTToken::GetInterface(class TUid, class MCTTokenInterface * &, class TRequestStatus &)
	?Handle@CCTCertInfo@@UBE?AVTCTTokenObjectHandle@@XZ @ 42 NONAME ; class TCTTokenObjectHandle CCTCertInfo::Handle(void) const
	?Id@TCertificateAppInfo@@QBEABVTUid@@XZ @ 43 NONAME ; class TUid const & TCertificateAppInfo::Id(void) const
	?IncReferenceCount@CCTTokenType@@IAEXXZ @ 44 NONAME ; void CCTTokenType::IncReferenceCount(void)
	?InternalizeL@MCertInfo@@QAEXAAVRReadStream@@@Z @ 45 NONAME ; void MCertInfo::InternalizeL(class RReadStream &)
	?InternalizeL@TCertificateAppInfo@@QAEXAAVRReadStream@@@Z @ 46 NONAME ; void TCertificateAppInfo::InternalizeL(class RReadStream &)
	?IsDeletable@CCTCertInfo@@QBEHXZ @ 47 NONAME ; int CCTCertInfo::IsDeletable(void) const
	?IssuerHash@CCTCertInfo@@QBEPBVTDesC8@@XZ @ 48 NONAME ; class TDesC8 const * CCTCertInfo::IssuerHash(void) const
	?IssuerKeyId@CCTCertInfo@@QBEABV?$TBuf8@$0BE@@@XZ @ 49 NONAME ; class TBuf8<20> const & CCTCertInfo::IssuerKeyId(void) const
	?KeyUsagePKCS15ToX509@@YA?AW4TKeyUsageX509@@W4TKeyUsagePKCS15@@@Z @ 50 NONAME ; enum TKeyUsageX509 KeyUsagePKCS15ToX509(enum TKeyUsagePKCS15)
	?KeyUsageX509ToPKCS15Private@@YA?AW4TKeyUsagePKCS15@@W4TKeyUsageX509@@@Z @ 51 NONAME ; enum TKeyUsagePKCS15 KeyUsageX509ToPKCS15Private(enum TKeyUsageX509)
	?KeyUsageX509ToPKCS15Public@@YA?AW4TKeyUsagePKCS15@@W4TKeyUsageX509@@@Z @ 52 NONAME ; enum TKeyUsagePKCS15 KeyUsageX509ToPKCS15Public(enum TKeyUsageX509)
	?Label@CCTTokenType@@UBEABVTDesC16@@XZ @ 53 NONAME ; class TDesC16 const & CCTTokenType::Label(void) const
	?Log@CTLogger@@SAXPAXV?$TRefByValue@$$CBVTDesC16@@@@ZZ @ 54 NONAME ; void CTLogger::Log(void *, class TRefByValue<class TDesC16 const >, ...)
	?Name@TCertificateAppInfo@@QBEABV?$TBuf@$0IA@@@XZ @ 55 NONAME ; class TBuf<128> const & TCertificateAppInfo::Name(void) const
	?NewL@CCTCertInfo@@SAPAV1@AAVRReadStream@@AAVMCTToken@@@Z @ 56 NONAME ; class CCTCertInfo * CCTCertInfo::NewL(class RReadStream &, class MCTToken &)
	?NewL@CCTCertInfo@@SAPAV1@ABV1@@Z @ 57 NONAME ; class CCTCertInfo * CCTCertInfo::NewL(class CCTCertInfo const &)
	?NewL@CCTCertInfo@@SAPAV1@ABVTDesC16@@W4TCertificateFormat@@W4TCertificateOwnerType@@HPBV?$TBuf8@$0BE@@@3AAVMCTToken@@H@Z @ 58 NONAME ; class CCTCertInfo * CCTCertInfo::NewL(class TDesC16 const &, enum TCertificateFormat, enum TCertificateOwnerType, int, class TBuf8<20> const *, class TBuf8<20> const *, class MCTToken &, int)
	?NewL@CCTCertInfo@@SAPAV1@ABVTDesC16@@W4TCertificateFormat@@W4TCertificateOwnerType@@HPBV?$TBuf8@$0BE@@@3AAVMCTToken@@HHPBVTDesC8@@@Z @ 59 NONAME ; class CCTCertInfo * CCTCertInfo::NewL(class TDesC16 const &, enum TCertificateFormat, enum TCertificateOwnerType, int, class TBuf8<20> const *, class TBuf8<20> const *, class MCTToken &, int, int, class TDesC8 const *)
	?NewL@CCTKeyInfo@@SAPAV1@AAVRReadStream@@AAVMCTToken@@@Z @ 60 NONAME ; class CCTKeyInfo * CCTKeyInfo::NewL(class RReadStream &, class MCTToken &)
	?NewL@CCTKeyInfo@@SAPAV1@V?$TBuf8@$0BE@@@W4TKeyUsagePKCS15@@IPAVMCTAuthenticationObject@@PAVHBufC16@@AAVMCTToken@@HABVTSecurityPolicy@@5W4EKeyAlgorithm@CKeyInfoBase@@HHVTTime@@7PAVHBufC8@@@Z @ 61 NONAME ; class CCTKeyInfo * CCTKeyInfo::NewL(class TBuf8<20>, enum TKeyUsagePKCS15, unsigned int, class MCTAuthenticationObject *, class HBufC16 *, class MCTToken &, int, class TSecurityPolicy const &, class TSecurityPolicy const &, enum CKeyInfoBase::EKeyAlgorithm, int, int, class TTime, class TTime, class HBufC8 *)
	?NewL@CCertAttributeFilter@@SAPAV1@XZ @ 62 NONAME ; class CCertAttributeFilter * CCertAttributeFilter::NewL(void)
	?NewLC@CCTCertInfo@@SAPAV1@AAVRReadStream@@AAVMCTToken@@@Z @ 63 NONAME ; class CCTCertInfo * CCTCertInfo::NewLC(class RReadStream &, class MCTToken &)
	?NewLC@CCTCertInfo@@SAPAV1@ABV1@@Z @ 64 NONAME ; class CCTCertInfo * CCTCertInfo::NewLC(class CCTCertInfo const &)
	?NewLC@CCTCertInfo@@SAPAV1@ABVTDesC16@@W4TCertificateFormat@@W4TCertificateOwnerType@@HPBV?$TBuf8@$0BE@@@3AAVMCTToken@@H@Z @ 65 NONAME ; class CCTCertInfo * CCTCertInfo::NewLC(class TDesC16 const &, enum TCertificateFormat, enum TCertificateOwnerType, int, class TBuf8<20> const *, class TBuf8<20> const *, class MCTToken &, int)
	?NewLC@CCTCertInfo@@SAPAV1@ABVTDesC16@@W4TCertificateFormat@@W4TCertificateOwnerType@@HPBV?$TBuf8@$0BE@@@3AAVMCTToken@@HHPBVTDesC8@@@Z @ 66 NONAME ; class CCTCertInfo * CCTCertInfo::NewLC(class TDesC16 const &, enum TCertificateFormat, enum TCertificateOwnerType, int, class TBuf8<20> const *, class TBuf8<20> const *, class MCTToken &, int, int, class TDesC8 const *)
	?NewLC@CCertAttributeFilter@@SAPAV1@XZ @ 67 NONAME ; class CCertAttributeFilter * CCertAttributeFilter::NewLC(void)
	?NotifyOnRemoval@MCTToken@@UAEXAAVTRequestStatus@@@Z @ 68 NONAME ; void MCTToken::NotifyOnRemoval(class TRequestStatus &)
	?Release@CCTTokenType@@UAEXXZ @ 69 NONAME ; void CCTTokenType::Release(void)
	?Release@MCTToken@@QAEXXZ @ 70 NONAME ; void MCTToken::Release(void)
	?Release@MCTTokenInterface@@QAEXXZ @ 71 NONAME ; void MCTTokenInterface::Release(void)
	?Release@MCTTokenObject@@QAEXXZ @ 72 NONAME ; void MCTTokenObject::Release(void)
	?SetFormat@CCertAttributeFilter@@QAEXW4TCertificateFormat@@@Z @ 73 NONAME ; void CCertAttributeFilter::SetFormat(enum TCertificateFormat)
	?SetIssuerKeyId@CCertAttributeFilter@@QAEXABV?$TBuf8@$0BE@@@@Z @ 74 NONAME ; void CCertAttributeFilter::SetIssuerKeyId(class TBuf8<20> const &)
	?SetKeyUsage@CCertAttributeFilter@@QAEXW4TKeyUsageX509@@@Z @ 75 NONAME ; void CCertAttributeFilter::SetKeyUsage(enum TKeyUsageX509)
	?SetLabel@CCertAttributeFilter@@QAEXABV?$TBuf@$0EA@@@@Z @ 76 NONAME ; void CCertAttributeFilter::SetLabel(class TBuf<64> const &)
	?SetOwnerType@CCertAttributeFilter@@QAEXW4TCertificateOwnerType@@@Z @ 77 NONAME ; void CCertAttributeFilter::SetOwnerType(enum TCertificateOwnerType)
	?SetSubjectKeyId@CCertAttributeFilter@@QAEXABV?$TBuf8@$0BE@@@@Z @ 78 NONAME ; void CCertAttributeFilter::SetSubjectKeyId(class TBuf8<20> const &)
	?SetUid@CCertAttributeFilter@@QAEXVTUid@@@Z @ 79 NONAME ; void CCertAttributeFilter::SetUid(class TUid)
	?Size@CCTCertInfo@@QBEHXZ @ 80 NONAME ; int CCTCertInfo::Size(void) const
	?SubjectKeyId@CCTCertInfo@@QBEABV?$TBuf8@$0BE@@@XZ @ 81 NONAME ; class TBuf8<20> const & CCTCertInfo::SubjectKeyId(void) const
	?Type@CCTTokenType@@UBE?AVTUid@@XZ @ 82 NONAME ; class TUid CCTTokenType::Type(void) const
	?UpdateIndent@CTLogger@@SAXH@Z @ 83 NONAME ; void CTLogger::UpdateIndent(int)
	?ConstructL@MCertInfo@@IAEXPBVTDesC8@@@Z @ 84 NONAME ; void MCertInfo::ConstructL(class TDesC8 const *)
	?ExternalizeL@CCertAttributeFilter@@QBEXAAVRWriteStream@@@Z @ 85 NONAME ; void CCertAttributeFilter::ExternalizeL(class RWriteStream &) const
	?NewL@CCertAttributeFilter@@SAPAV1@AAVRReadStream@@@Z @ 86 NONAME ; class CCertAttributeFilter * CCertAttributeFilter::NewL(class RReadStream &)
	?SetCertificateId@CCTCertInfo@@QAEXH@Z @ 87 NONAME ; void CCTCertInfo::SetCertificateId(int)
	?FailureReason@CServerAuthenticationFailureInput@@QAE?AW4TValidationError@@XZ @ 88 NONAME ; enum TValidationError CServerAuthenticationFailureInput::FailureReason(void)
	?GetEncodedCert@CServerAuthenticationFailureInput@@QAEXAAVTPtrC8@@@Z @ 89 NONAME ; void CServerAuthenticationFailureInput::GetEncodedCert(class TPtrC8 &)
	?GetServerName@CServerAuthenticationFailureInput@@QAEXAAVTPtrC8@@@Z @ 90 NONAME ; void CServerAuthenticationFailureInput::GetServerName(class TPtrC8 &)
	?NewL@CServerAuthenticationFailureInput@@SAPAV1@ABVTDesC8@@H@Z @ 91 NONAME ; class CServerAuthenticationFailureInput * CServerAuthenticationFailureInput::NewL(class TDesC8 const &, int)
	?NewLC@CServerAuthenticationFailureInput@@SAPAV1@ABVTDesC8@@H@Z @ 92 NONAME ; class CServerAuthenticationFailureInput * CServerAuthenticationFailureInput::NewLC(class TDesC8 const &, int)
	?PackBufferL@CServerAuthenticationFailureInput@@QBEPAVHBufC8@@XZ @ 93 NONAME ; class HBufC8 * CServerAuthenticationFailureInput::PackBufferL(void) const

