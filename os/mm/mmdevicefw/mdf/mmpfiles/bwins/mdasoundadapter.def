EXPORTS
	??0RMdaDevSound@@QAE@XZ @ 1 NONAME ; RMdaDevSound::RMdaDevSound(void)
	?BytesPlayed@RMdaDevSound@@QAEHXZ @ 2 NONAME ; int RMdaDevSound::BytesPlayed(void)
	?CancelNotifyPlayError@RMdaDevSound@@QAEXXZ @ 3 NONAME ; void RMdaDevSound::CancelNotifyPlayError(void)
	?CancelNotifyRecordError@RMdaDevSound@@QAEXXZ @ 4 NONAME ; void RMdaDevSound::CancelNotifyRecordError(void)
	?CancelPlayData@RMdaDevSound@@QAEXXZ @ 5 NONAME ; void RMdaDevSound::CancelPlayData(void)
	?CancelRecordData@RMdaDevSound@@QAEXXZ @ 6 NONAME ; void RMdaDevSound::CancelRecordData(void)
	?Close@RMdaDevSound@@QAEXXZ @ 7 NONAME ; void RMdaDevSound::Close(void)
	?FlushPlayBuffer@RMdaDevSound@@QAEXXZ @ 8 NONAME ; void RMdaDevSound::FlushPlayBuffer(void)
	?FlushRecordBuffer@RMdaDevSound@@QAEXXZ @ 9 NONAME ; void RMdaDevSound::FlushRecordBuffer(void)
	?GetPlayFormat@RMdaDevSound@@QAEXAAV?$TPckgBuf@VTCurrentSoundFormat@RMdaDevSound@@@@@Z @ 10 NONAME ; void RMdaDevSound::GetPlayFormat(class TPckgBuf<class RMdaDevSound::TCurrentSoundFormat> &)
	?GetRecordFormat@RMdaDevSound@@QAEXAAV?$TPckgBuf@VTCurrentSoundFormat@RMdaDevSound@@@@@Z @ 11 NONAME ; void RMdaDevSound::GetRecordFormat(class TPckgBuf<class RMdaDevSound::TCurrentSoundFormat> &)
	?Handle@RMdaDevSound@@QAEHXZ @ 12 NONAME ; int RMdaDevSound::Handle(void)
	?IsMdaSound@RMdaDevSound@@QAEHXZ @ 13 NONAME ; int RMdaDevSound::IsMdaSound(void)
	?NotifyPlayError@RMdaDevSound@@QAEXAAVTRequestStatus@@@Z @ 14 NONAME ; void RMdaDevSound::NotifyPlayError(class TRequestStatus &)
	?NotifyRecordError@RMdaDevSound@@QAEXAAVTRequestStatus@@@Z @ 15 NONAME ; void RMdaDevSound::NotifyRecordError(class TRequestStatus &)
	?Open@RMdaDevSound@@QAEHH@Z @ 16 NONAME ; int RMdaDevSound::Open(int)
	?PausePlayBuffer@RMdaDevSound@@QAEXXZ @ 17 NONAME ; void RMdaDevSound::PausePlayBuffer(void)
	?PlayData@RMdaDevSound@@QAEXAAVTRequestStatus@@ABVTDesC8@@@Z @ 18 NONAME ; void RMdaDevSound::PlayData(class TRequestStatus &, class TDesC8 const &)
	?PlayFormatsSupported@RMdaDevSound@@QAEXAAV?$TPckgBuf@VTSoundFormatsSupported@RMdaDevSound@@@@@Z @ 19 NONAME ; void RMdaDevSound::PlayFormatsSupported(class TPckgBuf<class RMdaDevSound::TSoundFormatsSupported> &)
	?PlayVolume@RMdaDevSound@@QAEHXZ @ 20 NONAME ; int RMdaDevSound::PlayVolume(void)
	?RecordData@RMdaDevSound@@QAEXAAVTRequestStatus@@AAVTDes8@@@Z @ 21 NONAME ; void RMdaDevSound::RecordData(class TRequestStatus &, class TDes8 &)
	?RecordFormatsSupported@RMdaDevSound@@QAEXAAV?$TPckgBuf@VTSoundFormatsSupported@RMdaDevSound@@@@@Z @ 22 NONAME ; void RMdaDevSound::RecordFormatsSupported(class TPckgBuf<class RMdaDevSound::TSoundFormatsSupported> &)
	?RecordLevel@RMdaDevSound@@QAEHXZ @ 23 NONAME ; int RMdaDevSound::RecordLevel(void)
	?ResetBytesPlayed@RMdaDevSound@@QAEXXZ @ 24 NONAME ; void RMdaDevSound::ResetBytesPlayed(void)
	?ResumePlaying@RMdaDevSound@@QAEXAAVTRequestStatus@@@Z @ 25 NONAME ; void RMdaDevSound::ResumePlaying(class TRequestStatus &)
	?ResumePlaying@RMdaDevSound@@QAEXXZ @ 26 NONAME ; void RMdaDevSound::ResumePlaying(void)
	?SetPlayFormat@RMdaDevSound@@QAEHABV?$TPckgBuf@VTCurrentSoundFormat@RMdaDevSound@@@@@Z @ 27 NONAME ; int RMdaDevSound::SetPlayFormat(class TPckgBuf<class RMdaDevSound::TCurrentSoundFormat> const &)
	?SetPlayVolume@RMdaDevSound@@QAEXH@Z @ 28 NONAME ; void RMdaDevSound::SetPlayVolume(int)
	?SetRecordFormat@RMdaDevSound@@QAEHABV?$TPckgBuf@VTCurrentSoundFormat@RMdaDevSound@@@@@Z @ 29 NONAME ; int RMdaDevSound::SetRecordFormat(class TPckgBuf<class RMdaDevSound::TCurrentSoundFormat> const &)
	?SetRecordLevel@RMdaDevSound@@QAEXH@Z @ 30 NONAME ; void RMdaDevSound::SetRecordLevel(int)
	?VersionRequired@RMdaDevSound@@QBE?AVTVersion@@XZ @ 31 NONAME ; class TVersion RMdaDevSound::VersionRequired(void) const
	?PauseRecordBuffer@RMdaDevSound@@QAEXXZ @ 32 NONAME ; void RMdaDevSound::PauseRecordBuffer(void)
	?ResumeRecording@RMdaDevSound@@QAEXXZ @ 33 NONAME ; void RMdaDevSound::ResumeRecording(void)
	?KSoundAdapterForceStereo@@3HB @ 34 NONAME ; int const KSoundAdapterForceStereo
	?GetTimePlayed@RMdaDevSound@@QAEHAAVTTimeIntervalMicroSeconds@@@Z @ 35 NONAME ; int RMdaDevSound::GetTimePlayed(class TTimeIntervalMicroSeconds &)
	?SetVolume@RMdaDevSound@@QAEXH@Z @ 36 NONAME ; void RMdaDevSound::SetVolume(int)

