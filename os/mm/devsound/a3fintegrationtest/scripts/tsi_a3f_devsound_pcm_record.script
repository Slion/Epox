// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE tsi_a3f_devsound.dll

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0001
//! @SYMTestCaseDesc			Positive: PCM16 8k mono record using internal phone memory (+ve)
//! 							Note: When this test is run on hardware it will record onto RAM (c:\ drive), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on internal phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono mode with sampling rate of 8 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 8 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0001 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0002
//! @SYMTestCaseDesc			Positive: PCM16 8k mono record, stop and record again (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono mode with sampling rate of 8 KHz.
//! 							2.	Start recording and write recorded data to file.
//! 							3.	Stop recording after pre-defined time, e.g. 10 seconds.
//! 							4.	Start recording again and write recorded data to same file as in step 2.
//! 							5.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 8 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0002 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0003
//! @SYMTestCaseDesc			Positive: PCM16 16k mono record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono mode with sampling rate of 16 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 16 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0003 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0004
//! @SYMTestCaseDesc			Positive: PCM16 24k mono record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono mode with sampling rate of 24 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 24 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0004 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0005
//! @SYMTestCaseDesc			Positive: PCM16 32k mono record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono mode with sampling rate of 32 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 32 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0005 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0006
//! @SYMTestCaseDesc			Positive: PCM16 48k mono record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in mono with sampling rate of 48 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in mono mode with sampling rate of 48 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0006 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0007
//! @SYMTestCaseDesc			Positive: PCM16 8k stereo record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in stereo mode with sampling rate of 8 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in stereo mode with sampling rate of 8 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0007 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0008
//! @SYMTestCaseDesc			Positive: PCM16 16k stereo record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in stereo mode with sampling rate of 16 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in stereo mode with sampling rate of 16 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0008 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0009
//! @SYMTestCaseDesc			Positive: PCM16 24k stereo record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in stereo mode with sampling rate of 24 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in stereo mode with sampling rate of 24 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0009 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0010
//! @SYMTestCaseDesc			Positive: PCM16 32k stereo record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in stereo mode with sampling rate of 32 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in stereo mode with sampling rate of 32 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0010 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0011
//! @SYMTestCaseDesc			Positive: PCM16 48k stereo record (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7928
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data in stereo mode with sampling rate of 48 KHz.
//! 							2.	Set the DevSound capability settings for channel mode and sample rate using TMMFCapabilities object via CMMFDevSound::SetConfigL.
//! 							3.	Set the microphone gain balance for recording via CMMFDevSound::SetRecordBalanceL with some appropriate left and right percentages.
//! 							4.	Start recording and write recorded data to file.
//! 							5.	Read the DevSound capability settings via CMMFDevSound::Config during record process and compare with the expected values set in step 2.
//! 							6.	Read the microphone gain balance via CMMFDevSound::GetRecordBalanceL during record process and compare with the expected gain balance
//! 								set in step 3.
//! 							7.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data in stereo mode with sampling rate of 48 KHz with all the DevSound callback functions
//! 							being executed as required throughout the test. The DevSound capability settings and microphone gain balance returned during record
//! 							process should be as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0011 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0012
//! @SYMTestCaseDesc			Positive: Record and playback via async writing recorded audio data to file (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					????
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Start recording and write recorded data to file.
//! 							3.	Stop recording after pre-defined time, e.g. 10 seconds.
//! 							4.	Configure DevSound to play the file recorded in step 2 in PCM16 raw audio data format.
//! 							5.	Play the file recorded in step 2 to finish.
//!
//! @SYMTestExpectedResults 	Devsound to successfully record PCM16 raw audio data and play it back with all the DevSound callback functions being executed
//! 							as required throughout the test.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0012 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0013
//! @SYMTestCaseDesc			Positive: Set gain during recording of PCM8 raw audio data. (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7934
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM8 raw audio data.
//! 							2.	Set the current recording gain to the max gain (CMMFDevSound::MaxGain) possible via CMMFDevSound::SetGain.
//! 							3.	Start recording and write recorded data to file.
//! 							4.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 2.
//! 							5.	Set the current recording gain to CMMFDevSound::MaxGain()/2 via CMMFDevSound::SetGain.
//! 							6.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 5.
//! 							7.	Set the current recording gain to 0 via CMMFDevSound::SetGain.
//! 							8.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 7.
//! 							9.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Current gain values returned during record process are as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0013 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0014
//! @SYMTestCaseDesc			Positive: Set gain during recording of PCM16 raw audio data. (+ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7934
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Set the current recording gain to the max gain (CMMFDevSound::MaxGain) possible via CMMFDevSound::SetGain.
//! 							3.	Start recording and write recorded data to file.
//! 							4.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 2.
//! 							5.	Set the current recording gain to CMMFDevSound::MaxGain()/2 via CMMFDevSound::SetGain.
//! 							6.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 5.
//! 							7.	Set the current recording gain to 0 via CMMFDevSound::SetGain.
//! 							8.	Read the current gain via CMMFDevSound::Gain during record process and compare with the expected gain value set in step 7.
//! 							9.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	Current gain values returned during record process are as expected.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0014 \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0015
//! @SYMTestCaseDesc			Negative: Initialize DevSound in play mode and record. (-ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7933
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Initialize DevSound via CMMFDevSound::InitializeL in play mode using TMMFState::EMMFStatePlaying.
//! 							3.	Start recording via CMMFDevSound::RecordInitL and ensure the call leaves with KErrNotSupported.
//!
//! @SYMTestExpectedResults 	CMMFDevSound::RecordInitL leaves with KErrNotSupported when DevSound is initialized in play mode.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0015
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0016
//! @SYMTestCaseDesc			Negative: Call CMMFDevSound::InitializeL while recording. (-ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					7933
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Start recording and write recorded data to file.
//! 							3.	Call CMMFDevSound::InitializeL again during the recording process and ensure the call leaves with KErrNotReady
//! 							4.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	The CMMFDevSound::InitializeL call during recording leaves with KErrNotReady with the existing recording still continuing.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0016
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0017
//! @SYMTestCaseDesc			Positive: Call CMMFDevSound::CancelInitialize before the InitializeComplete callback. (+ve)
//! 							
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					????
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Initialize DevSound via CMMFDevSound::InitializeL in record mode using TMMFState::EMMFStateRecording.
//! 							3.	Call CMMFDevSound::CancelInitialize before the InitializeComplete callback is received
//! 							4.	Wait 10 seconds to ensure the InitializeComplete callback is not received.
//! 							5.	Call SetConfig to verify DevSound is not initialized.
//!
//! @SYMTestExpectedResults 	The CMMFDevSound::CancelInitialize call cancels the InitializeComplete callback. DevSound is not Initialized

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0017  \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0018
//! @SYMTestCaseDesc			Negative: Call CMMFDevSound::EmptyBuffers while initialised to record audio. (-ve)
//! 							
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					????
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Initialize DevSound via CMMFDevSound::InitializeL in record mode using TMMFState::EMMFStateRecording.
//! 							3.	Call CMMFDevSound::EmptyBuffers after the InitializeComplete callback is received
//!
//! @SYMTestExpectedResults 	The CMMFDevSound::EmptyBuffers call returns with KErrNotSupported

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0018  \tsi_a3f_devsound\tsi_a3f_devsound_record.ini
TEST_COMPLETE

//! @SYMTestCaseID				MM-A3F-DEVSOUND-REC-PCM-I-0019
//! @SYMTestCaseDesc			Negative: Call CMMFDevSound::EmptyBuffers while recording. (-ve)
//! 							Note: When this test is run on hardware it will record onto MMC (external phone memory), i.e. recorded data
//! 								  from DevSound will be incrementally written to file on external phone memory.
//! @SYMTestPriority			High
//! @SYMTestType				CIT
//! @SYMREQ 					????
//! @SYMPREQ					1540
//! @SYMTestActions 			1.	Configure DevSound to record PCM16 raw audio data.
//! 							2.	Start recording and write recorded data to file.
//! 							3.	Call CMMFDevSound::EmptyBuffers again during the recording process and ensure the call leaves with KErrNotSupported
//! 							4.	Stop recording after pre-defined time, e.g. 10 seconds.
//!
//! @SYMTestExpectedResults 	The CMMFDevSound::EmptyBuffers call during recording leaves with KErrNotSupported with the existing recording still continuing.

RUN_TEST_STEP 600000 TSI_A3F_DEVSOUND MM-A3F-DEVSOUND-REC-PCM-I-0019
TEST_COMPLETE