// Copyright (c) 2010 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// MM_A3F_DEVSOUND_CHRTZ_TONE_PREEMPTION.script
// Syntax:
// RUN_TEST_STEP <timeout>, <test suite>,  <test step>, <configuration file.ini>
//

LOAD_SUITE char_a3f_devsound.dll
delay 10

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-TONE-0041
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Play tone - Pre-emption - The Audio Policy decides to stop current DevSound playing instance.
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a Devsound instance.
//2. Create a CPeriodic instance.
//3. Initialise a DevSound instance to play tones.
//3.1 Wait for InitializeComplete(KErrNone) callback response.
//4. Start the CPeriodic object.
//5. Set the priority of the first devsound instance to the lowest
//5. Call PlayToneL().
//6. After a 2 second periodic timer event, play another tone using the second devsound instance using the highest priority.
//7. Wait for the ToneFinished() callback.
//!@SYMTestExpectedResults: 
//First tone request shall be played. First devsound instance is pre-empted by calling PlayError callback returns 
//aError= KErrInUse, KErrDied or KErrAccessDenied
PRINT Play tone - Pre-emption - The Audio Policy decides to stop current DevSound playing instance.
RUN_TEST_STEP 15000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-TONE-0041, c:\mm_a3f_devsound_play_tone.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-TONE-0042
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Play tone - Rejection - The Audio Policy decides to reject a new DevSound client requests 
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a Devsound instance.
//2. Create a CPeriodic instance.
//3. Initialise a DevSound instance to play tones.
//3.1 Wait for InitializeComplete(KErrNone) callback response.
//4. Start the CPeriodic object.
//5. Set the priority of the first devsound instance to the highest
//5. Call PlayToneL().
//6. After a 2 second periodic timer event, play another tone using the second devsound instance using the lowest priority.
//7. Wait for the ToneFinished() callback.
//!@SYMTestExpectedResults: 
//First tone request shall be played. Second devsound instance is rejected by calling PlayError callback returns
//aError= KErrInUse, KErrDied or KErrAccessDenied
PRINT Play tone - Rejection - The Audio Policy decides to reject a new DevSound client requests 
RUN_TEST_STEP 15000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-TONE-0042, c:\mm_a3f_devsound_play_tone.ini
TEST_COMPLETE


