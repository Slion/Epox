// Copyright (c) 2010 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// MM_A3F_DEVSOUND_CHRTZ_RAW_PLAY_PREEMPTION.script
// Syntax:
// RUN_TEST_STEP <timeout>, <test suite>,  <test step>, <configuration file.ini>
//

LOAD_SUITE char_a3f_devsound.dll
delay 1000

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0031
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Preemption Play Audio - Pre - emption scenario is between 2 instances that play audio files
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance.
//5. Initialise the first devsound instance to play audio and set its priority using a low value.
//5.1 Wait for InitializeComplete(KErrNone) callback response.
//6. Call PlayInitL() method for first DevSound instance and star timer events each 2 seconds.
//7. Wait for BufferToBeFilled(..) callback of first DevSound instance to fill the buffer with data. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//8. On timer event, set the second devsound큦 priority to the highest value and start playing audio.
//!@SYMTestExpectedResults: 
//First DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied
PRINT Preemption Play Audio - Pre - emption scenario is between 2 instances that play audio files
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0031, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0032
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Preemption Play Audio - Play audio instance is pre-empted by another one that play tones
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance.
//5. Initialise the first devsound instance to play audio and set its priority using a low value.
//5.1 Wait for InitializeComplete(KErrNone) callback response.
//6. Call PlayInitL() method for first DevSound instance and star timer events each 2 seconds.
//7. Wait for BufferToBeFilled(..) callback of first DevSound instance to fill the buffer with data. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//8. On timer event, set the second devsound큦 priority to the highest value and start playing a tone.
//!@SYMTestExpectedResults: 
//First DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied. Tones shall be normally played.
PRINT Preemption Play Audio - Play audio instance is pre-empted by another one that play tones
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0032, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0033
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Preemption Play Audio - Play audio instance is pre-empted by another one that record audio
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance.
//5. Initialise the first devsound instance to play audio and set its priority using a low value.
//5.1 Wait for InitializeComplete(KErrNone) callback response.
//6. Call PlayInitL() method for first DevSound instance and star timer events each 2 seconds.
//5. Wait for BufferToBeFilled(..) callback of first DevSound instance to fill the buffer with data. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//6. On timer event, set the second devsound큦 priority to the highest value and start recording audio.
//!@SYMTestExpectedResults: 
//First DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied
PRINT Preemption Play Audio - Play audio instance is pre-empted by another one that record audio
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0033, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0034
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Immediate rejection  Play Audio - Rejection scenario is between 2 instances that play audio
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance to play audio using low priority settings.
//5. Initialise the first devsound instance to play audio and set its priority using a high value.
//6. Call PlayInitL() method for first DevSound instance and star timer events each 2 seconds.
//7. Wait for BufferToBeFilled(..) callback of first DevSound instance to fill the buffer with data. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//8. On timer event, set the second devsound큦 priority to the lowest value and start playing audio.
//!@SYMTestExpectedResults: 
//Second DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied
PRINT Immediate rejection  Play Audio - Rejection scenario is between 2 instances that play audio
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0034, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0035
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Immediate rejection Play Audio - Play audio instance is rejected by another one that play tones
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance to play tone using low priority settings.
//5. Initialise the first devsound instance to play audio and set its priority using a low value.
//6. Call PlayToneL() method for first DevSound instance and star timer events each 2 seconds (Timer events must be less than tone duration).
//7. On timer event, set the second devsound큦 priority to the lowest value and start playing audio.
//!@SYMTestExpectedResults: 
//Second DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied
PRINT Immediate rejection Play Audio - Play audio instance is rejected by another one that play tones
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0035, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0036
//!@SYMREQ: 7951
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Immediate rejection Play Audio - Play audio instance is rejected by another one that record audio
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance to play audio using low priority settings.
//5. Initialise the first devsound instance to play audio and set its priority using a high value.
//6. Call PlayToneL() method for first DevSound instance and star timer events each 2 seconds.
//7. Wait for BufferToBeEmptied(..) callback of first DevSound instance to fill the buffer with data. To continue receiving BTBE callbacks, is mandatory to call RecordData() method.
//8. On timer event, set the second devsound큦 priority to the lowest value and start playing audio.
//!@SYMTestExpectedResults: 
//Second DevSound instance PlayError() callback shall return aError = KErrInUse, KErrDied or KErrAccessDenied
PRINT Immediate rejection Play Audio - Play audio instance is rejected by another one that record audio
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0036, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0039
//!@SYMREQ: ????
//!@SYMPREQ: 1540
//!@SYMTestCaseDec: Receipt of Notification of a Resource Available Event.(deleting the DevSound instance of the High Priority Client)
//!@SYMTestPriority: Normal
//!@SYMTestType: Normal Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance with medium priority
//2. Create a second DevSound instance with high priority
//3. Initialise the first Devsound instance to play audio and start playback.
//4. Initialise the second Devsound instance to play audio and start playback.
//4.1 First client should be preempted with KErrInUse
//5. Register the first client for Resource Notification
//6. Delete the second client during playback
//7. Check if the first client is notified
//!@SYMTestExpectedResults: 
//First client is preempted by the second. First client receives notification after the second client is deleted
PRINT Receipt of Notification of a Resource Available Event.(deleting the DevSound instance of the High Priority Client)
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0039, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE

//!@SYMTestCaseID: MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0042
//!@SYMREQ: ????
//!@SYMPREQ: ????
//!@SYMTestCaseDec: Preemption Play Audio After Set Volume - Play audio instance has been volume set before it is pre-empted by another one that play tones
//!@SYMTestPriority: Normal
//!@SYMTestType: Alternative Usecase
//!@SYMTestActions: 
//1. Create a DevSound instance.
//2. Open files to be played by DevSound instances.
//3. Create a CPeriodic instance.
//4. Create a second DevSound instance.
//5. Initialise the first devsound instance to play audio and set its priority using a low value.
//5.1 Wait for InitializeComplete(KErrNone) callback response.
//6. Call PlayInitL() method for first DevSound instance and star timer events each 2 seconds.
//7. Wait for BufferToBeFilled(..) callback of first DevSound instance to fill the buffer with data. Set volume on the stream.
//8. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//9. On timer event, set the second devsound큦 priority to the highest value and start playing a tone.
//10.After tone playing finished, call PlayData() on the first DevSound instance 
//!@SYMTestExpectedResults: 
//First DevSound instance BufferToBeFilled() callback shall be called
RUN_TEST_STEP 10000, char_a3f_devsound, MM-A3F-DEVSOUND-CHRTZ-PLAY-RAW-0042, c:\mm_a3f_devsound_play_raw.ini
TEST_COMPLETE
