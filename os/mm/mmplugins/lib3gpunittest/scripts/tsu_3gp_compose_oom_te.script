// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// Unit tests for 3GP Library - Composer OOM Tests
// 
//

//! @file
//! @SYMTestSuiteName tsu_3gp_compose_oom
//! @SYMScriptTestEnvironment 3GP library and necessary test files should be present
//! @SYMScriptInfo All tests contained in this suite are duplicates of OOM-applicable test cases from test suite tsu_3gp_compose_api (tsu_3gp_compose_api_te.script).  This allows the test suite tsu_3gp_compose_api to focus solely on functional testing.

LOAD_SUITE tsu_3gplibrary

RUN_UTILS DeleteDirectory C:\3gplibrary\temp\composer\
RUN_UTILS MKDir C:\3gplibrary\temp\
RUN_UTILS MKDir C:\3gplibrary\temp\composer\

START_TESTCASE MM-3GP-COMP-U-0203-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0203-CP
//! @SYMTestCaseDesc 	Create a 3GP Composer with QCELP audio using 3GP or MP4 format.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer
//!						2. Setup composer with QCELP audio in 3GP format.
//!						3. Add the QCELP audio data and close the composer
//!						4. Setup composer with QCELP audio in MP4 format.
//!						5. Add the QCELP audio data and close the composer
//! @SYMTestExpectedResults		Output files created with major brand of '3g2a'.  
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0003-CP-1
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0003-CP-2
END_TESTCASE MM-3GP-COMP-U-0203-CP

START_TESTCASE MM-3GP-COMP-U-0204-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0204-CP
//! @SYMTestCaseDesc 	Create a MP4 file with video and/or audio of ONLY the combinations of MPEG-4 video, MPEG-4 audio and/or AVC video.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer
//!						2. Setup composer with AMR audio and MPEG-4 video in MP4 format.
//!						3. Add both audio and video data to create the content and close the composer
//!						4. Setup composer with MPEG-4 audio and H263 video in MP4 format.
//!						5. Add both audio and video data to create the content and close the composer
//!						6. Setup composer with AMR audio and AVC video in MP4 format.
//!						7. Add both audio and video data to create the content and close the composer
//!						8. Exam the above output files and the major brand of both file should be '3gp4' instead of 'mp42'.
//!						9. Setup composer with MPEG-4 audio and AVC video in MP4 format.
//!						10. Add both audio and video data to create the content and close the composer
//!						11. Setup composer with MPEG-4 audio and MPEG-4 video in MP4 format.
//!						12. Add both audio and video data to create the content and close the composer
//!						13. Setup composer with MPEG-4 audio in MP4 format.
//!						14. Add both audio data to create the content and close the composer
//!						15. Setup composer with MPEG-4 video in MP4 format.
//!						16. Add both video data to create the content and close the composer
//!						17. Setup composer with AVC video in MP4 format.
//!						18. Add both video data to create the content and close the composer
//!						19. Exam the above output files and the major brand of both file should be of 'mp42'.
//! @SYMTestExpectedResults 	Test completes with no error.
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-1
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-2
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-3
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-4
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-5
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-6
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-7
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFileWithFileFormatCheck C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0004-CP-8
END_TESTCASE MM-3GP-COMP-U-0204-CP

START_TESTCASE MM-3GP-COMP-U-0205-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0205-CP
//! @SYMTestCaseDesc 	Set video stream properties of MP4/3GP/3G2 file with different video properties for different video types.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer 
//!						2. Setup the composer with 3GP/MP4/3G2 file format with one of the supported video types w/ different video properties.  Close the composer.
//!						3. Repeat with clips of different video properties: video length of 1 and big value, low frame rate & high frame rate, small video width -1 or large video width, small video height or large video height, small timescale or large.
//! @SYMTestExpectedResults 	Test completes with no error.
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeVideoProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0005-CP-1
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeVideoProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0005-CP-2
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeVideoProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0005-CP-3
END_TESTCASE MM-3GP-COMP-U-0205-CP

START_TESTCASE MM-3GP-COMP-U-0206-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0206-CP
//! @SYMTestCaseDesc 	Create MP4 file with AVC video types specifying video frame dependencies.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer object with MP4 file format & AVC video source.
//!						2. Write each video frame with different combinations of dependencies & redundancies available.
//! @SYMTestExpectedResults 	Test completes with no error.	
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeFrameDependency C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0006-CP-1
END_TESTCASE MM-3GP-COMP-U-0206-CP

START_TESTCASE MM-3GP-COMP-U-0207-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0207-CP
//! @SYMTestCaseDesc 	Set audio stream properties of MP4/3GP/3G2 file with different audio properties for different audio types.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer 
//!						2. Setup the composer with 3GP/MP4/3G2 file format with one of the supported audio types w/ different audio properties.  Close the composer.
//!						3. Repeat with clips of different audio properties: audio length of 1 and big value, low frame rate & high frame rate, etc ...
//! @SYMTestExpectedResults 	Test completes with no error.	
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0007-CP-1
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0007-CP-2
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0007-CP-3
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0007-CP-4
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0007-CP-5
END_TESTCASE MM-3GP-COMP-U-0207-CP

START_TESTCASE MM-3GP-COMP-U-0208-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0208-CP
//! @SYMTestCaseDesc	Set user atoms for mp4/3gp files. 
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer object with a 3GP/MP4/3G2 file.
//!						2. Set the user atom for all 3 locations: movie, video track & audio track.
//! @SYMTestExpectedResults 	Test completes with no error.
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeUserData C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0008-CP-1
END_TESTCASE MM-3GP-COMP-U-0208-CP

START_TESTCASE MM-3GP-COMP-U-0209-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0209-CP
//! @SYMTestCaseDesc 	Set file buffer for the 3GP Composer.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer with data buffer of size 20000 and buffer count to 200
//!						2. Instantiate a 3GP Composer with data buffer of size 100 and buffer count to 10
//! @SYMTestExpectedResults 	Test completes with no error. 
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeWithSpecificBufferSize C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0009-CP-1
END_TESTCASE MM-3GP-COMP-U-0209-CP

START_TESTCASE MM-3GP-COMP-U-0210-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0210-CP
//! @SYMTestCaseDesc 	Use composer flags to compose file.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions		1. Instantiate a 3GP Composer object supplying a composer flag, and compose a file.
//!						2. Try the test with all possible composer flag combinations. 
//! @SYMTestExpectedResults 	Test completes with no error. 
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeWithFlag C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0010-CP-1
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeWithFlag C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0010-CP-2
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeWithFlag C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0010-CP-3
END_TESTCASE MM-3GP-COMP-U-0210-CP

START_TESTCASE MM-3GP-COMP-U-0301-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0301-CP
//! @SYMTestCaseDesc 	Use of Composer API before the Composer has been initialised.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer without calling Open to setup the output destination.
//!						2. Call all composer API available except C3GPCompose::Open
//! @SYMTestExpectedResults 	All calls should fail with error KErrNotReady except C3GPCompose::Complete returns KErrNone.
RUN_TEST_STEP !OOM -1 tsu_3gplibrary 3GPComposeWithoutOpen
END_TESTCASE MM-3GP-COMP-U-0301-CP

START_TESTCASE MM-3GP-COMP-U-0302-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0302-CP
//! @SYMTestCaseDesc 	Create composer to write to a file location with invalid file names.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer object
//!						2. Attempt to Open composer by supplying an empty file name.
//!						3. Attempt to Open composer by supplying a file name containing > max file path length.
//!						4. Attempt to Open composer by supplying a file name containing wildcards in the drive or in any directory name.
//!						5. Attempt to Open composer by supplying a file name containing double backslashes in the path.
//!						6. Attempt to Open composer by supplying a file name containing the following characters anywhere in the path: < > " / |	
//!						7. Attempt to Open composer by supplying a file name containing a colon not between the drive and path
//! 					8. Attempt to Open composer by supplying a file name containing solely of space characters, or of a single or double dot.
//! 					9. Attempt to Open composer by supplying a file name containing spaces between the drive, if specified, and the first directory in the path are illegal, although there may be spaces between other path components, for instance between directories. 
//! @SYMTestExpectedResults 	Setup fails with errors KErrUnderflow(-10) for the first case, and KErrAccessDenied(-21) for the rest.
RUN_TEST_STEP !OOM !Error=-10 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-1
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-2
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-3
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-4
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-5
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-6
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-7
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeFilename C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0102-CP-8
END_TESTCASE MM-3GP-COMP-U-0302-CP

START_TESTCASE MM-3GP-COMP-U-0303-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0303-CP
//! @SYMTestCaseDesc 	Setup composer with an invalid file format.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	Supply an invalid file format value when setup a composer.
//! @SYMTestExpectedResults 	Open panics with error KErrArgument.
RUN_TEST_STEP !OOM !PanicCode=-6 -1 tsu_3gplibrary 3GPComposeUserData C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0103-CP-1
END_TESTCASE MM-3GP-COMP-U-0303-CP

START_TESTCASE MM-3GP-COMP-U-0307-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0307-CP
//! @SYMTestCaseDesc	Composer setup by filepath writes to a file use exclusive mode.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Use RFile to open a file with EFileShareAny
//!						2. Initialise a 3GP Composer with file path pointing at the file opened in Step 1
//!						3. Close RFile in Step 1.  Reopen with EFileShareReadersOrWriters
//!						4. Repeat Step 2.
//! @SYMTestExpectedResults 	Composition fails with error -21.
RUN_TEST_STEP !OOM !Error=-21 -1 tsu_3gplibrary 3GPComposeOpenedFile C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0106-CP-1
END_TESTCASE MM-3GP-COMP-U-0307-CP

START_TESTCASE MM-3GP-COMP-U-0308-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0308-CP
//! @SYMTestCaseDesc	Create composer to create a MP4/3GP/3G2 file specifying no video or audio type. 
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions		1. Instantiate a composer
//!						2. Call C3GPCompose::Open passing NULL for both video & audio input parameter. 
//! @SYMTestExpectedResults 	Fails with error .
RUN_TEST_STEP !OOM !Error=-6 -1 tsu_3gplibrary 3GPComposeWithNoAudioVideo C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0108-CP-1
END_TESTCASE MM-3GP-COMP-U-0308-CP

START_TESTCASE MM-3GP-COMP-U-0309-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0309-CP
//! @SYMTestCaseDesc 	Write Audio Frames with invalid input parameters.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Initialise a 3GP Composer with file path / file handle
//!						2. Attempt to add audio frame with NULL frame data.
//!						3. Attempt to add audio frame to a video only composer setup.
//! @SYMTestExpectedResults 	The first 3 tests fails with KErrUnderFlow, and the last one fails with KErrNotSupported.
RUN_TEST_STEP !OOM !Error=-10 -1 tsu_3gplibrary 3GPComposeAudioFrames C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0109-CP-1
RUN_TEST_STEP !OOM !Error=-5 -1 tsu_3gplibrary 3GPComposeAudioFrames C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0109-CP-4
END_TESTCASE MM-3GP-COMP-U-0309-CP

START_TESTCASE MM-3GP-COMP-U-0312-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0312-CP
//! @SYMTestCaseDesc 	Set the custom file buffer size to invalid values.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer with file path / file handle
//!						2. Set customer media write buffer to size 0 and max count to 10.  This should result in error.
//!						3. Set customer media write buffer to size 1000 and max count to 0.  This should result in error.
//!						4. Set customer media write buffer to size 1000 and max count to 5.  This should result in error."
//! @SYMTestExpectedResults 	Test should panic w/ error KErrArgument.
RUN_TEST_STEP !OOM !PanicCode=-6 -1 tsu_3gplibrary 3GPComposeWithSpecificBufferSize C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0112-CP-1
RUN_TEST_STEP !OOM !PanicCode=-6 -1 tsu_3gplibrary 3GPComposeWithSpecificBufferSize C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0112-CP-2
RUN_TEST_STEP !OOM !PanicCode=-6 -1 tsu_3gplibrary 3GPComposeWithSpecificBufferSize C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0112-CP-3
END_TESTCASE MM-3GP-COMP-U-0312-CP

START_TESTCASE MM-3GP-COMP-U-0304-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0304-CP
//! @SYMTestCaseDesc 	Setup composer w/ invalid audio properties. 
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Attempt to setup composer w/ audio timescale > 65536
//!						2. Attempt to setup composer w/ FPS > 256.
//! @SYMTestExpectedResults 	Both test should panic with KErrOverFlow
RUN_TEST_STEP !OOM !PanicCode=-9 -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0104-CP-1
RUN_TEST_STEP !OOM !PanicCode=-9 -1 tsu_3gplibrary 3GPComposeAudioProperties C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0104-CP-2
END_TESTCASE MM-3GP-COMP-U-0304-CP

START_TESTCASE MM-3GP-COMP-U-0305-CP
//! @SYMTestCaseID 		MM-3GP-COMP-U-0305-CP
//! @SYMTestCaseDesc 	Use an opened Composer to compose another file.
//! @SYMPREQ 			PREQ2050
//! @SYMTestPriority 	3
//! @SYMTestActions 	1. Instantiate a 3GP Composer with file path / file handle with one of the supported audio and/or video types.
//!						2. Attempt to use the same composer to compose another file without closing it first.
//! @SYMTestExpectedResults 	Test should failed w/ error KErrInUse.
RUN_TEST_STEP !OOM !Error=-14 -1 tsu_3gplibrary 3GPComposeOpenAgain C:\mm\tsu_3gp_compose_api_te.ini MM-3GP-COMP-U-0105-CP-1
END_TESTCASE MM-3GP-COMP-U-0305-CP

RUN_UTILS DeleteDirectory C:\3gplibrary\temp\composer\

