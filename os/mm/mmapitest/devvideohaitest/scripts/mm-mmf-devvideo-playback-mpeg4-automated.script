//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: 
//
//
//! @file
//! @SYMTestSuiteName mm-mmf-devvideo-playback-mpeg4-automated
//! @SYMScriptTestEnvironment This test script requires a basic ROM.
//
// Tests all public elements of the MMMFDevVideoPlayObserver,CMMFDevVideoPlay 
// classes as a means of confidence that the APIs work as expected.
// 
// The purpose is to provide a regression test suite of PublishedAll
// APIs for: MMMFDevVideoPlayObserver,CMMFDevVideoPlay 
// The tests are fully automated.
//



LOAD_SUITE t_devvideo


DELAY 2000


START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0001

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0001
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4 NTSC Video Playback at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = akiyo_ntsc_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0001-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0001




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0002

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0002
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4 NTSC Video Playback at 30 fps 4Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = akiyo_ntsc_30fps_4M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0002-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0002




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0003

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0003
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4 PAL Video Playback at 25 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = akiyo_pal_25fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 25)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0003-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0003




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0004

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0004
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4 PAL Video Playback at 25 fps 4Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = akiyo_pal_25fps_4M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 25)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0004-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0004




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0005

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0005
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 15 fps 128Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = akiyo_qcif_15fps_128k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0005-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0005




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0006

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0006
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback at 15 fps 256Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_15fps_256_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0006-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0006




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0007

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0007
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback at 30 fps 384Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_30fps_384k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0007-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0007




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0008

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0008
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback at 15 fps 512Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_15fps_512_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0008-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0008




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0009

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0009
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback at 30 fps 768Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_30fps_768k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0009-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0009




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0010

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0010
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  CIF Video Playback   at 15 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_cif_15fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0010-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0010




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0011

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0011
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  CIF Video Playback   at 15 fps  784kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_cif_15fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0011-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0011




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0012

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0012
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  CIF Video Playback   at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_cif_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0012-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0012




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0013

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0013
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  CIF Video Playback   at 30 fps 64kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_cif_30fps_64K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0013-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0013




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0014

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0014
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  CIF Video Playback   at 30 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_cif_30fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0014-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0014




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0015

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0015
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 15 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_qcif_15fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0015-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0015




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0016

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0016
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 15 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_qcif_15fps_64K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0016-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0016




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0017

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0017
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 15 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_qcif_15fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0017-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0017




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0018

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0018
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_qcif_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0018-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0018




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0019

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0019
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 30 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = paris_qcif_30fps_64K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0019-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0019




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0020

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0020
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QCIF Video Playback   at 30 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = singing_qcif_30fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0020-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0020




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0021

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0021
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 15 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_15fps_3m_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0021-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0021




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0022

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0022
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 15 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_15fps_64k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0022-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0022




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0023

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0023
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 15 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_15fps_784_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0023-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0023




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0024

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0024
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0024-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0024




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0025

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0025
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 30 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_30fps_64k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0025-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0025




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0026

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0026
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  QVGA Video Playback   at 30 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_QVGA_30fps_784k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0026-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0026




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0027

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0027
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 15 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_15fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0027-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0027




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0028

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0028
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 15 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_15fps_64K_dec_mod.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0028-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0028




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0029

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0029
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 15 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_15fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0029-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0029




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0030

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0030
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0030-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0030




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0031

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0031
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 30 fps 64Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_30fps_64K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0031-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0031




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0032

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0032
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 30 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = foreman_sqcif_30fps_784K_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 30)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0032-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0032




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0033

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0033
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback   at 15 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_15fps_3m_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0033-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0033




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0034

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0034
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback   at 15 fps 64kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_15fps_64k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0034-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0034




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0035

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0035
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback   at 15 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_15fps_784k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0035-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0035




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0036

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0036
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback at 30 fps 3Mbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_30fps_3M_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 25)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0036-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0036




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0037

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0037
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback   at 30 fps 64kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_30fps_64k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 25)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0037-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0037




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0038

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0038
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  VGA Video Playback   at 30 fps 784Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_VGA_30fps_784k_dec.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 25)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0038-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0038




START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0039

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0039
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref], CMMFDevVideoPlay::TUncompressedVideoFormat {ref]);
//!                CMMFDevVideoPlay:: SetOutputFormatL(THwDeviceId, const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: SetInputFormatL(THwDeviceId , const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::{ptr}GetHeaderInformationL(TVideoDataUnitType, TVideoDataUnitEncapsulation, TVideoInputBuffer {ptr});
//!                CMMFDevVideoPlay:: ReturnHeader(TVideoPictureHeader {ptr});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr]);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			alavariega
//!@SYMCreationDate		16/6/2008
//!@SYMTestCaseDesc		 NCP MPEG -4  SQCIF Video Playback   at 15 fps 128Kbps
//!@SYMTestActions
//!                1. NewL (inputfile = MPEG4_SQCIF_15fps_128Kbps.m4v; screen = TRUE; codec = EMPEG4; synch = 1; inputPath = {PATHVIDEOS, inputPath})
//!                2. SelectDecoderL (dec = {DECODERS, MPEG4}) 
//!                3. SelectPostProcessorL  (postprocessor = {POSTPROCESSOR, uid})
//!                4. SetInputFormat (useDecoder = TRUE; mimeType= {MIME,MP4V})
//!                5. GetOutputFormatListL (useDecoder = TRUE) 
//!                6. PostProcessorInfoLC
//!                7. FindCommonFormat
//!                8. SetOutputFormatL  (useDecoder = TRUE)
//!                9. SetInputFormat (useDecoder = FALSE; mimeType= {MIME,MP4V})
//!                10. GetOutputFormatListL (useDecoder = FALSE)
//!                11. SetOutputFormatL(useDecoder = TRUE) 
//!                12. GetHeaderInformationL (buffer = {BUFFER_SIZE, KH263MaxCodedSizeCIF})
//!                13. ReturnHeader
//!                14. SetVideoDestScreenL
//!                15. SetPostProcessTypesL (combination = 44)
//!                16. GetBufferOptions
//!                17. SetBufferOptionsL
//!                18. SetClockSource  (synch = 1; framerate = 15)
//!                19. Initialize
//!                OUTSTANDING
//!                20. StartDirectScreenAccess (displayMode = EColor64K)
//!                21. Start  
//!                OUTSTANDING
//!                22. Stop
//!                23. AbortDirectScreenAccess
//!                24. ~
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-mpeg4-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		NewL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-NewL_command01
		COMMAND		mmfdvplay		SelectDecoderL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SelectDecoderL_command02
		COMMAND		mmfdvplay		SelectPostProcessorL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SelectPostProcessorL_command03
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetInputFormat_command04
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-GetOutputFormatListL_command05
		COMMAND		mmfdvplay		PostProcessorInfoLC
		COMMAND		mmfdvplay		FindCommonFormat
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetOutputFormatL_command08
		COMMAND		mmfdvplay		SetInputFormat			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetInputFormat_command09
		COMMAND		mmfdvplay		GetOutputFormatListL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-GetOutputFormatListL_command10
		COMMAND		mmfdvplay		SetOutputFormatL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetOutputFormatL_command11
		COMMAND		mmfdvplay		GetHeaderInformationL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-GetHeaderInformationL_command12
		COMMAND		mmfdvplay		ReturnHeader
		COMMAND		mmfdvplay		SetVideoDestScreenL
		COMMAND		mmfdvplay		SetPostProcessTypesL			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetPostProcessTypesL_command15
		COMMAND		mmfdvplay		GetBufferOptions
		COMMAND		mmfdvplay		SetBufferOptionsL
		COMMAND		mmfdvplay		SetClockSource			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-SetClockSource_command18
		COMMAND		mmfdvplay		Initialize
		OUTSTANDING
		COMMAND		mmfdvplay		StartDirectScreenAccess			MULTIMEDIA-MMF-DevVideo-Playback-Mpeg4-0039-0001-StartDirectScreenAccess_command20
		COMMAND		mmfdvplay		Start
		OUTSTANDING
		COMMAND		mmfdvplay		Stop
		COMMAND		mmfdvplay		AbortDirectScreenAccess
		COMMAND		mmfdvplay		~
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-MPEG4-AUTOMATED-0039
