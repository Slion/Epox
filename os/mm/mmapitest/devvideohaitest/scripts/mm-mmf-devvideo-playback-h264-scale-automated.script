//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: 
//
//
//! @file
//! @SYMTestSuiteName mm-mmf-devvideo-playback-h263-scale-automated
//! @SYMScriptTestEnvironment This test script requires a basic ROM.
//
// Tests all public elements of the MMMFDevVideoPlayObserver,CMMFDevVideoPlay 
// classes as a means of confidence that the APIs work as expected.
// 
// The purpose is to provide a regression test suite of PublishedAll
// APIs for: MMMFDevVideoPlayObserver,CMMFDevVideoPlay 
// The tests are fully automated.
//

LOAD_SUITE t_devvideo

DELAY 2000

START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0001

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0001
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref}, CMMFDevVideoPlay::TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr});
//!				   CMMFDevVideoPlay:: SynchronizeDecoding(TBool);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			Katherine Xu
//!@SYMCreationDate		29/9/2009
//!@SYMTestCaseDesc		 NCP H.264 QCIF Video FULL SCREEN  at  30fps 384 Kbps
//!						 MIME(video/h264; profile-level-id=42800C)
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the full screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-h264-scale-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		H264CreateDecTest				MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-CreateDecTest_command01
		COMMAND		mmfdvplay		H264SelectPostProcessor			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SelectPostProcessor_command02
		COMMAND		mmfdvplay		H264SetInputFormatCompr			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetInputFormatCompr_command03
		COMMAND		mmfdvplay		H264FindCommonFormats
		COMMAND		mmfdvplay		H264SetBufferOptions			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetBufferOptions_command05
		COMMAND		mmfdvplay		H264ListFrameSize
		COMMAND		mmfdvplay		H264SetPostProcessTypes			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetPostProcessTypes_command07
		COMMAND		mmfdvplay		H264SetVideoDestScreen			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetVideoDestScreen_command08
		COMMAND		mmfdvplay		H264SetWindowRect				MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetWindowRect_command09
		COMMAND		mmfdvplay		H264SetPostProcessTypes			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SetPostProcessTypes_command10
		COMMAND		mmfdvplay		H264EnableSynchronization		MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-EnableSynchronization_command11
		COMMAND		mmfdvplay		H264SynchronizeDecoding			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-SynchronizeDecoding_command12
		COMMAND		mmfdvplay		H264Initialize		
		OUTSTANDING
		COMMAND		mmfdvplay		H264IOFrameMatch
		COMMAND		mmfdvplay		H264Start						MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0001-0001-Start_command15
		OUTSTANDING
		COMMAND		mmfdvplay		H264Stop
		COMMAND		mmfdvplay		H264Delete
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0001

START_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0002

//!@SYMTestCaseID		MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0002
//!@SYMAPI
//!                CMMFDevVideoPlay::GetDecoderListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::GetPostProcessorListL(RArray< TUid > {ref});
//!                CMMFDevVideoPlay::SelectDecoderL(TUid);
//!                CMMFDevVideoPlay::SelectPostProcessorL(TUid);
//!                CMMFDevVideoPlay::SetInputFormatL(THwDeviceId,  const TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay::GetOutputFormatListL(THwDeviceId, RArray< TUncompressedVideoFormat > {ref});
//!                CMMFDevVideoPlay::{ptr}PostProcessorInfoLC(TUid);
//!                CMMFDevVideoPlay::FindCommonFormat(const TArray< TUncompressedVideoFormat > {ref}, const TArray< TUncompressedVideoFormat > {ref}, CMMFDevVideoPlay::TUncompressedVideoFormat {ref});
//!                CMMFDevVideoPlay:: GetBufferOptions(TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetBufferOptionsL(const TBufferOptions {ref});
//!                CMMFDevVideoPlay:: SetVideoDestScreenL(TBool);
//!                CMMFDevVideoPlay:: SetPostProcessTypesL(THwDeviceId , TUint32 );
//!                CMMFDevVideoPlay:: SetClockSource(MMMFClockSource {ptr});
//!				   CMMFDevVideoPlay:: SynchronizeDecoding(TBool);
//!                CMMFDevVideoPlay:: Initialize();
//!                CMMFDevVideoPlay:: StartDirectScreenAccessL(const TRect {ref}, CFbsScreenDevice &aScreenDevice, const TRegion {ref});
//!                CMMFDevVideoPlay:: Start();
//!                CMMFDevVideoPlay:: Stop();
//!                CMMFDevVideoPlay:: AbortDirectScreenAccess();
//!@SYMAuthor			Katherine Xu
//!@SYMCreationDate		27/10/2009
//!@SYMTestCaseDesc		 NCP H.264 SQCIF Video FULL SCREEN  at  15fps 35 Kbps
//!						 MIME(video/h264)
//!@SYMTestStatus		Verified
//!@SYMTestPriority		Normal
//!@SYMTestExpectedResults
//!                Video must be played on the full screen without any blurrness.
//!@SYMTestType			CIT

	START_TEST_BLOCK	900	t_devvideo	\multimedia\mmf\devvideo\mm-mmf-devvideo-playback-h264-scale-automated.ini
		CREATE_OBJECT	CMMFDevVideoPlay		mmfdvplay
		COMMAND		mmfdvplay		H264CreateDecTest				MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-CreateDecTest_command01
		COMMAND		mmfdvplay		H264SelectPostProcessor			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SelectPostProcessor_command02
		COMMAND		mmfdvplay		H264SetInputFormatCompr			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetInputFormatCompr_command03
		COMMAND		mmfdvplay		H264FindCommonFormats
		COMMAND		mmfdvplay		H264SetBufferOptions			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetBufferOptions_command05
		COMMAND		mmfdvplay		H264ListFrameSize
		COMMAND		mmfdvplay		H264SetPostProcessTypes			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetPostProcessTypes_command07
		COMMAND		mmfdvplay		H264SetVideoDestScreen			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetVideoDestScreen_command08
		COMMAND		mmfdvplay		H264SetWindowRect				MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetWindowRect_command09
		COMMAND		mmfdvplay		H264SetPostProcessTypes			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SetPostProcessTypes_command10
		COMMAND		mmfdvplay		H264EnableSynchronization		MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-EnableSynchronization_command11
		COMMAND		mmfdvplay		H264SynchronizeDecoding			MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-SynchronizeDecoding_command12
		COMMAND		mmfdvplay		H264Initialize		
		OUTSTANDING
		COMMAND		mmfdvplay		H264IOFrameMatch
		COMMAND		mmfdvplay		H264Start						MULTIMEDIA-MMF-DevVideo-Playback-H264-SCALE-0002-0001-Start_command15
		OUTSTANDING
		COMMAND		mmfdvplay		H264Stop
		COMMAND		mmfdvplay		H264Delete
	END_TEST_BLOCK
END_TESTCASE MM-MMF-DEVVIDEO-PLAYBACK-H264-SCALE-AUTOMATED-0002
