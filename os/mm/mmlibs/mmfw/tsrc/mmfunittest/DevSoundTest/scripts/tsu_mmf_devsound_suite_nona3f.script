// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT 
PRINT 
PRINT IMPORTANT NOTE			THIS SCRIPT SHOULD ONLY BE RUN IN NON-A3F. SCRIPT CREATED AS PART OF CR1566.
PRINT 
PRINT 

LOAD_SUITE TSU_MMF_DEVSOUND_SUITE.dll

delay 1000

//! @SYMTestCaseID			MM-MMF-DEVSOUND-U-0087-HP
//! @SYMREQ				REQ11453
//!					REQ11455
//! @SYMPREQ				1540
//! @SYMTestCaseDec			Resume Audio Playback - When pause playing non A3F audio call Resume() after IsResumeSupported() 
//! @SYMTestPriority			Normal
//! @SYMTestType			Exception Usecase
//! @SYMTestActions			1. Create a Devsound instance.
//!					2. Open the file to be played(must be PCM).
//!					3. Create a CPeriodic instance.
//!					4. Initialise a DevSound instance to play audio.
//!					4.1 Wait for InitializeComplete(KErrNone) callback response.
//!					5. Call PlayInitL() and start timer events every 2 seconds.
//!					6. Wait for BufferToBeFilled(..) callback of DevSound instance to fill the buffer with data. To continue receiving BTBF callbacks, is mandatory to call PlayData() method.
//!					7. On timer event Pause() method.
//!					8. Wait for another timer event, call IsResumeSupported() then Resume().
//! @SYMTestExpectedResults		IsResumeSupported() will return EFalse.
//!					Resume()(will return KErrNotSupported) is not supported for non A3F.
PRINT Resume Audio Playback - When pause playing non A3F audio call Resume() after IsResumeSupported() 
RUN_TEST_STEP 60000, TSU_MMF_DEVSOUND_SUITE, MM-MMF-DEVSOUND-U-0087-HP, c:\tsu_mmf_truepause_devsound.ini
TEST_COMPLETE
