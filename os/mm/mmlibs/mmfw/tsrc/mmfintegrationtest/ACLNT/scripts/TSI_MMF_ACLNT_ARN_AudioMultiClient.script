@file TSI_MMF_ACLNT_ARN.script
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

# Audio Client Utilities Audio Resource Notification Tests

LOAD_SUITE TSI_MMFACLNT.DLL

delay 10000

###################### Audio Multi Client tests ######################

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9001-HP
//!@SYMTestCaseDesc           Receipt of Notification (on deleting the Audio Play Client instance of a Notified Client) of a Resource Available Event.
//!@SYMREQ                    REQ3834.1
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification e. Register iAudioOutputStream for Notification. f. Delete
//! the instance iAudioPlayer g. iAudioRecorder stops playing h. Check if iAudioOutputStream gets the notification
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9001-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9003-HP
//!@SYMTestCaseDesc           Receipt of Notification (on stopping play of a Notitifed Client) of a Resource Available Event.
//!@SYMREQ                    REQ3834.1
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification e. Register iAudioOutputStream for Notification. f. iAudioRecorder
//! stops playing g. iAudioPlayer receives the notification and resumes playback h. The playback of iAudioPlayer is stopped midway i. Check if iAudioOutputStream
//! gets the notification
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9003-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9004-HP
//!@SYMTestCaseDesc           Receipt of Notification (chronological order for equal priority clients) of a Resource Available Event.
//!@SYMREQ                    REQ3834.1
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Low Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioOutputStream for Notification e. Register iAudioPlayer for Notification f. iAudioRecorder
//! stops playing g. Check if iAudioOutputStream gets the notification
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9004-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9006-HP
//!@SYMTestCaseDesc           Receipt of Notification (on timeout of a notified client, 1 sec assumed, call WillResumePlay() after 1 second) of a Resource
//! Available Event.
//!@SYMREQ                    REQ3834.2
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification. e. Register iAudioOutputStream for Notification. f.
//! iAudioRecorder stops playing g. iAudioPlayer receives the notification. h. After 1 second, iAudioPlayer calls WillResumePlay(). h. iAudioPlayer does
//! not resume playback. i. Check if iAudioOutputStream gets the notification (after 1 second)
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9006-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9007-HP
//!@SYMTestCaseDesc           Receipt of Notification (on cancellation of the notification of a client that has requested for notification) of a Resource
//! Available Event.  [Cancel before receipt of Notification]
//!@SYMREQ                    REQ3834.3
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification e. Register iAudioOutputStream for Notification f. Cancel
//! the notification request for iAudioPlayer g. iAudioRecorder stops playing h. Check if iAudioOutputStream gets the notification
//!@SYMTestExpectedResults    The medium priority Client should be able to cancel the notification succesfully, and the low priority client should be
//! able to receive the notification without any errors in the process. KErrNone should be returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9007-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9008-HP
//!@SYMTestCaseDesc           Receipt of Notification (on cancellation of notification of a client that has just received notification) of a Resource
//! Available Event. [Cancel after receipt of Notification]
//!@SYMREQ                    REQ3834.3
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification e. Register iAudioOutputStream for Notification f. iAudioRecorder
//! stops playing g. iAudioPlayer receives notification and it starts playing h. Cancel the notification request for iAudioPlayer i. Play iAudioRecorder
//! j.  iAudioRecorder stops playing k. Check if iAudioOutputStream gets the notification (but not the iAudioPlayer)
//!@SYMTestExpectedResults    The medium priority Client should be able to cancel the notification succesfully, and the low priority client should be
//! able to receive the notification without any errors in the process. KErrNone should be returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9008-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9002-HP
//!@SYMTestCaseDesc           Receipt of Notification (on completion of play of a Notifed Client) of a Resource Available Event.
//!@SYMREQ                    REQ3834.1
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification e. Register iAudioOutputStream for Notification. f. iAudioRecorder
//! stops playing g. iAudioPlayer receives teh notification and resumes playback h. iAudioPlayer completes the playback i. Check if iAudioOutputStream gets
//! the notification
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9002-HP \audio.ini
TEST_COMPLETE

//
//!@SYMTestCaseID             MM-MMF-ACLNT-I-9005-HP
//!@SYMTestCaseDesc           Non Receipt of Notification (on calling WillResumePlay() of a notified client) of a Resource Available Event.
//!@SYMREQ                    REQ3834.2
//!@SYMPREQ                   PREQ797
//!@SYMTestPriority           2
//!@SYMTestActions            iAudioPlayer - Medium Priority iAudioRecorder - High Priority iAudioOutputStream - Low Priority a. Create 3 clients b. Open
//! and Play iAudioPlayer c. Open and Play iAudioRecorder d. Register iAudioPlayer for Notification. e. Register iAudioOutputStream for Notification. f.
//! iAudioRecorder stops playing g. iAudioPlayer receives the notification. h. iAudioPlayer calls WillResumePlay(). i. Check if iAudioOutputStream does not
//! get the notification (after 2 second))
//!@SYMTestExpectedResults    The Client should be able to receive the notification succesfully, without any errors in the process. KErrNone should be
//! returned.
RUN_TEST_STEP 600000 ACLNT MM-MMF-ACLNT-I-9005-HP \audio.ini
TEST_COMPLETE
