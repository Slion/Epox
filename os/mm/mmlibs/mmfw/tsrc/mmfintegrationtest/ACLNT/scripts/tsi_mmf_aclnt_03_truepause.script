// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE TSI_MMFACLNT.DLL
#PAUSE_AT_END

# wait for ring.wav to finish playing
delay 5000

#True Pause
//! @SYMTestCaseID			MM-MMF-ACLNT-I-0168-HP
//! @SYMTestCaseDesc			Positive: Pause play and continue play (file sequence).
//! @SYMTestPriority			High
//! @SYMTestType			Normal usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1.	Play preloaded audio
//! 					2.	After two seconds Pause playback
//! 					3.	After two seconds continue playing.
//! @SYMTestExpectedResults 	Audio continues from paused position. Pause returns with KErrNone. Resume returns with KErrNone.
//! 
PRINT Positive: Pause play and continue play (file sequence).
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0168-HP  \audio.ini
TEST_COMPLETE

//! @SYMTestCaseID			MM-MMF-ACLNT-I-0169-HP
//! @SYMTestCaseDesc			Positive: Pause play and continue play three times (file sequence)
//! @SYMTestPriority			High
//! @SYMTestType			Normal usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1.	Play preloaded audio
//! 					2.	After two seconds Pause playback
//! 					3.	After two seconds continue playing.
//!					4.	Repeat steps 2 and 3 two more times
//! @SYMTestExpectedResults 	Audio continues from paused position each time. Pause returns with KErrNone. Resume returns with KErrNone.
//! 
PRINT Positive: Pause play and continue play three times (file sequence)
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0169-HP  \audio.ini
TEST_COMPLETE

//! @SYMTestCaseID			MM-MMF-ACLNT-I-0170-HP
//! @SYMTestCaseDesc			Positive: Play-Pause-CancelPlay-Play
//! @SYMTestPriority			High
//! @SYMTestType			Normal usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1.	Play preloaded audio
//! 					2.	After two seconds Pause playback
//! 					3.	After two seconds stop playing (CancelPlay).
//!					4.	Resume playback
//! @SYMTestExpectedResults 	Audio does not continue from paused position. Playback is restarted. Pause returns KErrNotReady while stopped
//! 
PRINT Positive: Play-Pause-CancelPlay-Play
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0170-HP  \audio.ini
TEST_COMPLETE

//! @SYMTestCaseID			MM-MMF-ACLNT-I-0171-HP
//! @SYMTestCaseDesc			Positive: Change configuration while in Pause (file sequence)
//! @SYMTestPriority			High
//! @SYMTestType			Alternative usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1. Play preloaded audio
//! 					2. Pause playback
//! 					3. Change volume and balance to values different from default.
//! 					4. Resume playback
//! 					5. Check the values have been changed
//! @SYMTestExpectedResults 	Volume and balance can be changed in paused state. Changed values are maintained after resume
//!                        	Audio continues from paused position. Pause returns with KErrNone. Resume returns with KErrNone.
//! 
PRINT Positive: Change configuration while in Pause (file sequence)
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0171-HP  \audio.ini
TEST_COMPLETE

#Test removed from script. This scenario is no longer valid
//! @SYMTestCaseID			MM-MMF-ACLNT-I-0172-HP
//! @SYMTestCaseDesc			Negative: Call PrepareToPlayFileSequence while in Pause
//! @SYMTestPriority			High
//! @SYMTestType			Alternative usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1. Play preloaded audio
//! 					2. Pause playback
//! 					3. Call PrepareToPlayFileSequence
//! 					4. Wait for MMdaAudioToneObserver::MatoPrepareComplete(TInt)
//! 					5. Resume playback
//! @SYMTestExpectedResults 	MMdaAudioToneObserver::MatoPrepareComplete(TInt) should return with KErrNone. 
//!                        	Playback will be restarted from the beginning
//! 
//PRINT Negative: Call PrepareToPlayFileSequence while in Pause
//RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0172-HP  \audio.ini
//TEST_COMPLETE

//! @SYMTestCaseID			MM-MMF-ACLNT-I-0173-HP
//! @SYMTestCaseDesc			Negative: Call Pause before Play
//! @SYMTestPriority			High
//! @SYMTestType			Exception usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1.Create a CMdaAudioToneUtility object
//! 					2. Call Pause
//! 					3. Call PrepareToPlayFileSequence
//! 					4. Call Pause
//! @SYMTestExpectedResults 	CMdaAudioToneUtility::Pause() returns with KErrNotReady
//! 
PRINT MM-MMF-ACLNT-I-0173-HP
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0173-HP  \audio.ini
TEST_COMPLETE

//! @SYMTestCaseID			MM-MMF-ACLNT-I-0174-HP
//! @SYMTestCaseDesc			Negative: Pause play while not playing a file sequence
//! @SYMTestPriority			High
//! @SYMTestType			Alternative usecase
//! @SYMREQ 				REQ11461
//!					REQ11462
//! @SYMPREQ				1540
//! @SYMTestActions 			1. Call PrepareToPlayDTMFString
//! 					2. Play tone
//! 					3. Call Pause
//! 					4. Wait for MMdaAudioToneObserver::MatoPrepareComplete(TInt) indicating playback has finished
//! 					5. Repeat steps 1-4 for remaining tone formats (Tone, DualTone, FixedSequence)
//! @SYMTestExpectedResults 	CMdaAudioToneUtility::Pause() will return KErrNotSupported. MMdaAudioToneObserver::MatoPlayComplete(TInt) will be received after Pause without calling play again
//! 
PRINT Negative: Pause play while not playing a file sequence
RUN_TEST_STEP 180000,ACLNT, MM-MMF-ACLNT-I-0174-HP  \audio.ini
TEST_COMPLETE
