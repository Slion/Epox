// Copyright (c) 2006-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
// @file char_mmf_audiorec_amr.script
// 
//

///////////////////////////////////////////////////////////////////
PRINT 
LOAD_SUITE char_mmf_audiorec.dll
# wait for ring.wav to finish playing
delay 1000

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0001
//!@SYMTestCaseDesc           Open a file to record an audio sample data.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility 2. Open an audio file with give full path of the file as an argument to the API.  3. After
//! Open check the call back MoscoStateChangeEvent  code.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave and the callback MoscoStateChangeEvent should return no error.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0001 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0002
//!@SYMTestCaseDesc           Open a file to  record an audio sample data while in Opened state.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility 2. Open an audio file with give full path of the file as an argument to the API.  3. Again
//! Open the file while in Opened state and check the call back MoscoStateChangeEvent  code.
//!@SYMTestExpectedResults    It should have no operation.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0002 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0004
//!@SYMTestCaseDesc           PlayL() in EPlaying  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an audio file.  3.Play the audio file. 4.check the call back MoscoStateChangeEvent
//!  code for Play while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. The audio file should Play till end of the file. 3.Playing State:The call back
//! MoscoStateChangeEvent should return KErrNotReady.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0004 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0005
//!@SYMTestCaseDesc           PlayL() in ENotReady state.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.check the call back MoscoStateChangeEvent  code. For Play an Audio file before open.
//!@SYMTestExpectedResults    1.Play State:  call back MoscoStateChangeEvent should return with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0005 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0008
//!@SYMTestCaseDesc           RecordL() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Recording before Open the Fil
//!e.
//!@SYMTestExpectedResults    1. While record call back MoscoStateChangeEvent  should return with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0008 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0009
//!@SYMTestCaseDesc           Record an audio file with maximum size.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Set the Maximum length SetMaxwriteLength(). 4. Check the call
//! back MoscoStateChangeEvent  code after Recording.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.It should record the Audio data and leave with KErrEof when the file size reached
//! the max limit.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0009 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0010
//!@SYMTestCaseDesc           Record an audio file while in Erecording state.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Set the Maximum length SetMaxwriteLength(). 4. Starts Recording
//!  5.Check the call back MoscoStateChangeEvent  code after recording again while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetMaxwriteLength :it should set the maximum size. 3.RecordL: It should not
//! leave. 4.Recording State: call back MoscoStateChangeEvent  should return with KErrNotReady.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0010 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0012
//!@SYMTestCaseDesc           MaxVolume() in EOpen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Getting
//! the Maximum Volume
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.MaxVolume should give the maximum volume of the device.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0012 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0013
//!@SYMTestCaseDesc           MaxVolume() in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Getting Maximum Volume while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Playing an audio file should not leave and call back MoscoStateChangeEvent
//!  return KErrNone. 3.MaxVolume should give maximum volume.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0013 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0014
//!@SYMTestCaseDesc           MaxVolume() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Getting Maximum Volume before
//! Open an Audio file.
//!@SYMTestExpectedResults    1.MaxVolume should have return always Zero.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0014 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0015
//!@SYMTestCaseDesc           SetVolume() / GetVolume() in Eopen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the Volume.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave and call back MoscoStateChangeEvent  should return KErrNone. 2.SetVolume should
//! set the volume. 3. Get the volume should return the  current volume settings.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0015 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0016
//!@SYMTestCaseDesc           SetVolume() / GetVolume() in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set the Volume while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Playing state: SetVolume should set the volume. 3. Playing state:Get the volume
//! should return the  current volume settings and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0016 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0017
//!@SYMTestCaseDesc           SetVolume() / GetVolume() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.  Set the Volume before Open an Audio file. 3. Check the call back MoscoStateChangeEvent
//!  code after Get the Volume before Open an Audio file
//!@SYMTestExpectedResults    1.SetVolume/GetVolume should have no operation.
RUN_TEST_STEP 60000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0017 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0018
//!@SYMTestCaseDesc           SetVolume() in Eopen/Eplaying  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play Audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set the Volume less than Zero.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetVolume should set the volume to Zero and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0018 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0019
//!@SYMTestCaseDesc           SetVolume() in Eopen/Eplaying  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play Audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set the Volume greater than the Maximum Volume.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetVolume should set the volume to Maximum Volume call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0019 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0021
//!@SYMTestCaseDesc           SetVolumeRamp() in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Play the audio file.  4.Check the call back MoscoStateChangeEvent
//!  code after SetVolumeRamp while in playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetVolumeRamp should set the volume gradient call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0021 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0022
//!@SYMTestCaseDesc           SetVolumeRamp() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after SetVolumeRamp before Open an Audio
//! file.
//!@SYMTestExpectedResults    1.SetVolumeRamp should have no operation.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0022 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0023
//!@SYMTestCaseDesc           MaxGain() in Eopen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Get Maximum
//! Value for the Gain in Opend state
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.MaxGain should  return with Maximum Value and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0023 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0024
//!@SYMTestCaseDesc           MaxGain() in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get Maximum Value for the Gain while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Recording should not leave. 3.MaxGain should  return with Maximum Value and
//! callback should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0024 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0025
//!@SYMTestCaseDesc           MaxGain() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Get Maximum Value for the Gain
//! before Open an Audio file.
//!@SYMTestExpectedResults    1.MaxGain should  return Zero.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0025 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0026
//!@SYMTestCaseDesc           SetGain() / GetGain() in EOpen  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get  the Gain.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetGain should set the gain. 3.GetGain should return the current gain. 4.call
//! back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0026 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0027
//!@SYMTestCaseDesc           SetGain() / GetGain()  in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the Gain while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain. 4.GetGain
//! should return current gain value and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0027 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0028
//!@SYMTestCaseDesc           SetGain() / GetGain()  in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and Get the Gain before Open
//! an Audio file.
//!@SYMTestExpectedResults    1.SetGain: It should give no operation. 2.GetGain: It should return KErrNotSupported.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0028 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

// This to test for Boundary conditions for SetGain()
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0029
//!@SYMTestCaseDesc           SetGain() in Eopen, Erecording  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set the Gain to less than Zero.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain to
//! Zero  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0029 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0030
//!@SYMTestCaseDesc           SetGain() in Eopen, Erecording  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set the Gain to greater than Maximum Gain.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain to
//! MaxGain value  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0030 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0031
//!@SYMTestCaseDesc           SetPosition() / Position() in EOpen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the current head Position.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPosition should set the current head position. 3. Get the Position should
//! return the current head position. 4.PlayL: Play should start from the set position  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0031 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0032
//!@SYMTestCaseDesc           SetPosition() / Position()  in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the current head Position while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: should not leave. 3.Set position should set the Position while in playing
//! state. 4.Get position should return the Position while in playing state. 5.call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0032 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0033
//!@SYMTestCaseDesc           SetPosition() / Position()  in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the current head Position while in Recording state. 5. Set the SetPlayWindow() and call Position() and check the call back Mo
//!scoStateChangeEvent.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording should not leave. 3.Set position should have no operation while in
//! Recording state. 4.Get position should return the current head Position while in Recording state. 5. call back MoscoStateChangeEvent  should return KErrNone.
//! N.B: Document issue 6. Position : It should return the SetPlayWindow() start position.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0033 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0034
//!@SYMTestCaseDesc           SetPosition() / Position() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and get the Position before
//! Open an Audio file.
//!@SYMTestExpectedResults    1.Set position / Get Position : should have no operation in ENotReady State.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0034 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0035
//!@SYMTestCaseDesc           RecordTimeAvailable() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after call to
//! RecordTimeAvailable.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. It should return the recoding time available for the selected file. Note: It
//! is returning zero
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0035 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0036
//!@SYMTestCaseDesc           RecordTimeAvailable() in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after call to RecordTimeAvailable while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Starts Recording should not leave. 3 It should return the recoding time available
//! for the selected file and  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0036 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0037
//!@SYMTestCaseDesc           RecordTimeAvailable() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after call to RecordTimeAvailable before
//! Open an Audio file.
//!@SYMTestExpectedResults    1. Recoding time available should return no operation EnotReady state.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0037 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0038
//!@SYMTestCaseDesc           Duration() in EOpen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after call to
//! Get Duration of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Duration ::It should return the Duration of  the selected audio file and  call
//! back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0038 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0039
//!@SYMTestCaseDesc           Duration() in ERecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after call to Get the Duration while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Recording state:  It should return the Duration of  the selected audio file
//!  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0039 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0040
//!@SYMTestCaseDesc           Duration() in EPlaying  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Playing 4.Check the call back MoscoStateChangeEvent  code
//! after Getting the Duration while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Playing state: It should return the Duration of  the selected audio file  and
//! call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0040 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0041
//!@SYMTestCaseDesc           Duration() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Getting the Duration before Open
//! an Audio file.
//!@SYMTestExpectedResults    1. ENotReady state: It should return the Duration  Zero.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0041 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0053
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set Maximum
//! size for the audio file that being recorded.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetMaxWriteLength:  It should set the Maximum size for the selected audio file
//! to be recorded  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0053 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0056
//!@SYMTestCaseDesc           SetMaxWriteLength() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set Maximum size for the audio
//! file before Open an Audio file.
//!@SYMTestExpectedResults    1. SetMaxWriteLength:  It should have no operation.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0056 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0058
//!@SYMTestCaseDesc           SetPriority() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! Priority of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPriority : It should set the Priority of the audio file  and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0058 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0063
//!@SYMTestCaseDesc           SetPlayBackBalance() / GetPlayBackBalance() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and Get the current Play back
//! balance of the audio file before Open an Audio file.
//!@SYMTestExpectedResults    1. SetPlaybackBalance : It should  return with KErrNotSupported. 2.GetPlaybackBalance : It should return with KErrNotSup
//!ported.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0063 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0064
//!@SYMTestCaseDesc           SetPlayBackBalance() in Eopen, EPlaying State(Boundary condition less than zero)
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current Play back balance less than to KMMFBalanceMaxLeft of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: Play should not leave. 3. SetPlaybackBalance: should set the current
//! Play back balance  to KMMFBalanceMaxLeft of the audio file and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0064 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0065
//!@SYMTestCaseDesc           SetPlayBackBalance() in Eopen, EPlaying State(Boundary condition greatre than maximum value )
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current Play back balance greater than to KMMFBalanceMaxRight of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: Play should not leave. 3. SetPlaybackBalance: should set the current
//! Play back balance  to KMMFBalanceMaxRight of the audio file and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0065 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0066
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Set the current recording balance. 4.Get the current recording
//! balance Check the call back MoscoStateChangeEvent  code after.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetRecordBalance : should set the current recording balance and return with
//! KErrNone. 3.GetRecordBalance : should get the current recording balance. 4.call back MoscoStateChangeEvent  should return KErrNone
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0066 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0067
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get  the current recording balance while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should be leave with KErrNone. 2.Recording state : SetRecordBalance should set the current recording
//! balance. 3.Recording state : GetRecordBalance should get the current recording balance. 4.call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0067 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0068
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the current recording
//! balance before Open an Audio file.
//!@SYMTestExpectedResults    1.SetRecordBalance should return KErrNotSupported 2.GetRecordBalance should return KErrNotSupported and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0068 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0069
//!@SYMTestCaseDesc           SetRecordBalance() in Eopen, ERecording State(Boundary condition less than zero)
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current recording balance to Less Than KMMFBalanceMaxLeft.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRecordBalance : should  return with KErrArgument and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0069 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0083
//!@SYMTestCaseDesc           SourceBitRateL() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Get the
//! bit rate of the audio clip.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SourceBitRateL : Should get the bit rate of the audio file.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0083 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0084
//!@SYMTestCaseDesc           SourceBitRateL() in EPlaying State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Playing the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the bit rate of the audio clip while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL : Should not leave. 3. Playing State : SourceBitRateL Should get the
//! bit rate of the audio file.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0084 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0085
//!@SYMTestCaseDesc           SourceBitRateL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Get the bit rate of the audio
//! clip before Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State: SourceBitRateL Should leave with KErrNotSupported.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0085 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0090
//!@SYMTestCaseDesc           GetSupportedSampleRatesL() in Erecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after get a list of supported sample rates.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL : Should not leave. 3.Recording state : GetSupportedSampleRatesL should
//! Returns a list of supported recording sample rates.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0090 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0091
//!@SYMTestCaseDesc           GetSupportedSampleRatesL() in ENotReady  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after get a list of supported sample
//! rates before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady State : GetSupportedSampleRatesL should leave with KErrNotSupported.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0091 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0092
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get.
//!@SYMTestExpectedResults    1.Opening an Audio file should be not leave. 2. SetDestinationFormatL  : It should  Set the format of the audio clip. 3.
//! DestinationFormatL :  It should  Get the format of the audio clip.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0092 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0093
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in ENotReady   State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the format of the
//! audio clip before  Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State :  SetDestinationFormatL  should  leave with KErrNotSupported. 2. ENotReady State : DestinationFormatL
//!  should  leave with KErrNotSupported.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0093 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0094
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in ERecording   State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the format of the audio clip before while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3.Recording state : SetDestinationFormatL should
//!  Get the format of the audio clip and call back MoscoStateChangeEvent  should leave KErrNotReady.  4.Recording state : DestinationFormatL should  Get
//! the format of the audio clip and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0094 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0098
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after get a list
//! of supported number of channels for recording.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. GetSupportedNumberOfChannelsL  : It should get a list of supported number of
//! channels for recording.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0098 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0099
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after get a list of supported number of channels for recording while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : Should not leave. 3.Recording state : GetSupportedNumberOfChannelsL
//!  should get a list of supported number of channels for recording.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0099 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0100
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after get a list of supported number
//! of channels for recording before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady state : GetSupportedNumberOfChannelsL  should leave with KErrNotSupported.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0100 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE


//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0102
//!@SYMTestCaseDesc           GetNumberOfMetaDataEntries()  in Eplaying and ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Playing. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the number of Meta data entries associated with the clip while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL : Should not leave. 3.RecordL : Should not Leave 4.Playing state : GetNumberOfMetaDataEntries
//! should  return KErrNotSupported and test result should be EKnownFailure 5.Recording state : GetNumberOfMetaDataEntries should leave with KErrNotReady
//! and test result should be EKnownFailure
//RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0102 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0103
//!@SYMTestCaseDesc           GetNumberOfMetaDataEntries()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Get the number of Meta data entries
//! associated with the clip before Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State : GetNumberOfMetaDataEntries should  return KErrNotSupported and test result should be EKnownFailure.
//RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0103 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0105
//!@SYMTestCaseDesc           GetMetaDataEntryL()  in Eplaying and Erecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Playing. 4.Check the call back MoscoStateChangeEvent
//!  code after get the specified Meta data entry from the current audio clip while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.PlayL : Play should not leave. 3.RecordL : Record Should not leave. 4.Recording
//! state :  GetMetaDataEntryL should  leave with KErrNotSupported and test result should be EKnownFailure. 5.Playing state :  GetMetaDataEntryL should 
//! leave with KErrNotSupported and test result should be EKnownFailure.
//RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0105 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0106
//!@SYMTestCaseDesc           GetMetaDataEntryL()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after get the specified Meta data entry
//! from the current audio clip before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady State :   GetMetaDataEntryL should leave with KErrNotSupported and test result should be EKnownFailure..
//RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0106 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0070
//!@SYMTestCaseDesc           SetRecordBalance() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current recording balance to Greater Than KMMFBalanceMaxRight.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRecordBalance : should  return with KErrArgument and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0070 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0071
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Get a
//! list of the supported codecs.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. GetSupportedDestinationDataTypesL : should get a list of supported codec and
//! call back MoscoStateChangeEvent  should return KErrNone..
//RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0071 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0072
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get a list of the supported codecs while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL :call back MoscoStateChangeEvent  should return KErrNone. 3.GetSupportedDestinationDataTypesL:
//! should give a list of supported codec.
//RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0072 \char\mmf\char_mmf_audiorec.ini
//TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0073
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after  Get a list of the supported
//! codecs before Open an Audio file.
//!@SYMTestExpectedResults    1.GetSupportedDestinationDataTypesL should  leave with KErrNotSupported.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0073 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0074
//!@SYMTestCaseDesc           SetDestinationDataTypesL()  / DestinationDataTypeL () in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the codecs to use with the Recorder controller.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationDataTypesL : should set the codec to recorder controller. 3.DestinationDataTypeL
//! :should get the codec to recorder controller. 4. call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0074 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0075
//!@SYMTestCaseDesc           SetDestinationDataTypesL() / DestinationDataTypesL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the codecs to use
//! with the Recorder controller before Open an Audio file.
//!@SYMTestExpectedResults    1. SetDestinationDataTypesL / DestinationDataTypesL  : should leave with KErrNotSupported.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0075 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0076
//!@SYMTestCaseDesc           DestinationDataTypeL () in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the codecs to use with the Recorder controller while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL :Should not leave. 3.Recording state : DestinationDataTypeL should
//! get the codec to recorder controller.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0076 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

// KNOWN Failures
//SetDestinationBitRateL() not supported
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0077
//!@SYMTestCaseDesc           SetDestinationBitRateL() / DestinationBitRateL() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set and
//! Get the bit rate of the data sink (Currently audio controller is not supported this feature).
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationBitRateL / DestinationBitRateL : should leave with KErrNotSupported,
//! and test result should  EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0077 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//SetDestinationBitRateL() not supported
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0078
//!@SYMTestCaseDesc           SetDestinationBitRateL() / DestinationBitRateL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set  and Get the bit rate of the
//! data sink  (Currently audio controller is not supported this feature) before Open an Audio file.
//!@SYMTestExpectedResults    1. SetDestinationBitRateL : should leave with  KErrNotSupported and test result should  EKnownFailure. 2. DestinationBitRateL
//! :should  leave with KErrNotSupported and test result should  EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0078 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0079
//!@SYMTestCaseDesc           DestinationBitRateL() in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set and Get the bit rate of the data sink (Currently audio controller is not supported this feature) while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording state : DestinationBitRateL should get the bit rate of the data s
//!ink.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0079 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//AddMetaDataEntry support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0108
//!@SYMTestCaseDesc           AddMetaDataEntryL()  in Erecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Add a Meta data entry to the audio clip while in recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL : should not leave. 3.Recording state : AddMetaDataEntryL should  leave
//! with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0108 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//AddMetaDataEntry support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0109
//!@SYMTestCaseDesc           AddMetaDataEntryL()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Add a Meta data entry to the audio
//! clip before  Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady state : AddMetaDataEntryL should  leave with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0109 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//RemoveMetaDataEntry support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0111
//!@SYMTestCaseDesc           RemoveMetaDataEntryL()  in ERecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after Remove a specified Meta data entry from the audio clip while in recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3.Recording state :  RemoveMetaDataEntryL should
//!  leave with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0111 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//RemoveMetaDataEntry support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0112
//!@SYMTestCaseDesc           RemoveMetaDataEntryL()  in ENotReady  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Remove a specified Meta data entry
//! from the audio clip before  Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady state :  RemoveMetaDataEntryL should  leave with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0112 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//ReplaceMetaDataEntryL support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0114
//!@SYMTestCaseDesc           ReplaceMetaDataEntryL()  in Erecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Replace a specified Meta data entry from the audio clip while in recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3. Recording state : ReplaceMetaDataEntryL should
//! should  leave with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0114 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//ReplaceMetaDataEntryL support is not provided
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0115
//!@SYMTestCaseDesc           ReplaceMetaDataEntryL()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Replace a specified Meta data
//! entry from the audio clip before  Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State :  ReplaceMetaDataEntryL should  leave with KErrNotSupported and test result should be EKnownFailure.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0115 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0126
//!@SYMTestCaseDesc           SetPosition() in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set the current head Position to any negative value while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Play should not  leave. 3.call back MoscoStateChangeEvent  should return with
//! KErrArgument.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0126 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0042
//!@SYMTestCaseDesc           SetPlayWindow() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set the
//! Play Window of  audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPlayWindow: It should set the play window of  the selected audio file  and
//! call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0042 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0043
//!@SYMTestCaseDesc           SetPlayWindow() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! Play Window of the audio file with Start Position Less than Zero.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPlayWindow: It should set the play window to the specified value. 3. Play
//! :call back MoscoStateChangeEvent  should return KErrArgument.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0043 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0044
//!@SYMTestCaseDesc           SetPlayWindow() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! Play Window of the audio file with End Position greater than the Clip duration.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPlayWindow: It should set the play window to the Clip Duration. 3. Play
//! : call back MoscoStateChangeEvent  should return KErrNonee.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0044 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0045
//!@SYMTestCaseDesc           SetPlayWindow() in EPlaying State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Set the Play Window of the audio file. 4. Starts Playing. 3.Check
//! the call back MoscoStateChangeEvent  code after set the play Windowagain in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPlayWindow: It should set the play window to the specified value. 3. Playing
//! state : call back MoscoStateChangeEvent  should return KErrNone and set the play window again.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0045 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0046
//!@SYMTestCaseDesc           SetPlayWindow() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set the Play Window before Open
//! an Audio file.
//!@SYMTestExpectedResults    1. SetPlayWindow:Should have no operation.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0046 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0047
//!@SYMTestCaseDesc           ClearPlayWindow() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Clear
//! the Play Window of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. ClearPlayWindow: It should clear the play window of  the selected audio file
//!  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0047 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0048
//!@SYMTestCaseDesc           ClearPlayWindow() in EPlaying State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Playing. 4 Check the call back MoscoStateChangeEvent 
//! code after Clear the Play Window of the audio file while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Play should not leave.  3.Playing state : ClearPlayWindow should clear the play
//! window of  the selected audio file  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0048 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0049
//!@SYMTestCaseDesc           ClearPlayWindow() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Clear the Play Window of the audio
//! file Before Open.
//!@SYMTestExpectedResults    1. ENotReady State: ClearPlayWindow should have no opearation.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0049 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0050
//!@SYMTestCaseDesc           SetRepeats() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set Repeat
//! the audio file for number of times.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRepeats :  It should set the no. of times to be repeated  the selected audio
//! file  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0050 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0051
//!@SYMTestCaseDesc           SetRepeats() in EPlaying State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Playing. 4.Check the call back MoscoStateChangeEvent 
//! code after Set Repeat the audio file for number of times while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.PlayL: Play should not leave. 3.Playing state: SetRepeats should set the no.
//! of times to be repeated  the selected audio file  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0051 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0052
//!@SYMTestCaseDesc           SetRepeats() in Eopen, EPlaying State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set Repeat
//! the audio file for any negative value or less than Zero.
//!@SYMTestExpectedResults    1.Opened State: SetRepeats should return with Panic KErrArgument. 2.Playing State: SetRepeats should have no operation and
//! at least play Once.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0052 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0054
//!@SYMTestCaseDesc           SetMaxWriteLength() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size for the audio file that being recorded while in  recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3. SetMaxWriteLength:  It should not set the Maximum
//! size for the selected audio file to be recorded  and call back MoscoStateChangeEvent  should be Panic returned KErrNotReady.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0054 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0055
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size less than Zero for the audio file that being recorded while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3.Opened state: SetMaxWriteLength should return KErrArgument
//! with Panic and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 100000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0055 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0130
//!@SYMTestCaseDesc           SetRepeats() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Set the Repeats before Open an Audio file. 3.Then Open and starts Play and Check the
//! call back MoscoStateChangeEvent  code after Set Repeat the audio file for number of times.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRepeats :  It should set the no. of times to be repeated  the selected audio
//! file  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 90000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0130 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0086
//!@SYMTestCaseDesc           SetDestinationSampleRateL() / DestinationSampleRateL() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set and
//! Get the sample rate for the audio file to be recorded.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationSampleRateL : should Sets the sample rate for the conversion
//! destination data sink. 3. DestinationSampleRateL : should Gets the sample rate for the conversion destination data sink. 4. call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 60000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0086 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0087
//!@SYMTestCaseDesc           SetDestinationSampleRateL() / DestinationSampleRateL() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after Set and Get the sample rate for the audio file to be recorded while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Record should not leave. 3.Recording state : SetDestinationSampleRateL
//! should Sets the sample rate for the conversion destination data sink. 4.Recording state : DestinationSampleRateL should Gets the sample rate for the
//! conversion destination data sink.
RUN_TEST_STEP 60000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0087 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0088
//!@SYMTestCaseDesc           SetDestinationSampleRateL() / DestinationSampleRateL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the sample rate for
//! the audio file to be recorded before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady state :  SetDestinationSampleRateL should leave with KErrNotSupported. 2.ENotReady state :  DestinationSampleRateL
//! should leave with KErrNotSupported.
RUN_TEST_STEP 60000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0088 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0095
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the number of channels for the audio clip to be recorded.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationNumberOfChannelsL  : It should Set the number of channels for
//! the audio clip to be recorded. 3. DestinationNumberOfChannelsL  : Get the number of channels for the audio clip to be recorded.
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0095 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0096
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in ERecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after Get the number of channels for the audio clip to be recorded while in recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3. Recording state : DestinationNumberOfChannelsL
//!  should  Get the format of the audio clip and leave with KErrNone. 4.Recording state : SetDestinationNumberOfChannelsL  should  Get the format of the
//! audio clip and leave with KErrNotReady
RUN_TEST_STEP 200000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0096 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-AMR-I-0097
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in ENotReady  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the number of channels
//! for the audio clip to be recorded before Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State:  SetDestinationNumberOfChannelsL   should leave with KErrNotSupported. 2.ENotReady State:   DestinationNumberOfChannelsL
//!  should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-AMR-I-0097 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE