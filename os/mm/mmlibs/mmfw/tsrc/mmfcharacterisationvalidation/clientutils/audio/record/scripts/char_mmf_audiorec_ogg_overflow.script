@file char_mmf_audiorec_ogg_overflow.script
// Copyright (c) 2007-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

///////////////////////////////////////////////////////////////////
PRINT 
LOAD_SUITE char_mmf_audiorec.dll
# wait for ring.wav to finish playing
delay 1000

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0001
//!@SYMTestCaseDesc           Open a file to record an audio sample data.
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility 2. Open an audio file with give full path of the file as an argument to the API.  3. After
//! Open check the call back MoscoStateChangeEvent  code.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave and the callback MoscoStateChangeEvent should return no error.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0001 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0023
//!@SYMTestCaseDesc           MaxGain() in Eopen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Get Maximum
//! Value for the Gain in Opend state
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.MaxGain should  return with Maximum Value and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0023 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0024
//!@SYMTestCaseDesc           MaxGain() in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get Maximum Value for the Gain while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Recording should not leave. 3.MaxGain should  return with Maximum Value and
//! callback should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0024 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0025
//!@SYMTestCaseDesc           MaxGain() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Get Maximum Value for the Gain
//! before Open an Audio file.
//!@SYMTestExpectedResults    1.MaxGain should  return Zero.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0025 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0026
//!@SYMTestCaseDesc           SetGain() / GetGain() in EOpen  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get  the Gain.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetGain should set the gain. 3.GetGain should return the current gain. 4.call
//! back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0026 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0027
//!@SYMTestCaseDesc           SetGain() / GetGain()  in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the Gain while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain. 4.GetGain
//! should return current gain value and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0027 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0028
//!@SYMTestCaseDesc           SetGain() / GetGain()  in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and Get the Gain before Open
//! an Audio file.
//!@SYMTestExpectedResults    1.SetGain: It should give no operation. 2.GetGain: It should return KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0028 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

// This to test for Boundary conditions for SetGain()
//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0029
//!@SYMTestCaseDesc           SetGain() in Eopen, Erecording  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set the Gain to less than Zero.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain to
//! Zero  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0029 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0030
//!@SYMTestCaseDesc           SetGain() in Eopen, Erecording  state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set the Gain to greater than Maximum Gain.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording the audio file should not leave. 3.SetGain should set the gain to
//! MaxGain value  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0030 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0031
//!@SYMTestCaseDesc           SetPosition() / Position() in EOpen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the current head Position.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPosition should set the current head position. 3. Get the Position should
//! return the current head position. 4.PlayL: Play should start from the set position  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 400000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0031 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0032
//!@SYMTestCaseDesc           SetPosition() / Position()  in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the current head Position while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: should not leave. 3.Set position should set the Position while in playing
//! state. 4.Get position should return the Position while in playing state. 5.call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 400000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0032 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0033
//!@SYMTestCaseDesc           SetPosition() / Position()  in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get the current head Position while in Recording state. 5. Set the SetPlayWindow() and call Position() and check the call back Mo
//!scoStateChangeEvent.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording should not leave. 3.Set position should have no operation while in
//! Recording state. 4.Get position should return the current head Position while in Recording state. 5. call back MoscoStateChangeEvent  should return KErrNone.
//! N.B: Document issue 6. Position : It should return the SetPlayWindow() start position.
RUN_TEST_STEP 400000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0033 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0034
//!@SYMTestCaseDesc           SetPosition() / Position() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and get the Position before
//! Open an Audio file.
//!@SYMTestExpectedResults    1.Set position / Get Position : should have no operation in ENotReady State.
RUN_TEST_STEP 400000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0034 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0126
//!@SYMTestCaseDesc           SetPosition() in EPlaying state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Play the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set the current head Position to any negative value while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Play should not  leave. 3.call back MoscoStateChangeEvent  should return with
//! KErrArgument.
RUN_TEST_STEP 400000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0126 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0036
//!@SYMTestCaseDesc           RecordTimeAvailable() in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after call to RecordTimeAvailable while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Starts Recording should not leave. 3 It should return the recoding time available
//! for the selected file and  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0036 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0037
//!@SYMTestCaseDesc           RecordTimeAvailable() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after call to RecordTimeAvailable before
//! Open an Audio file.
//!@SYMTestExpectedResults    1. Recoding time available should return no operation EnotReady state.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0037 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0038
//!@SYMTestCaseDesc           Duration() in EOpen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after call to
//! Get Duration of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Duration ::It should return the Duration of  the selected audio file and  call
//! back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0038 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0039
//!@SYMTestCaseDesc           Duration() in ERecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after call to Get the Duration while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.Recording state:  It should return the Duration of  the selected audio file
//!  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0039 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0040
//!@SYMTestCaseDesc           Duration() in EPlaying  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Playing 4.Check the call back MoscoStateChangeEvent  code
//! after Getting the Duration while in Playing state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Playing state: It should return the Duration of  the selected audio file  and
//! call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0040 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0041
//!@SYMTestCaseDesc           Duration() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Getting the Duration before Open
//! an Audio file.
//!@SYMTestExpectedResults    1. ENotReady state: It should return the Duration  Zero.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0041 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE


//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0053
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set Maximum
//! size for the audio file that being recorded.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetMaxWriteLength:  It should set the Maximum size for the selected audio file
//! to be recorded  and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0053 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0054
//!@SYMTestCaseDesc           SetMaxWriteLength() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size for the audio file that being recorded while in  recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3. SetMaxWriteLength:  It should not set the Maximum
//! size for the selected audio file to be recorded  and call back MoscoStateChangeEvent  should be Panic returned KErrNotReady.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0054 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0055
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size less than Zero for the audio file that being recorded while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3.Opened state: SetMaxWriteLength should return KErrArgument
//! with Panic and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0055 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0056
//!@SYMTestCaseDesc           SetMaxWriteLength() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set Maximum size for the audio
//! file before Open an Audio file.
//!@SYMTestExpectedResults    1. SetMaxWriteLength:  It should have no operation.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0056 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0058
//!@SYMTestCaseDesc           SetPriority() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! Priority of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetPriority : It should set the Priority of the audio file  and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0058 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0063
//!@SYMTestCaseDesc           SetPlayBackBalance() / GetPlayBackBalance() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Set and Get the current Play back
//! balance of the audio file before Open an Audio file.
//!@SYMTestExpectedResults    1. SetPlaybackBalance : It should  return with KErrNotSupported. 2.GetPlaybackBalance : It should return with KErrNotSup
//!ported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0063 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0064
//!@SYMTestCaseDesc           SetPlayBackBalance() in Eopen, EPlaying State(Boundary condition less than zero)
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current Play back balance less than to KMMFBalanceMaxLeft of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: Play should not leave. 3. SetPlaybackBalance: should set the current
//! Play back balance  to KMMFBalanceMaxLeft of the audio file and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0064 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0065
//!@SYMTestCaseDesc           SetPlayBackBalance() in Eopen, EPlaying State(Boundary condition greatre than maximum value )
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current Play back balance greater than to KMMFBalanceMaxRight of the audio file.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. PlayL: Play should not leave. 3. SetPlaybackBalance: should set the current
//! Play back balance  to KMMFBalanceMaxRight of the audio file and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0065 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0066
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Set the current recording balance. 4.Get the current recording
//! balance Check the call back MoscoStateChangeEvent  code after.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.SetRecordBalance : should set the current recording balance and return with
//! KErrNone. 3.GetRecordBalance : should get the current recording balance. 4.call back MoscoStateChangeEvent  should return KErrNone
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0066 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0067
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Set and Get  the current recording balance while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should be leave with KErrNone. 2.Recording state : SetRecordBalance should set the current recording
//! balance. 3.Recording state : GetRecordBalance should get the current recording balance. 4.call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0067 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0068
//!@SYMTestCaseDesc           SetRecordBalance() / GetRecordBalance() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the current recording
//! balance before Open an Audio file.
//!@SYMTestExpectedResults    1.SetRecordBalance should return KErrNotSupported 2.GetRecordBalance should return KErrNotSupported and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0068 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0069
//!@SYMTestCaseDesc           SetRecordBalance() in Eopen, ERecording State(Boundary condition less than zero)
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current recording balance to Less Than KMMFBalanceMaxLeft.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRecordBalance : should  return with KErrArgument and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0069 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0070
//!@SYMTestCaseDesc           SetRecordBalance() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after Set the
//! current recording balance to Greater Than KMMFBalanceMaxRight.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetRecordBalance : should  return with KErrArgument and call back MoscoStateChangeEvent
//!  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0070 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0071
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in Eopen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Get a
//! list of the supported codecs.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. GetSupportedDestinationDataTypesL : should get a list of supported codec and
//! call back MoscoStateChangeEvent  should return KErrNone..
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0071 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0072
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get a list of the supported codecs while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL :call back MoscoStateChangeEvent  should return KErrNone. 3.GetSupportedDestinationDataTypesL:
//! should give a list of supported codec.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0072 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0073
//!@SYMTestCaseDesc           GetSupportedDestinationDataTypesL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after  Get a list of the supported
//! codecs before Open an Audio file.
//!@SYMTestExpectedResults    1.GetSupportedDestinationDataTypesL should  leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0073 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0074
//!@SYMTestCaseDesc           SetDestinationDataTypesL()  / DestinationDataTypeL () in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the codecs to use with the Recorder controller.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationDataTypesL : should set the codec to recorder controller. 3.DestinationDataTypeL
//! :should get the codec to recorder controller. 4. call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0074 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0075
//!@SYMTestCaseDesc           SetDestinationDataTypesL() / DestinationDataTypesL() in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the codecs to use
//! with the Recorder controller before Open an Audio file.
//!@SYMTestExpectedResults    1. SetDestinationDataTypesL / DestinationDataTypesL  : should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0075 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0076
//!@SYMTestCaseDesc           DestinationDataTypeL () in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the codecs to use with the Recorder controller while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL :Should not leave. 3.Recording state : DestinationDataTypeL should
//! get the codec to recorder controller.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0076 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0079
//!@SYMTestCaseDesc           DestinationBitRateL() in Erecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording the audio file. 4. Check the call back MoscoStateChangeEvent
//!  code after Set and Get the bit rate of the data sink (Currently audio controller is not supported this feature) while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. Recording state : DestinationBitRateL should get the bit rate of the data s
//!ink.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0079 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0080
//!@SYMTestCaseDesc           GetSupportedBitRatesL() in Eopen state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after get a
//! list of supported bit rates for recording to the data sink (Currently audio controller is not supported this feature).
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.GetSupportedBitRatesL : Should Returns a list of the supported bit rates for
//! recording to the data sink.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0080 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0081
//!@SYMTestCaseDesc           GetSupportedBitRatesL() in ERecording state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording of the audio file. 4.Check the call back MoscoStateChangeEvent
//!  code after Get a list of supported bit rates for recording to the data sink (Currently audio controller is not supported this feature) while in Recording
//! state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL : should not leave. 3.Recording state : GetSupportedBitRatesL Should
//! Returns a list of the supported bit rates for recording to the data sink. Note: issue: It returns KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0081 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0082
//!@SYMTestCaseDesc           GetSupportedBitRatesL() in ENotReady state
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after Get a list of supported bit rates
//! for recording to the data sink (Currently audio controller is not supported this feature) before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady state : GetSupportedBitRatesL Should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0082 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0089
//!@SYMTestCaseDesc           GetSupportedSampleRatesL() in EOpen State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after getting
//! a list of supported sample rates.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. GetSupportedSampleRatesL : It should Returns a list of supported recording
//! sample rates.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0089 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0090
//!@SYMTestCaseDesc           GetSupportedSampleRatesL() in Erecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after get a list of supported sample rates.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL : Should not leave. 3.Recording state : GetSupportedSampleRatesL should
//! Returns a list of supported recording sample rates.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0090 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0091
//!@SYMTestCaseDesc           GetSupportedSampleRatesL() in ENotReady  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after get a list of supported sample
//! rates before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady State : GetSupportedSampleRatesL should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0091 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0092
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get.
//!@SYMTestExpectedResults    1.Opening an Audio file should be not leave. 2. SetDestinationFormatL  : It should  Set the format of the audio clip. 3.
//! DestinationFormatL :  It should  Get the format of the audio clip.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0092 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0093
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in ENotReady   State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the format of the
//! audio clip before  Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State :  SetDestinationFormatL  should  leave with KErrNotSupported. 2. ENotReady State : DestinationFormatL
//!  should  leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0093 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0094
//!@SYMTestCaseDesc           SetDestinationFormatL() / DestinationFormatL()  in ERecording   State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Get the format of the audio clip before while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3.Recording state : SetDestinationFormatL should
//!  Get the format of the audio clip and call back MoscoStateChangeEvent  should leave KErrNotReady.  4.Recording state : DestinationFormatL should  Get
//! the format of the audio clip and call back MoscoStateChangeEvent  should return KErrNone.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0094 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0095
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Check the call back MoscoStateChangeEvent  code after Set and
//! Get the number of channels for the audio clip to be recorded.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. SetDestinationNumberOfChannelsL  : It should Set the number of channels for
//! the audio clip to be recorded. 3. DestinationNumberOfChannelsL  : Get the number of channels for the audio clip to be recorded.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0095 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0096
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in ERecording  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4. Check the call back MoscoStateChangeEvent
//!  code after Get the number of channels for the audio clip to be recorded while in recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : should not leave. 3. Recording state : DestinationNumberOfChannelsL
//!  should  Get the format of the audio clip and leave with KErrNone. 4.Recording state : SetDestinationNumberOfChannelsL  should  Get the format of the
//! audio clip and leave with KErrNotReady
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0096 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0097
//!@SYMTestCaseDesc           SetDestinationNumberOfChannelsL() /  DestinationNumberOfChannelsL()  in ENotReady  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Check the call back MoscoStateChangeEvent  code after Set and Get the number of channels
//! for the audio clip to be recorded before Open an Audio file.
//!@SYMTestExpectedResults    1. ENotReady State:  SetDestinationNumberOfChannelsL   should leave with KErrNotSupported. 2.ENotReady State:   DestinationNumberOfChannelsL
//!  should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0097 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0098
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in EOpen  State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Check the call back MoscoStateChangeEvent  code after get a list
//! of supported number of channels for recording.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. GetSupportedNumberOfChannelsL  : It should get a list of supported number of
//! channels for recording.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0098 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0099
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3. Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after get a list of supported number of channels for recording while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2. RecordL : Should not leave. 3.Recording state : GetSupportedNumberOfChannelsL
//!  should get a list of supported number of channels for recording.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0099 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0100
//!@SYMTestCaseDesc           GetSupportedNumberOfChannelsL()  in ENotReady State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2.Check the call back MoscoStateChangeEvent  code after get a list of supported number
//! of channels for recording before Open an Audio file.
//!@SYMTestExpectedResults    1.ENotReady state : GetSupportedNumberOfChannelsL  should leave with KErrNotSupported.
RUN_TEST_STEP 300000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0100 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE


