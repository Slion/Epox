@file char_mmf_audiorec_panic.script
// Copyright (c) 2006-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

///////////////////////////////////////////////////////////////////
PRINT 
LOAD_SUITE char_mmf_audiorec.dll
# wait for ring.wav to finish playing
delay 1000


//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-I-0054
//!@SYMTestCaseDesc           SetMaxWriteLength() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size for the audio file that being recorded while in  recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3. SetMaxWriteLength:  It should not set the Maximum
//! size for the selected audio file to be recorded  and call back MoscoStateChangeEvent  should be Panic returned KErrNotReady.
RUN_PANIC_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-I-0054 recorder.cpp -1 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-I-0055
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size less than Zero for the audio file that being recorded while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3.Opened state: SetMaxWriteLength should return KErrArgument
//! with Panic and call back MoscoStateChangeEvent  should return KErrNone.
RUN_PANIC_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-I-0055 recorder.cpp -1 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0054
//!@SYMTestCaseDesc           SetMaxWriteLength() in ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts Recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size for the audio file that being recorded while in  recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3. SetMaxWriteLength:  It should not set the Maximum
//! size for the selected audio file to be recorded  and call back MoscoStateChangeEvent  should be Panic returned KErrNotReady.
RUN_PANIC_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0054 recorder.cpp -1 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

//!@SYMTestCaseID             MM-MMF-ARCLNT-CHRTZ-OGG-I-0055
//!@SYMTestCaseDesc           SetMaxWriteLength() in Eopen, ERecording State
//!@SYMTestPriority           4
//!@SYMTestActions            1. Create audio recorder utility. 2. Open an Audio file. 3.Starts recording. 4.Check the call back MoscoStateChangeEvent
//!  code after Set Maximum size less than Zero for the audio file that being recorded while in Recording state.
//!@SYMTestExpectedResults    1.Opening an Audio file should not leave. 2.RecordL: Should not leave. 3.Opened state: SetMaxWriteLength should return KErrArgument
//! with Panic and call back MoscoStateChangeEvent  should return KErrNone.
RUN_PANIC_STEP 600000 CHAR_MMF_AUDIOREC MM-MMF-ARCLNT-CHRTZ-OGG-I-0055 recorder.cpp -1 \char\mmf\char_mmf_audiorec.ini
TEST_COMPLETE

