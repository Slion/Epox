// Copyright (c) 2008-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

PRINT Run all te_ut_ecam_server Suite Tests

LOAD_SUITE te_ut_ecam_serversuite

START_TESTCASE	MM-ECAMServer-U-0001
//! @SYMTestCaseID          MM-ECAMServer-U-0001
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Construct/Destruct/get CameraVersion for CCamera
//! @SYMTestExpectedResults CCamera object is constructed and destucted successfully, camera API version no returned.
//! @SYMTestActions         1. Determine the number of cameras on the device.
//!                         2. For each camera, create a CCamera object.
//!                         3. For each camera, return the camera API version no.
//!							4. For each camera, destruct the camera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//! 						CCamera::New2L()
//!							CCamera::CameraVersion()

RUN_TEST_STEP	!OOM		100	te_ut_ecam_serversuite	Camera_Creation_OOM_Test

END_TESTCASE	MM-ECAMServer-U-0001

START_TESTCASE	MM-ECAMServer-U-0002
//! @SYMTestCaseID          MM-ECAMServer-U-0002
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Reserves the camera for exclusive use.
//! @SYMTestExpectedResults CCamera object is constructed and reserved successfully.
//! @SYMTestActions         1. Determine the number of cameras on the device.
//!                         2. For each camera, create a CCamera object.
//!                         3. For each camera, return the camera API version no.
//!							4. For each camera, reserve the camera for exclusive use
//!							5. Release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//! 						CCamera::New2L()
//!							CCamera::CameraVersion()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP	!OOM		100	te_ut_ecam_serversuite	Camera_Reserve_OOM_Test

END_TESTCASE	MM-ECAMServer-U-0002

START_TESTCASE	MM-ECAMServer-U-0003
//! @SYMTestCaseID          MM-ECAMServer-U-0003
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Reserves the camera for exclusive use and switch on camera power. 
//! @SYMTestExpectedResults CCamera object is constructed, reserved and powered on successfully.
//! @SYMTestActions         1. Determines the number of cameras on the device.
//!                         2. For each camera, create a CCamera object.
//!                         3. For each camera, return the camera API version no.
//!							4. For each camera, reserve the camera for exclusive use
//!							5. For each camera, power on the camera
//!							6. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//! 						CCamera::New2L()
//!							CCamera::CameraVersion()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP	!OOM		100	te_ut_ecam_serversuite	Camera_PowerOn_OOM_Test

END_TESTCASE	MM-ECAMServer-U-0003

START_TESTCASE	MM-ECAMServer-U-0004
//! @SYMTestCaseID          MM-ECAMServer-U-0004
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Switch camera state between reserved and released 
//! @SYMTestExpectedResults CCamera successfully created and state switch succeed
//! @SYMTestActions         1. Create a CCamera object, reserves the camera for exclusive use
//!							2. Create a CTimer object
//!							3. Switch state of CCamera between reserved and released
//!							4. Release and destruct CCamera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_Repeated_Reserve_Test

END_TESTCASE	MM-ECAMServer-U-0004

START_TESTCASE	MM-ECAMServer-U-0005
//! @SYMTestCaseID          MM-ECAMServer-U-0005
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Switch camera state between Power on and Power off 
//! @SYMTestExpectedResults CCamera successfully created and state switch succeed
//! @SYMTestActions         1. Create a CCamera object, reserves the camera for exclusive use. power on the camera
//!							2. Create a CTimer object
//!							3. Switch state of CCamera between Power on and Power off
//!							4. Release and destruct CCamera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_Repeated_PowerOn_Test

END_TESTCASE	MM-ECAMServer-U-0005

START_TESTCASE	MM-ECAMServer-U-0006
//! @SYMTestCaseID          MM-ECAMServer-U-0006
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Start direct ViewFinder v2 and transfer data to the screen,  get viewfinder property. 
//! @SYMTestExpectedResults Get Viewfinder property.
//! @SYMTestActions         1. Create a CCamera object, reserves the camera for exclusive use, power on the camera
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Get state of the CCamera direct ViewFinder v2
//!							5. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							6. Get state of the CCamera direct ViewFinder v2
//!							7. Get properties of the CCamera direct ViewFinder v2 	
//!							8. Stop ViewFinder. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!                         CCamera::CCameraV2DirectViewFinder::GetViewFinderHandleL()
//!							CCamera::CCameraV2DirectViewFinder::GetViewFinderStateL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::DirectViewFinderFirstFrameDisplayed()
//!							CCamera::CCameraV2DirectViewFinder::GetDirectViewFinderPropertiesL()
//!							CCamera::CCameraV2DirectViewFinder::StopDirectViewFinder()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_Start_ViewFinder_Test

END_TESTCASE	MM-ECAMServer-U-0006

DELAY						3000

START_TESTCASE	MM-ECAMServer-U-0007
//! @SYMTestCaseID          MM-ECAMServer-U-0007
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Switch state of ViewFinder between Start and Stop
//! @SYMTestExpectedResults State of ViewFinder switched successfully
//! @SYMTestActions         1. Create a CCamera object, reserves the camera for exclusive use, power on the camera
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Get state of the CCamera direct ViewFinder v2
//!							5. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							6. Get state of the CCamera direct ViewFinder v2
//!							7. Switch state of 	ViewFinder between Start and Stop
//!							8. Stop ViewFinder. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!							CCamera::CCameraV2DirectViewFinder::GetViewFinderStateL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::DirectViewFinderFirstFrameDisplayed()
//!							CCamera::CCameraV2DirectViewFinder::GetDirectViewFinderPropertiesL()
//!							CCamera::CCameraV2DirectViewFinder::StopDirectViewFinder()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_StartStop_ViewFinder_Test

END_TESTCASE	MM-ECAMServer-U-0007

DELAY						3000

START_TESTCASE	MM-ECAMServer-U-0008
//! @SYMTestCaseID          MM-ECAMServer-U-0008
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Reserve the camera, then destruct the CCamera object.
//! @SYMTestExpectedResults CCamera object reserved and desctructed successfully.
//! @SYMTestActions         1. Create a CCamera object.
//!                         2. Reserve the camera.
//!							3. Destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()

RUN_TEST_STEP			100	te_ut_ecam_serversuite	Camera_Reserve_Then_Destruct_Test

END_TESTCASE	MM-ECAMServer-U-0008

START_TESTCASE	MM-ECAMServer-U-0009
//! @SYMTestCaseID          MM-ECAMServer-U-0009
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Reserve and power on the camera, then destruct the CCamera object.
//! @SYMTestExpectedResults CCamera object reserved, powered on and desctructed successfully.
//! @SYMTestActions         1. Create a CCamera object.
//!                         2. Reserve the camera.
//!							3. Power on the camera.
//!							4. Destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()

RUN_TEST_STEP			100	te_ut_ecam_serversuite	Camera_PowerOn_Then_Destruct_Test

END_TESTCASE	MM-ECAMServer-U-0009

START_TESTCASE	MM-ECAMServer-U-0010
//! @SYMTestCaseID          MM-ECAMServer-U-0010
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Reserve and power on the camera, start the ViewFinder, then destruct the CCamera object.
//! @SYMTestExpectedResults CCamera object reserved, powered on and desctructed successfully.
//! @SYMTestActions         1. Create a CCamera object, reserves the camera for exclusive use, power on the camera
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							5. Destruct CCamera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::DirectViewFinderFirstFrameDisplayed()

RUN_TEST_STEP			100	te_ut_ecam_serversuite	Camera_Start_ViewFinder_Then_Destruct_Test

END_TESTCASE	MM-ECAMServer-U-0010

DELAY	3000

START_TESTCASE	MM-ECAMServer-U-0011
//! @SYMTestCaseID          MM-ECAMServer-U-0011
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, reserve the camera twice without release
//! @SYMTestExpectedResults Camera cannot be reserved twice, so KErrInUse should be returned in this test case
//! @SYMTestActions         1. Create a CCamera object.
//!                         2. Reserve the camera.
//!							3. Reserve the camera again.
//!							4. Release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP !Error=-14	100	te_ut_ecam_serversuite	Camera_Reserve_Twice_Test

END_TESTCASE	MM-ECAMServer-U-0011

START_TESTCASE	MM-ECAMServer-U-0012
//! @SYMTestCaseID          MM-ECAMServer-U-0012
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, power on the camera twice without release
//! @SYMTestExpectedResults Camera cannot be powered on twice, so KErrInUse should be returned in this test case
//! @SYMTestActions         1. Create a CCamera object and reserve the camera.
//!                         2. Power on the camera.
//!							3. Power on the camera again.
//!							4. Power of, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP !Error=-14	100	te_ut_ecam_serversuite	Camera_PowerOn_Twice_Test

END_TESTCASE	MM-ECAMServer-U-0012

START_TESTCASE	MM-ECAMServer-U-0013
//! @SYMTestCaseID          MM-ECAMServer-U-0013
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, power on the camera before reserve it
//! @SYMTestExpectedResults Power on operation should be called after reserve it, so KErrNotReady should be returned in this test case
//! @SYMTestActions         1. Determines the number of cameras on the device.
//!                         2. For each camera, create a CCamera object.
//!                         3. For each camera, return the camera API version no.
//!							4. For each camera, power on the camera
//!							5. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//!							CCamera::New2L()
//!							CCamera::CameraVersion()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP !Error=-18	100	te_ut_ecam_serversuite	Camera_PowerOn_Without_Reserve_Test

END_TESTCASE	MM-ECAMServer-U-0013

START_TESTCASE	MM-ECAMServer-U-0014
//! @SYMTestCaseID          MM-ECAMServer-U-0014
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, reserve, release and power on the camera
//! @SYMTestExpectedResults Power on operation should be called in reserved mode, so KErrNotReady should be returned in this test case
//! @SYMTestActions         1. Determines the number of cameras on the device.
//!                         2. For each camera, create a CCamera object.
//!                         3. For each camera, return the camera API version no.
//!							4. For each camera, reserve on the camera
//!							5. For each camera, release on the camera
//!							6. For each camera, power on the camera
//!							7. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//!							CCamera::New2L()
//!							CCamera::CameraVersion()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP !Error=-18	100	te_ut_ecam_serversuite	Camera_PowerOn_After_Release_Test

END_TESTCASE	MM-ECAMServer-U-0014

START_TESTCASE	MM-ECAMServer-U-0015
//! @SYMTestCaseID          MM-ECAMServer-U-0015
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, start ViewFinder without reserve and power on the camera
//! @SYMTestExpectedResults ViewFinder should be started after CCamera object has been powered on, so KErrNotReady should be returned in this test case
//! @SYMTestActions         1. Create a CCamera object.
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Get state of the CCamera direct ViewFinder v2
//!							5. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							6. Stop ViewFinder. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!							CCamera::CCameraV2DirectViewFinder::GetViewFinderStateL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::StopDirectViewFinder()

RUN_TEST_STEP !Error=-18	100	te_ut_ecam_serversuite	Camera_Start_ViewFinder_Without_Reserve_Test

END_TESTCASE	MM-ECAMServer-U-0015

START_TESTCASE	MM-ECAMServer-U-0016
//! @SYMTestCaseID          MM-ECAMServer-U-0016
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, start ViewFinder without power on the camera
//! @SYMTestExpectedResults ViewFinder should be started after CCamera object has been powered on, so KErrNotReady should be returned in this test case
//! @SYMTestActions         1. Create a CCamera object, reserve for exclusive use.
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Get state of the CCamera direct ViewFinder v2
//!							5. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							6. Get state of the CCamera direct ViewFinder v2
//!							7. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							8. Stop ViewFinder. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!							CCamera::CCameraV2DirectViewFinder::GetViewFinderStateL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::DirectViewFinderFirstFrameDisplayed()
//!							CCamera::CCameraV2DirectViewFinder::StopDirectViewFinder()

RUN_TEST_STEP !Error=-18	100	te_ut_ecam_serversuite	Camera_Start_ViewFinder_Without_PowerOn_Test

END_TESTCASE	MM-ECAMServer-U-0016

START_TESTCASE	MM-ECAMServer-U-0017
//! @SYMTestCaseID          MM-ECAMServer-U-0017
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, start ViewFinder after power off camera
//! @SYMTestExpectedResults ViewFinder should be started in the power on mode of CCamera, so KErrNotReady should be returned in this test case
//! @SYMTestActions         1. Create a CCamera object, reserve and power on.
//!							2. Power off the CCamera object.
//!							2. Create a window for viewfinder redraw
//!							3. Create a CCamera direct ViewFinder v2 
//!							4. Get state of the CCamera direct ViewFinder v2
//!							5. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							6. Get state of the CCamera direct ViewFinder v2
//!							7. Start transfer of ViewFinder data to the given portion of the screen using direct screen access.
//!							8. Stop ViewFinder. Power off, release and destruct camera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//!   						REQ10602
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::CCameraV2DirectViewFinder::NewL()
//!							CCamera::CCameraV2DirectViewFinder::GetViewFinderStateL()
//!							CCamera::CCameraV2DirectViewFinder::StartViewFinderDirectL()
//!							CCamera::CCameraV2DirectViewFinder::DirectViewFinderFirstFrameDisplayed()
//!							CCamera::CCameraV2DirectViewFinder::StopDirectViewFinder()

RUN_TEST_STEP !Error=-18	100	te_ut_ecam_serversuite	Camera_Start_ViewFinder_After_PowerOff_Test

END_TESTCASE	MM-ECAMServer-U-0017

START_TESTCASE	MM-ECAMServer-U-0018
//! @SYMTestCaseID          MM-ECAMServer-U-0018
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Switch the Camera reserve control between two clients 
//! @SYMTestExpectedResults The first client creates a CCamera object and reserve it, then the second client is able to create another CCamera object and overtaken the camera control.
//! @SYMTestActions         1. For the first client, create a CCamera object, reserve for exclusive use.
//!							2. For the second client, create a CCamera object, reserve for exclusive use. 
//!							3. For the second client, release and destruct the CCamera object.
//!							4. For the first client, release and destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_MultiClient_Reserve_Priority_Test	z:\testdata\configs\te_ut_ecamservertestsuite.ini MultiClientReserve

END_TESTCASE	MM-ECAMServer-U-0018

START_TESTCASE	MM-ECAMServer-U-0019
//! @SYMTestCaseID          MM-ECAMServer-U-0019
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, switch the Camera reserve control between two clients when the later client with lower priority CCamera object
//! @SYMTestExpectedResults The priority of the second CCamera object is lower than the first one, KErrAccessDenied expected.
//! @SYMTestActions         1. For the first client, create a CCamera object, reserve for exclusive use.
//!							2. For the second client, create a CCamera object, reserve for exclusive use. 
//!							3. For the second client, release and destruct the CCamera object.
//!							4. For the first client, release and destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()

RUN_TEST_STEP !Error=-21	100	te_ut_ecam_serversuite	Camera_MultiClient_Reserve_Priority_Test	z:\testdata\configs\te_ut_ecamservertestsuite.ini MultiClientReserve2

END_TESTCASE	MM-ECAMServer-U-0019

START_TESTCASE	MM-ECAMServer-U-0020
//! @SYMTestCaseID          MM-ECAMServer-U-0020
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Switch the Camera power on control between two clients 
//! @SYMTestExpectedResults The first client creates a CCamera object, reserve and power on, then the second client is able to create another CCamera object and overtaken the camera control.
//! @SYMTestActions         1. For the first client, create a CCamera object, reserve for exclusive use and power on.
//!							2. For the second client, create a CCamera object, reserve for exclusive use and power on. 
//!							3. For the second client, power off, release and destruct the CCamera object.
//!							4. For the first client, power off, release and destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP				100	te_ut_ecam_serversuite	Camera_MultiClient_PowerOn_Priority_Test	z:\testdata\configs\te_ut_ecamservertestsuite.ini MultiClientReserve

END_TESTCASE	MM-ECAMServer-U-0020

START_TESTCASE	MM-ECAMServer-U-0021
//! @SYMTestCaseID          MM-ECAMServer-U-0021
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Negative test, switch the Camera control after power on between two clients when the later client with lower priority CCamera object
//! @SYMTestExpectedResults The priority of the second CCamera object is lower than the first one, KErrAccessDenied expected.
//! @SYMTestActions         1. For the first client, create a CCamera object, reserve for exclusive use and power on.
//!							2. For the second client, create a CCamera object, reserve for exclusive use and power on. 
//!							3. For the second client, power off, release and destruct the CCamera object.
//!							4. For the first client, power off, release and destruct the CCamera object.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()

RUN_TEST_STEP !Error=-21	100	te_ut_ecam_serversuite	Camera_MultiClient_PowerOn_Priority_Test	z:\testdata\configs\te_ut_ecamservertestsuite.ini MultiClientReserve2

END_TESTCASE	MM-ECAMServer-U-0021

START_TESTCASE	MM-ECAMServer-U-0022
//! @SYMTestCaseID          MM-ECAMServer-U-0022
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Set and get data from CCamera
//! @SYMTestExpectedResults The CCamera accepts the inputs and updates with them.
//! @SYMTestActions         1. Create a CCamera object, reserve for exclusive use and power on.
//!							2. SetZoomFactorL values for iZoomFactor and confirm value is updated with ZoomFactor.
//!							3. SetDigitalZoomFactorL values for iDigitalZoomFactor and confirm value is updated with DigitalZoomFactor.
//!							4. SetContrastL values for iContrast and confirm value is updated with Contrast.
//!							5. SetBrightnessL values for iBrightness and confirm value is updated with Brightness.
//!							6. SetFlashL values for iFlash and confirm value is updated with Flash.
//!							7. SetExposureL values for iExposure and confirm value is updated with Exposure.
//!							8. SetWhiteBalanceL values for iWhiteBalance and confirm value is updated with WhiteBalance.
//!							9. Power off, release and destruct CCamera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::New2L()
//!							CCamera::Reserve()
//!							CCamera::Release()
//!							CCamera::PowerOn()
//!							CCamera::PowerOff()
//!							CCamera::SetZoomFactorL()
//!							CCamera::ZoomFactor()
//!							CCamera::SetDigitalZoomFactorL()
//!							CCamera::DigitalZoomFactor()
//!							CCamera::SetContrastL()
//!							CCamera::Contrast()
//!							CCamera::SetBrightnessL()
//!							CCamera::Brightness()
//!							CCamera::SetFlashL()
//!							CCamera::Flash()
//!							CCamera::SetExposureL()
//!							CCamera::Exposure()
//!							CCamera::SetWhiteBalanceL()
//!							CCamera::WhiteBalance()

RUN_TEST_STEP			100	te_ut_ecam_serversuite	Camera_Configuration_Test	z:\testdata\configs\te_ut_ecamservertestsuite.ini Configuration

END_TESTCASE	MM-ECAMServer-U-0022

START_TESTCASE	MM-ECAMServer-U-0023
//! @SYMTestCaseID          MM-ECAMServer-U-0023
//! @SYMCreationDate        06-10-2008
//! @SYMAuthor              richardyang
//! @SYMTestType            IT
//! @SYMTestPriority        High
//! @SYMTestCaseDesc        Stress test for construction for CCamera object.
//! @SYMTestExpectedResults 100 CCamera object is constructed and destucted successfully.
//! @SYMTestActions         1. Determine the number of cameras on the device.
//!                         2. Create 100 CCamera objects.
//!                         3. Destroy all CCamera objects.
//! @SYMPREQ                PREQ1512
//! @SYMREQ                 REQ10601
//! @SYMAPI					CCamera::CamerasAvailable()
//! 						CCamera::New2L()

RUN_TEST_STEP			100	te_ut_ecam_serversuite	Camera_Creation_Stress_Test		z:\testdata\configs\te_ut_ecamservertestsuite.ini CreationStress

END_TESTCASE	MM-ECAMServer-U-0023

PRINT Completed MM-ECAMServer-U