EXPORTS
	?ScheduleType@CScheduledTask@@QBE?AW4TScheduleType@@XZ @ 1 NONAME ; enum TScheduleType CScheduledTask::ScheduleType(void) const
	??0RScheduler@@QAE@XZ @ 2 NONAME ; RScheduler::RScheduler(void)
	??0TTaskInfo@@QAE@HAAV?$TBuf@$0IA@@@HH@Z @ 3 NONAME ; TTaskInfo::TTaskInfo(int, class TBuf<128> &, int, int)
	??0TTaskInfo@@QAE@XZ @ 4 NONAME ; TTaskInfo::TTaskInfo(void)
	??4TTaskInfo@@QAEAAV0@ABV0@@Z @ 5 NONAME ; class TTaskInfo & TTaskInfo::operator=(class TTaskInfo const &)
	?Connect@RScheduler@@QAEHXZ @ 6 NONAME ; int RScheduler::Connect(void)
	?CreatePersistentSchedule@RScheduler@@QAEHAAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTScheduleEntryInfo@@@@@Z @ 7 NONAME ; int RScheduler::CreatePersistentSchedule(class TSchedulerItemRef &, class CArrayFixFlat<class TScheduleEntryInfo> const &)
	?Data@CScheduledTask@@QBEABVHBufC16@@XZ @ 8 NONAME ; class HBufC16 const & CScheduledTask::Data(void) const
	?DeleteSchedule@RScheduler@@QBEHH@Z @ 9 NONAME ; int RScheduler::DeleteSchedule(int) const
	?DeleteTask@RScheduler@@QBEHH@Z @ 10 NONAME ; int RScheduler::DeleteTask(int) const
	?DisableSchedule@RScheduler@@QBEHH@Z @ 11 NONAME ; int RScheduler::DisableSchedule(int) const
	?EditSchedule@RScheduler@@QAEHHABV?$CArrayFixFlat@VTScheduleEntryInfo@@@@@Z @ 12 NONAME ; int RScheduler::EditSchedule(int, class CArrayFixFlat<class TScheduleEntryInfo> const &)
	?EnableSchedule@RScheduler@@QBEHH@Z @ 13 NONAME ; int RScheduler::EnableSchedule(int) const
	?ExternalizeL@TTaskInfo@@QBEXAAVRWriteStream@@@Z @ 14 NONAME ; void TTaskInfo::ExternalizeL(class RWriteStream &) const
	?GetScheduleL@RScheduler@@QAEHHAAVTScheduleState@@AAV?$CArrayFixFlat@VTScheduleEntryInfo@@@@AAV?$CArrayFixFlat@VTTaskInfo@@@@AAVTTime@@@Z @ 15 NONAME ; int RScheduler::GetScheduleL(int, class TScheduleState &, class CArrayFixFlat<class TScheduleEntryInfo> &, class CArrayFixFlat<class TTaskInfo> &, class TTime &)
	?GetScheduleRefsL@RScheduler@@QAEHAAV?$CArrayFixFlat@VTSchedulerItemRef@@@@W4TScheduleFilter@@@Z @ 16 NONAME ; int RScheduler::GetScheduleRefsL(class CArrayFixFlat<class TSchedulerItemRef> &, enum TScheduleFilter)
	?GetTaskDataSize@RScheduler@@QAEHHAAH@Z @ 17 NONAME ; int RScheduler::GetTaskDataSize(int, int &)
	?GetTaskInfoL@RScheduler@@QAEHHAAVTTaskInfo@@AAVTPtr16@@AAVTSchedulerItemRef@@AAVTTime@@@Z @ 18 NONAME ; int RScheduler::GetTaskInfoL(int, class TTaskInfo &, class TPtr16 &, class TSchedulerItemRef &, class TTime &)
	?GetTaskRefsL@RScheduler@@QAEHAAV?$CArrayFixFlat@VTSchedulerItemRef@@@@W4TScheduleFilter@@W4TTaskFilter@@@Z @ 19 NONAME ; int RScheduler::GetTaskRefsL(class CArrayFixFlat<class TSchedulerItemRef> &, enum TScheduleFilter, enum TTaskFilter)
	?Info@CScheduledTask@@QBEABVTTaskInfo@@XZ @ 20 NONAME ; class TTaskInfo const & CScheduledTask::Info(void) const
	?InternalizeL@TTaskInfo@@QAEXAAVRReadStream@@@Z @ 21 NONAME ; void TTaskInfo::InternalizeL(class RReadStream &)
	?NewLC@CScheduledTask@@SAPAV1@AAVRReadStream@@@Z @ 22 NONAME ; class CScheduledTask * CScheduledTask::NewLC(class RReadStream &)
	?Register@RScheduler@@QAEHABV?$TBuf@$0BAA@@@H@Z @ 23 NONAME ; int RScheduler::Register(class TBuf<256> const &, int)
	?RunScheduler@@YAHXZ @ 24 NONAME ; int RunScheduler(void)
	?ScheduleTask@RScheduler@@QAEHAAVTTaskInfo@@AAVHBufC16@@AAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTScheduleEntryInfo@@@@@Z @ 25 NONAME ; int RScheduler::ScheduleTask(class TTaskInfo &, class HBufC16 &, class TSchedulerItemRef &, class CArrayFixFlat<class TScheduleEntryInfo> const &)
	?ScheduleTask@RScheduler@@QAEHAAVTTaskInfo@@AAVHBufC16@@H@Z @ 26 NONAME ; int RScheduler::ScheduleTask(class TTaskInfo &, class HBufC16 &, int)
	?StartSch32@@YAHXZ @ 27 NONAME ; int StartSch32(void)
	?ValidUntil@CScheduledTask@@QBEABVTTsTime@@XZ @ 28 NONAME ; class TTsTime const & CScheduledTask::ValidUntil(void) const
	?Version@RScheduler@@QBE?AVTVersion@@XZ @ 29 NONAME ; class TVersion RScheduler::Version(void) const
	?__DbgCheckHeap@RScheduler@@QAEHH@Z @ 30 NONAME ; int RScheduler::__DbgCheckHeap(int)
	?__DbgFailNext@RScheduler@@QAEHH@Z @ 31 NONAME ; int RScheduler::__DbgFailNext(int)
	?__DbgMarkEnd@RScheduler@@QAEHH@Z @ 32 NONAME ; int RScheduler::__DbgMarkEnd(int)
	?__DbgMarkHeap@RScheduler@@QAEHXZ @ 33 NONAME ; int RScheduler::__DbgMarkHeap(void)
	?__DbgResetHeap@RScheduler@@QAEHXZ @ 34 NONAME ; int RScheduler::__DbgResetHeap(void)
	?__FaultServer@RScheduler@@QAEHXZ @ 35 NONAME ; int RScheduler::__FaultServer(void)
	?CreatePersistentSchedule@RScheduler@@QAEHAAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTime@@@Z @ 36 NONAME ; int RScheduler::CreatePersistentSchedule(class TSchedulerItemRef &, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTime const &)
	?EditSchedule@RScheduler@@QAEHHABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTime@@@Z @ 37 NONAME ; int RScheduler::EditSchedule(int, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTime const &)
	?GetScheduleL@RScheduler@@QAEHHAAVTScheduleState@@AAV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@AAVTTime@@AAV?$CArrayFixFlat@VTTaskInfo@@@@@Z @ 38 NONAME ; int RScheduler::GetScheduleL(int, class TScheduleState &, class CArrayFixFlat<class TTaskSchedulerCondition> &, class TTime &, class CArrayFixFlat<class TTaskInfo> &)
	?GetScheduleTypeL@RScheduler@@QAEHHAAW4TScheduleType@@@Z @ 39 NONAME ; int RScheduler::GetScheduleTypeL(int, enum TScheduleType &)
	?ScheduleTask@RScheduler@@QAEHAAVTTaskInfo@@AAVHBufC16@@AAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTime@@@Z @ 40 NONAME ; int RScheduler::ScheduleTask(class TTaskInfo &, class HBufC16 &, class TSchedulerItemRef &, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTime const &)
	?SecurityInfo@CScheduledTask@@QBEABVTSecurityInfo@@XZ @ 41 NONAME ; class TSecurityInfo const & CScheduledTask::SecurityInfo(void) const
	?FileHandleIndex@TScheduledTaskFile@@SAHXZ @ 42 NONAME ; int TScheduledTaskFile::FileHandleIndex(void)
	?FsHandleIndex@TScheduledTaskFile@@SAHXZ @ 43 NONAME ; int TScheduledTaskFile::FsHandleIndex(void)
	??0TTsTime@@QAE@ABVTTime@@H@Z @ 44 NONAME ; TTsTime::TTsTime(class TTime const &, int)
	??0TTsTime@@QAE@XZ @ 45 NONAME ; TTsTime::TTsTime(void)
	?GetLocalTime@TTsTime@@QAE?BVTTime@@XZ @ 46 NONAME ; class TTime const TTsTime::GetLocalTime(void)
	?GetUtcTime@TTsTime@@QAEABVTTime@@XZ @ 47 NONAME ; class TTime const & TTsTime::GetUtcTime(void)
	?IsUtc@TTsTime@@QBEHXZ @ 48 NONAME ; int TTsTime::IsUtc(void) const
	?SetLocalTime@TTsTime@@QAEXABVTTime@@@Z @ 49 NONAME ; void TTsTime::SetLocalTime(class TTime const &)
	?SetUtcTime@TTsTime@@QAEXABVTTime@@@Z @ 50 NONAME ; void TTsTime::SetUtcTime(class TTime const &)
	?GetLocalTime@TTsTime@@QBE?AVTTime@@XZ @ 51 NONAME ; class TTime TTsTime::GetLocalTime(void) const
	?GetUtcTime@TTsTime@@QBEABVTTime@@XZ @ 52 NONAME ; class TTime const & TTsTime::GetUtcTime(void) const
	??0TScheduleEntryInfo2@@QAE@ABV0@@Z @ 53 NONAME ; TScheduleEntryInfo2::TScheduleEntryInfo2(class TScheduleEntryInfo2 const &)
	??0TScheduleEntryInfo2@@QAE@ABVTTsTime@@W4TIntervalType@@HVTTimeIntervalMinutes@@@Z @ 54 NONAME ; TScheduleEntryInfo2::TScheduleEntryInfo2(class TTsTime const &, enum TIntervalType, int, class TTimeIntervalMinutes)
	??0TScheduleEntryInfo2@@QAE@XZ @ 55 NONAME ; TScheduleEntryInfo2::TScheduleEntryInfo2(void)
	??0TScheduleState2@@QAE@ABV0@@Z @ 56 NONAME ; TScheduleState2::TScheduleState2(class TScheduleState2 const &)
	??0TScheduleState2@@QAE@ABV?$TBuf@$0IA@@@ABVTTsTime@@HH@Z @ 57 NONAME ; TScheduleState2::TScheduleState2(class TBuf<128> const &, class TTsTime const &, int, int)
	??0TScheduleState2@@QAE@XZ @ 58 NONAME ; TScheduleState2::TScheduleState2(void)
	??4TScheduleState2@@QAEAAV0@ABV0@@Z @ 59 NONAME ; class TScheduleState2 & TScheduleState2::operator=(class TScheduleState2 const &)
	?CreatePersistentSchedule@RScheduler@@QAEHAAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTScheduleEntryInfo2@@@@@Z @ 60 NONAME ; int RScheduler::CreatePersistentSchedule(class TSchedulerItemRef &, class CArrayFixFlat<class TScheduleEntryInfo2> const &)
	?CreatePersistentSchedule@RScheduler@@QAEHAAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTsTime@@@Z @ 61 NONAME ; int RScheduler::CreatePersistentSchedule(class TSchedulerItemRef &, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTsTime const &)
	?DueTime@TScheduleState2@@QBEABVTTsTime@@XZ @ 62 NONAME ; class TTsTime const & TScheduleState2::DueTime(void) const
	?EditSchedule@RScheduler@@QAEHHABV?$CArrayFixFlat@VTScheduleEntryInfo2@@@@@Z @ 63 NONAME ; int RScheduler::EditSchedule(int, class CArrayFixFlat<class TScheduleEntryInfo2> const &)
	?EditSchedule@RScheduler@@QAEHHABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTsTime@@@Z @ 64 NONAME ; int RScheduler::EditSchedule(int, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTsTime const &)
	?Enabled@TScheduleState2@@QBEHXZ @ 65 NONAME ; int TScheduleState2::Enabled(void) const
	?GetScheduleL@RScheduler@@QAEHHAAVTScheduleState2@@AAV?$CArrayFixFlat@VTScheduleEntryInfo2@@@@AAV?$CArrayFixFlat@VTTaskInfo@@@@AAVTTsTime@@@Z @ 66 NONAME ; int RScheduler::GetScheduleL(int, class TScheduleState2 &, class CArrayFixFlat<class TScheduleEntryInfo2> &, class CArrayFixFlat<class TTaskInfo> &, class TTsTime &)
	?GetScheduleL@RScheduler@@QAEHHAAVTScheduleState2@@AAV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@AAVTTsTime@@AAV?$CArrayFixFlat@VTTaskInfo@@@@@Z @ 67 NONAME ; int RScheduler::GetScheduleL(int, class TScheduleState2 &, class CArrayFixFlat<class TTaskSchedulerCondition> &, class TTsTime &, class CArrayFixFlat<class TTaskInfo> &)
	?GetTaskInfoL@RScheduler@@QAEHHAAVTTaskInfo@@AAVTPtr16@@AAVTSchedulerItemRef@@AAVTTsTime@@@Z @ 68 NONAME ; int RScheduler::GetTaskInfoL(int, class TTaskInfo &, class TPtr16 &, class TSchedulerItemRef &, class TTsTime &)
	?Interval@TScheduleEntryInfo2@@QBEHXZ @ 69 NONAME ; int TScheduleEntryInfo2::Interval(void) const
	?IntervalType@TScheduleEntryInfo2@@QBE?AW4TIntervalType@@XZ @ 70 NONAME ; enum TIntervalType TScheduleEntryInfo2::IntervalType(void) const
	?Name@TScheduleState2@@QBEABV?$TBuf@$0IA@@@XZ @ 71 NONAME ; class TBuf<128> const & TScheduleState2::Name(void) const
	?Persists@TScheduleState2@@QBEHXZ @ 72 NONAME ; int TScheduleState2::Persists(void) const
	?ScheduleTask@RScheduler@@QAEHAAVTTaskInfo@@AAVHBufC16@@AAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTScheduleEntryInfo2@@@@@Z @ 73 NONAME ; int RScheduler::ScheduleTask(class TTaskInfo &, class HBufC16 &, class TSchedulerItemRef &, class CArrayFixFlat<class TScheduleEntryInfo2> const &)
	?ScheduleTask@RScheduler@@QAEHAAVTTaskInfo@@AAVHBufC16@@AAVTSchedulerItemRef@@ABV?$CArrayFixFlat@VTTaskSchedulerCondition@@@@ABVTTsTime@@@Z @ 74 NONAME ; int RScheduler::ScheduleTask(class TTaskInfo &, class HBufC16 &, class TSchedulerItemRef &, class CArrayFixFlat<class TTaskSchedulerCondition> const &, class TTsTime const &)
	?SetDueTime@TScheduleState2@@QAEXABVTTsTime@@@Z @ 75 NONAME ; void TScheduleState2::SetDueTime(class TTsTime const &)
	?SetEnabled@TScheduleState2@@QAEXH@Z @ 76 NONAME ; void TScheduleState2::SetEnabled(int)
	?SetInterval@TScheduleEntryInfo2@@QAEXH@Z @ 77 NONAME ; void TScheduleEntryInfo2::SetInterval(int)
	?SetIntervalType@TScheduleEntryInfo2@@QAEXW4TIntervalType@@@Z @ 78 NONAME ; void TScheduleEntryInfo2::SetIntervalType(enum TIntervalType)
	?SetName@TScheduleState2@@QAEXABV?$TBuf@$0IA@@@@Z @ 79 NONAME ; void TScheduleState2::SetName(class TBuf<128> const &)
	?SetPersists@TScheduleState2@@QAEXH@Z @ 80 NONAME ; void TScheduleState2::SetPersists(int)
	?SetStartTime@TScheduleEntryInfo2@@QAEXABVTTsTime@@@Z @ 81 NONAME ; void TScheduleEntryInfo2::SetStartTime(class TTsTime const &)
	?SetValidityPeriod@TScheduleEntryInfo2@@QAEXVTTimeIntervalMinutes@@@Z @ 82 NONAME ; void TScheduleEntryInfo2::SetValidityPeriod(class TTimeIntervalMinutes)
	?StartTime@TScheduleEntryInfo2@@QBEABVTTsTime@@XZ @ 83 NONAME ; class TTsTime const & TScheduleEntryInfo2::StartTime(void) const
	?ValidityPeriod@TScheduleEntryInfo2@@QBE?AVTTimeIntervalMinutes@@XZ @ 84 NONAME ; class TTimeIntervalMinutes TScheduleEntryInfo2::ValidityPeriod(void) const
	??4TTsTime@@QAEAAV0@ABV0@@Z @ 85 NONAME ; class TTsTime & TTsTime::operator=(class TTsTime const &)
	??4TScheduleEntryInfo2@@QAEAAV0@ABV0@@Z @ 86 NONAME ; class TScheduleEntryInfo2 & TScheduleEntryInfo2::operator=(class TScheduleEntryInfo2 const &)
	??0TTsTime@@QAE@ABV0@@Z @ 87 NONAME ; TTsTime::TTsTime(class TTsTime const &)

