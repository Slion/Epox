// Copyright (c) 2002-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//




RESOURCE ARRAY r_error_res_bt_sdp_errors_1
	{
	items=
		{
        SINGLE_ERROR { text = r_sdpparserinvalidsizefortype; },
        SINGLE_ERROR { text = r_sdpparserinvalidsizeforparentlist; },
        SINGLE_ERROR { text = r_sdpbadattributeid; }
        };
    }

RESOURCE ARRAY r_error_res_bt_sdp_errors_2
	{
	items=
		{
        SINGLE_ERROR { text = r_sdpalreadybound; },
        SINGLE_ERROR { text = r_sdppeererror; },
        SINGLE_ERROR { text = r_sdpclientnotconnected; },
        SINGLE_ERROR { text = r_sdpunsupportedversion; },
        SINGLE_ERROR { text = r_sdpbadrecordhandle; },
        SINGLE_ERROR { text = r_sdpbadcontinuationstate; },
        SINGLE_ERROR { text = r_sdpserverrejectedrequest; },
         SINGLE_ERROR { text = r_sdpbadrequestbufferlength; },
        SINGLE_ERROR { text = r_sdpbadresultbufferlength; },
        SINGLE_ERROR { text = r_sdpbaduuidlength; },
        SINGLE_ERROR { text = r_sdpbadresultdata; },
        SINGLE_ERROR { text = r_sdpdatabasefull; }
        };
    }

RESOURCE ARRAY r_error_res_bt_esk_errors
	{
	items=
		{
        SINGLE_ERROR { text = r_bteskerror; }
        };
    }


RESOURCE ARRAY r_error_res_bt_sock_errors_1
	{
	items=
		{
        SINGLE_ERROR { text = r_badaddress; },
        SINGLE_ERROR { text = r_sapunexpectedevent; },
        SINGLE_ERROR { text = r_badpacketreceived; },
        SINGLE_ERROR { text = r_l2capbadresponse; },
        SINGLE_ERROR { text = r_hciconnectfailed; },
        SINGLE_ERROR { text = r_hcilinkdisconnection; },
        SINGLE_ERROR { text = r_sapnotconnected; },
        SINGLE_ERROR { text = r_configbadparams; },
        SINGLE_ERROR { text = r_configrejected; },
        SINGLE_ERROR { text = r_configunknownoptions; },
        SINGLE_ERROR { text = r_l2peerdisconnected; },
        SINGLE_ERROR { text = r_l2capaccessrequestdenied; },
        SINGLE_ERROR { text = r_l2caprequesttimeout; },
        SINGLE_ERROR { text = r_l2peerrejectedcommand; },
        SINGLE_ERROR { text = r_hostresnametoolong; }
        };
    }

RESOURCE ARRAY r_error_res_bt_sock_errors_2
	{
	items=
		{
        SINGLE_ERROR { text = r_error_res_eof; },
        SINGLE_ERROR { text = r_error_res_eof; }
        };
    }

RESOURCE ARRAY r_error_res_bt_sock_errors_3
	{
	items=
		{
        SINGLE_ERROR { text = r_rfcommsapunexpectedevent; },
        SINGLE_ERROR { text = r_rfcommalreadybound; },
        SINGLE_ERROR { text = r_rfcommbadaddress; },
        SINGLE_ERROR { text = r_rfcommmtusize; },
        SINGLE_ERROR { text = r_rfcommframeresponsetimeout; },
        SINGLE_ERROR { text = r_rfcommmuxremotedisconnect; },
        SINGLE_ERROR { text = r_rfcommnotbound; },
        SINGLE_ERROR { text = r_rfcommparameternegotiationfailure; },
        SINGLE_ERROR { text = r_rfcommnotlistening; }
        };
    }


RESOURCE TBUF r_sdpparserinvalidsizefortype	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpparserinvalidsizeforparentlist	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadattributeid	 { buf="BT ERROR"; }

RESOURCE TBUF r_sdpalreadybound	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdppeererror	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpclientnotconnected	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpunsupportedversion	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadrecordhandle	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadcontinuationstate	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpserverrejectedrequest	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadrequestbufferlength	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadresultbufferlength	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbaduuidlength	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpbadresultdata	 { buf="BT ERROR"; }
RESOURCE TBUF r_sdpdatabasefull	 { buf="BT ERROR"; }

RESOURCE TBUF r_bteskerror	 { buf="BT ERROR"; }

RESOURCE TBUF r_badaddress	 { buf="BT ERROR"; }
RESOURCE TBUF r_sapunexpectedevent	 { buf="BT ERROR"; }
RESOURCE TBUF r_badpacketreceived	 { buf="BT ERROR"; }
RESOURCE TBUF r_l2capbadresponse	 { buf="BT ERROR"; }
RESOURCE TBUF r_hciconnectfailed	 { buf="BT ERROR"; }
RESOURCE TBUF r_hcilinkdisconnection	 { buf="BT ERROR"; }
RESOURCE TBUF r_sapnotconnected	 { buf="BT ERROR"; }
RESOURCE TBUF r_configbadparams	 { buf="BT ERROR"; }
RESOURCE TBUF r_configrejected	 { buf="BT ERROR"; }
RESOURCE TBUF r_configunknownoptions	 { buf="BT ERROR"; }
RESOURCE TBUF r_l2peerdisconnected	 { buf="BT ERROR"; }
RESOURCE TBUF r_l2capaccessrequestdenied	 { buf="BT ERROR"; }
RESOURCE TBUF r_l2caprequesttimeout	 { buf="BT ERROR"; }
RESOURCE TBUF r_l2peerrejectedcommand	 { buf="BT ERROR"; }
RESOURCE TBUF r_hostresnametoolong	 { buf="BT ERROR"; }

RESOURCE TBUF r_rfcommsapunexpectedevent	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommalreadybound	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommbadaddress	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommmtusize	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommframeresponsetimeout	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommmuxremotedisconnect	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommnotbound	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommparameternegotiationfailure	 { buf="BT ERROR"; }
RESOURCE TBUF r_rfcommnotlistening	 { buf="BT ERROR"; }

// End of File
