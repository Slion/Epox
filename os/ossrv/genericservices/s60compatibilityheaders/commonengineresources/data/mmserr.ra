// Copyright (c) 2002-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//



RESOURCE ARRAY r_error_res_mms_error
	{
	items=
		{
		SINGLE_ERROR
			{		//     KMmsGeneralError // -11000
			text = r_mms_commom_error; 
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoWAPAccessPoint // -11001
			flags = ETextResolverBlankErrorFlag;
			},
		SINGLE_ERROR
			{		//     KMmsErrorUrisDontMatch // -11002
			text = r_KMmsErrorUrisDontMatch;
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoIAP1 // -11003
			flags=ETextResolverBlankErrorFlag;
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoIAP2 // -11004
			flags=ETextResolverBlankErrorFlag;
			},
		SINGLE_ERROR
			{		//     KMmsErrorAP1Invalid // -11005
			text = r_KMmsErrorAP1Invalid;
			},
		SINGLE_ERROR
			{		//     KMmsErrorAP2Invalid // -11006
			text = r_KMmsErrorAP2Invalid;
			},
		SINGLE_ERROR
			{		//     KMmsErrorMessageTooBig // -11007
			text = r_KMmsErrorMessageTooBig;
			},
		SINGLE_ERROR
			{		//     KMmsErrorUnknownMessageType // -11008
			text = r_mms_commom_error;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorDiskSpaceLow // -11009
			flags=ETextResolverBlankErrorFlag;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusUnspecified // -11010
			text = r_KMmsErrorStatusUnspecified;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusServiceDenied // -11011
			text = r_KMmsErrorStatusServiceDenied;
			flags=ETextResolverBlankErrorFlag;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusMessageFormatCorrupt // -11012
			text = r_KMmsErrorStatusMessageFormatCorrupt;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusMessageAddressUnresolved // -11013
			text = r_KMmsErrorStatusMessageAddressUnresolved;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusMessageNotFound // -11014
			text = r_KMmsErrorStatusMessageNotFound;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusNetworkProblem // -11015
			text = r_KMmsErrorStatusNetworkProblem;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusContentNotAccepted // -11016
			text = r_KMmsErrorStatusContentNotAccepted;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorStatusUnsupportedMessage // -11017
			text = r_KMmsErrorStatusContentNotAccepted;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorHTTPConfiguration // -11018
			text = r_KMmsErrorHTTPConfiguration;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorHTTPNotFound // -11019
			text = r_KMmsErrorHTTPNotFound;
			},	
		SINGLE_ERROR
			{		//     KMmsErrorHTTPServerDown // -11020
			text = r_KMmsErrorHTTPServerDown;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorWapStack  // -11021
			text = r_mms_commom_error;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorSessionAlreadyOpen // -11022
			text = r_mms_commom_error;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorSessionNotOpen // -11023
			text = r_mms_commom_error;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorBearerSuspended // -11024
			text = r_KMmsErrorNetwork;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorTimeout // -11025
			text = r_KMmsErrorNetwork;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorSuspendTimeout // -11026
			text = r_KMmsErrorNetwork;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorUnknownRespFromGw // -11027
			text = r_KMmsErrorNetwork;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorTransferCancelled // -11028
			text = r_KMmsErrorTransferCancelled;
			},
		SINGLE_ERROR
			{		//     KMmsErrorBufferEmpty // -11029
			flags=ETextResolverBlankErrorFlag;
			},	     
		SINGLE_ERROR
			{		//     KMmsErrorConnectionAlreadyActive // -11030
			text = r_error_res_port_alr_loaned; // from GPRSErr.RA, general Close existing connections text
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoWapAp1 // -11031
			text = r_KMmsErrorHTTPConfiguration; 
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoURI1 // -11032
			text = r_KMmsErrorHTTPConfiguration;
			},
		SINGLE_ERROR
			{		//     KMmsErrorNoURI2 // -11033
			text = r_KMmsErrorHTTPConfiguration; 
			},
		SINGLE_ERROR
			{		//     KMmsErrorNotHomeNetwork // -11034
			text = r_err_sms_check_oper_s; // from SMSErr.ra
			},
		SINGLE_ERROR
			{		//     KMmsErrorInvalidSettings // -11035
			text = r_KMmsErrorHTTPConfiguration; 
			},
		SINGLE_ERROR
			{		//     KMmsErrorEMRUExceeded // -11036
			flags=ETextResolverBlankErrorFlag;
			},
		SINGLE_ERROR
			{		//     KMmsErrorCouldNotConnect // -11037
			text=r_error_res_socket_host_unreach;
			},
		SINGLE_ERROR
			{		//     KMmsErrorRemoveDRM
			flags = ETextResolverBlankErrorFlag;  // -11038
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusReplyChargingLimitationsNotMet
			text = r_mms_commom_error;  // -11039
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusReplyChargingRequestNotAccepted
			text = r_mms_commom_error;  // -11040
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusReplyChargingForwardingDenied
			text = r_mms_commom_error;  // -11041
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusReplyChargingNotSupported
			text = r_mms_commom_error;  // -11042
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusContentUnsupported
			text = r_qtn_err_mms_not_supported;  // -11043
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusTransientAddressUnresolved
			text = r_KMmsErrorNetwork;  // -11044
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusTransientMessageNotFound
			text = r_KMmsErrorHTTPNotFound;  // -11045
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusPermanentFailure
			text = r_mms_commom_error;  // -11046
			},
		SINGLE_ERROR
			{		//     KMmsErrorStatusTransientFailure
			text = r_mms_commom_error;  // -11047
			},
		SINGLE_ERROR
			{		//     KMmsErrorOfflineMode
			flags = ETextResolverBlankErrorFlag;  // -11048
			},
		SINGLE_ERROR
			{		//     KMmsErrorHTTPClientError
			text = r_KMmsErrorStatusContentNotAccepted;  // -11049
			}
		};
	}



RESOURCE TBUF r_mms_commom_error              { buf = qtn_err_mms_common; }   
RESOURCE TBUF r_KMmsErrorUrisDontMatch        { buf = qtn_err_mms_uri_not_same; } //  MMS_ERROR_BASE - 2,
RESOURCE TBUF r_KMmsErrorAP1Invalid           { buf = qtn_err_mms_ap1_invalid; } //  MMS_ERROR_BASE - 5,
RESOURCE TBUF r_KMmsErrorAP2Invalid           { buf = qtn_err_mms_ap2_invalid; } //  MMS_ERROR_BASE - 6,
RESOURCE TBUF r_KMmsErrorMessageTooBig        { buf = qtn_err_mms_msg_big_n_snd; } //  MMS_ERROR_BASE - 7,
RESOURCE TBUF r_KMmsErrorStatusUnspecified    { buf = qtn_err_mms_msg_not_acpt_c; } //  MMS_ERROR_BASE - 10,
RESOURCE TBUF r_KMmsErrorStatusServiceDenied  { buf = "MMS ERROR (hidden)"; } //  MMS_ERROR_BASE - 11,
RESOURCE TBUF r_KMmsErrorStatusMessageFormatCorrupt     { buf = qtn_err_mms_msg_not_acpt_mmsc; } //  MMS_ERROR_BASE - 12,
RESOURCE TBUF r_KMmsErrorStatusMessageAddressUnresolved { buf = qtn_err_mms_msg_add_invalid; } //  MMS_ERROR_BASE - 13,
RESOURCE TBUF r_KMmsErrorStatusMessageNotFound          { buf = qtn_err_mms_msg_not_found; } //  MMS_ERROR_BASE - 14,
RESOURCE TBUF r_KMmsErrorStatusNetworkProblem           { buf = qtn_err_mms_ntwrk_e_msg_n_snd; } //  MMS_ERROR_BASE - 15,
RESOURCE TBUF r_KMmsErrorStatusContentNotAccepted       { buf = qtn_err_mms_msg_not_acpt_mmsc; } //  MMS_ERROR_BASE - 16,
RESOURCE TBUF r_KMmsErrorHTTPConfiguration    { buf = qtn_err_mms_conf_err_ap_stng; } //  MMS_ERROR_BASE - 18, // 1XX, 3XX
RESOURCE TBUF r_KMmsErrorHTTPNotFound         { buf = qtn_err_mms_msg_not_found; } //  MMS_ERROR_BASE - 19, // 4XX
RESOURCE TBUF r_KMmsErrorHTTPServerDown       { buf = qtn_err_mms_mmsc_not_respnd; } //  MMS_ERROR_BASE - 20, // 5XX
RESOURCE TBUF r_KMmsErrorNetwork              { buf = qtn_err_mms_netwrk_error; } //  MMS_ERROR_BASE - 24,
RESOURCE TBUF r_KMmsErrorTransferCancelled    { buf = qtn_err_mms_user_cancel_oper; } //  MMS_ERROR_BASE - 28      

// End of File    
