/*
* Copyright (c) 2009 Nokia Corporation and/or its subsidiary(-ies).
* All rights reserved.
* This component and the accompanying materials are made available
* under the terms of "Eclipse Public License v1.0"
* which accompanies this distribution, and is available
* at the URL "http://www.eclipse.org/legal/epl-v10.html".
*
* Initial Contributors:
* Nokia Corporation - initial contribution.
*
* Contributors:
*
* Description: 
*
*/



/* config.h.  Generated by configure.  */
/* config.h.in.  Generated from configure.in by autoheader.  */

/* Directory for installing the binaries */
#ifdef __SYMBIAN32__
#define DBUS_BINDIR "c:/sys/bin"
#else
#define DBUS_BINDIR "/usr/local/bin"
#endif

/* Build test code */
// NOTE that DBUS_BUILD_TESTS are set on in .mmp files, when compiling rtest code into S60
/* #undef DBUS_BUILD_TESTS */

/* Build X11-dependent code */
/* #undef DBUS_BUILD_X11 */

/* whether -export-dynamic was passed to libtool */
/* #undef DBUS_BUILT_R_DYNAMIC */

#ifdef __SYMBIAN32__
/* Dont use dnotify on Linux */
// #undef DBUS_BUS_ENABLE_DNOTIFY_ON_LINUX 1
#else
/* Use dnotify on Linux */
#define DBUS_BUS_ENABLE_DNOTIFY_ON_LINUX 1
#endif

/* Use kqueue */
/* #undef DBUS_BUS_ENABLE_KQUEUE */

#ifdef __SYMBIAN32__
/* Symbian does not have directory to check for console ownerhip */
// #undef DBUS_CONSOLE_AUTH_DIR "/var/run/console/"
#else
/* Directory to check for console ownerhip */
#define DBUS_CONSOLE_AUTH_DIR "/var/run/console/"
#endif

#ifdef __SYMBIAN32__
/* Symbian does not have directory to check for console ownerhip */
// #undef DBUS_CONSOLE_OWNER_FILE ""
#else
/* File to check for console ownerhip */
#define DBUS_CONSOLE_OWNER_FILE ""
#endif

#ifdef __SYMBIAN32__
/* Directory for installing the DBUS daemon */
#define DBUS_DAEMONDIR "c:/sys/bin"
#else
/* Directory for installing the DBUS daemon */
#define DBUS_DAEMONDIR "/usr/local/bin"
#endif

#ifdef __SYMBIAN32__
/* Directory for installing DBUS data files */
#define DBUS_DATADIR "c:\\data\\dbus"
#else
/* Directory for installing DBUS data files */
#define DBUS_DATADIR "/usr/local/share"
#endif

/* Disable assertion checking */
#define DBUS_DISABLE_ASSERT 1

/* Disable public API sanity checking */
/* #undef DBUS_DISABLE_CHECKS */

#ifdef __SYMBIAN32__
/* Support a verbose mode */
// For debug mode on
#ifdef _DEBUG
/* #undef DBUS_ENABLE_VERBOSE_MODE */
#define DBUS_ENABLE_VERBOSE_MODE 1
#endif
#else
/* Support a verbose mode */
/* #undef DBUS_ENABLE_VERBOSE_MODE */
#endif

/* Defined if gcov is enabled to force a rebuild due to config.h changing */
/* #undef DBUS_GCOV_ENABLED */

/* Some atomic integer implementation present */
#ifdef __SYMBIAN32__
#undef DBUS_HAVE_ATOMIC_INT
#else
#define DBUS_HAVE_ATOMIC_INT 1


        #if (defined(__i386__) || defined(__x86_64__))
        # define DBUS_HAVE_ATOMIC_INT 1
        #endif
#endif


/* Defined if we have gcc 3.3 and thus the new gcov format */
/* #undef DBUS_HAVE_GCC33_GCOV */

/* Where per-session bus puts its sockets */
#ifdef __SYMBIAN32__
#define DBUS_SESSION_SOCKET_DIR "c:/data/dbus"
#else
#define DBUS_SESSION_SOCKET_DIR "/tmp"
#endif

/* The default D-Bus address of the system bus */
#ifdef __SYMBIAN32__
// dont, change this if you don't change system config file too
//#define DBUS_SYSTEM_BUS_DEFAULT_ADDRESS "tcp:host=localhost,port=12434"

#define DBUS_SYMBIAN_SESSION_BUS_DEFAULT_ADDRESS "tcp:host=localhost,port=12434"

// In dbus.internals.h
// #define DBUS_SESSION_BUS_DEFAULT_ADDRESS	"autolaunch:"
// If it does not work, try next
//#define DBUS_SESSION_BUS_DEFAULT_ADDRESS "tcp:host=localhost,port=65001"
#else
#define DBUS_SYSTEM_BUS_DEFAULT_ADDRESS "unix:path=/usr/local/var/run/dbus/system_bus_socket"
#endif

/* The name of the socket the system bus listens on by default */
#ifdef __SYMBIAN32__
#define DBUS_SYSTEM_SOCKET "c:/data/dbus/system_bus_socket"
#else
#define DBUS_SYSTEM_SOCKET "/usr/local/var/run/dbus/system_bus_socket"
#endif

/* Where to put test sockets */
#ifdef __SYMBIAN32__
#define DBUS_TEST_SOCKET_DIR "c:/data/dbus"
#else
#define DBUS_TEST_SOCKET_DIR "/tmp"
#endif

#ifdef __SYMBIAN32__
#define DBUS_LOCK_FILE "c:\\data\\dbus\\dbus_lock"
#endif

/* User for running the system BUS daemon */
#define DBUS_USER "messagebus"

/* Use atomic integer implementation for 486 */
#ifdef __SYMBIAN32__
#undef DBUS_USE_ATOMIC_INT_486
#else
#define DBUS_USE_ATOMIC_INT_486 1


              #if (defined(__i386__) || defined(__x86_64__))
              # define DBUS_USE_ATOMIC_INT_486 1
              #endif
#endif


/* A 'va_copy' style function */
#define DBUS_VA_COPY va_copy

/* 'va_lists' cannot be copies as values */
/* #undef DBUS_VA_COPY_AS_ARRAY */

/* The name of the gettext domain */
#define GETTEXT_PACKAGE "dbus-1"

/* Disable GLib assertion macros */
#define G_DISABLE_ASSERT 1

/* Disable GLib public API sanity checking */
/* #undef G_DISABLE_CHECKS */

/* Have abstract socket namespace */
/* #undef HAVE_ABSTRACT_SOCKETS */
#define HAVE_ABSTRACT_SOCKETS 1

#ifdef __SYMBIAN32__
/* Define to 1 if you have the `backtrace' function. */
// #undef HAVE_BACKTRACE
#else
/* Define to 1 if you have the `backtrace' function. */
#define HAVE_BACKTRACE 1
#endif

#ifdef __SYMBIAN32__
/* Have cmsgcred structure */
// Note that Open C has cmsgcred but it seems, that sendmsg-function does not send struct msghdr right
// try MSG_WAITALL in receivemsg to get message in one piece
/* #undef HAVE_CMSGCRED */
#else
/* Have cmsgcred structure */
/* #undef HAVE_CMSGCRED */
#endif

/* Have console owner file */
/* #undef HAVE_CONSOLE_OWNER_FILE */

/* Have the ddfd member of DIR */
/* #undef HAVE_DDFD */

/* Have dirfd function */
#define HAVE_DIRFD 1

/* Define to 1 if you have the <dlfcn.h> header file. */
#define HAVE_DLFCN_H 1

/* Define to 1 if you have the <errno.h> header file. */
#define HAVE_ERRNO_H 1

/* Define to 1 if you have the <execinfo.h> header file. */
#define HAVE_EXECINFO_H 1

/* Define to 1 if you have the <expat.h> header file. */
/* #undef HAVE_EXPAT_H */

/* Define to 1 if you have the `fpathconf' function. */
#define HAVE_FPATHCONF 1

#ifdef __SYMBIAN32__
/* Define to 1 if you have the `getgrouplist' function. */
//#undef HAVE_GETGROUPLIST
#else
/* Define to 1 if you have the `getgrouplist' function. */
#define HAVE_GETGROUPLIST 1
#endif

/* Define to 1 if you have the `getpeereid' function. */
/* #undef HAVE_GETPEEREID */

/* Define to 1 if you have the `getpeerucred' function. */
/* #undef HAVE_GETPEERUCRED */

/* Have GNU-style varargs macros */
#define HAVE_GNUC_VARARGS 1

/* Define to 1 if you have the <inttypes.h> header file. */
#define HAVE_INTTYPES_H 1

/* Have ISO C99 varargs macros */
#define HAVE_ISO_VARARGS 1

/* Define to 1 if you have the `nsl' library (-lnsl). */
/* #undef HAVE_LIBNSL */

/* Define to 1 if you have the `socket' library (-lsocket). */
/* #undef HAVE_LIBSOCKET */

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the `nanosleep' function. */
#define HAVE_NANOSLEEP 1

/* Have non-POSIX function getpwnam_r */
/* #undef HAVE_NONPOSIX_GETPWNAM_R */

#ifdef __SYMBIAN32__
/* Define to 1 if you have the `poll' function. */
//#undef HAVE_POLL
#else
/* Define to 1 if you have the `poll' function. */
#define HAVE_POLL 1
#endif

/* Have POSIX function getpwnam_r */
#define HAVE_POSIX_GETPWNAM_R 1

/* SELinux support */
/* #undef HAVE_SELINUX */

/* Define to 1 if you have the `setenv' function. */
#define HAVE_SETENV 1

/* Define to 1 if you have the `socketpair' function. */
/* #undef HAVE_SOCKETPAIR */

/* Have socklen_t type */
#define HAVE_SOCKLEN_T 1

/* Define to 1 if you have the <stdint.h> header file. */
#define HAVE_STDINT_H 1

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the <strings.h> header file. */
#define HAVE_STRINGS_H 1

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

#ifdef __SYMBIAN32__
/* Define to 1 if you have the <sys/syslimits.h> header file. */
#define HAVE_SYS_SYSLIMITS_H 1
#else
/* Define to 1 if you have the <sys/syslimits.h> header file. */
/* #undef HAVE_SYS_SYSLIMITS_H */
#endif

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/uio.h> header file. */
#define HAVE_SYS_UIO_H 1

/* Define to 1 if you have the <unistd.h> header file. */
#define HAVE_UNISTD_H 1

/* Define to 1 if you have the `unsetenv' function. */
#define HAVE_UNSETENV 1


/* Define to 1 if you have the `usleep' function. */
#define HAVE_USLEEP 1

/* Define to 1 if you have the `vasprintf' function. */
#define HAVE_VASPRINTF 1

/* Define to 1 if you have the `vsnprintf' function. */
#define HAVE_VSNPRINTF 1

/* Define to 1 if you have the `writev' function. */
#define HAVE_WRITEV 1

/* Name of package */
#define PACKAGE "dbus"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT ""

/* Define to the full name of this package. */
#define PACKAGE_NAME ""

/* Define to the full name and version of this package. */
#define PACKAGE_STRING ""

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME ""

/* Define to the version of this package. */
#define PACKAGE_VERSION ""

/* The size of a `char', as computed by sizeof. */
#define SIZEOF_CHAR 1

/* The size of a `int', as computed by sizeof. */
#define SIZEOF_INT 4

/* The size of a `long', as computed by sizeof. */
#define SIZEOF_LONG 4

/* The size of a `long long', as computed by sizeof. */
#define SIZEOF_LONG_LONG 8

/* The size of a `short', as computed by sizeof. */
#define SIZEOF_SHORT 2

/* The size of a `void *', as computed by sizeof. */
#define SIZEOF_VOID_P 4

/* The size of a `__int64', as computed by sizeof. */
#define SIZEOF___INT64 0

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Full path to the daemon in the builddir */
#define TEST_BUS_BINARY "/sys/bin/dbus-daemon"

/* Full path to test file test/test-exit in builddir */
#ifndef __SYMBIAN32__
#define TEST_EXIT_BINARY "/sys/bin/test-exit"
#else

#ifdef __WINSCW__
#define TEST_EXIT_BINARY "z:\\sys\\bin\\test_exit.exe"
#else
#define TEST_EXIT_BINARY "c:\\sys\\bin\\test_exit.exe"
#endif

#endif



/* Full path to test file test/test-segfault in builddir */
#ifndef __SYMBIAN32__
#define TEST_SEGFAULT_BINARY "/sys/bin/test-segfault"
#else

#ifdef __WINSCW__
#define TEST_SEGFAULT_BINARY "z:\\sys\\bin\\test_segfault.exe"
#else
#define TEST_SEGFAULT_BINARY "c:\\sys\\bin\\test_segfault.exe"
#endif

#endif


/* Full path to test file test/test-service in builddir */
#define TEST_SERVICE_BINARY "/sys/bin/test-service"

/* Full path to test file test/data/valid-service-files in builddir */
#define TEST_SERVICE_DIR "c:/data/dbus/test/data/valid-service-files"

/* Full path to test file test/test-shell-service in builddir */
#define TEST_SHELL_SERVICE_BINARY "/sys/bin/test-shell-service"

/* Full path to test file test/test-sleep-forever in builddir */
#define TEST_SLEEP_FOREVER_BINARY "/sys/bin/test-sleep-forever"

/* Version number of package */
#define VERSION "1.0.2"

/* Define to 1 if your processor stores words with the most significant byte
   first (like Motorola and SPARC, unlike Intel and VAX). */
/* #undef WORDS_BIGENDIAN */


			/* Use the compiler-provided endianness defines to allow universal compiling. */
			#if defined(__BIG_ENDIAN__)
			#define WORDS_BIGENDIAN 1
			#endif


/* Define to 1 if the X Window System is missing or not being used. */
#define X_DISPLAY_MISSING 1

/* define settings, that come from makefile and can't be used in Symbian */
#ifdef __SYMBIAN32__
//DBUS_MACHINE_UUID_FILE=\""$(localstatedir)/lib/dbus/machine-id"\"
#define DBUS_MACHINE_UUID_FILE	"c:/data/dbus/machine-id"
#define DBUS_SYSTEM_CONFIG_FILE "c:/data/dbus/system.conf"
#define DBUS_SESSION_CONFIG_FILE "c:/data/dbus/session.conf"
#define DBUS_CREDENTIALS_DOTDIR ".dbus-keyrings"
#define DBUS_ORIGINAL_CREDENTIALS_FILE "/data/dbus/.dbus-keyrings/localhost"
#define DBUS_WORK_CREDENTIALS_FILE ".dbus-keyrings/localhost"
#define DAEMON_NAME "dbus-daemon"
#define DBUS_TEST_DIR "/data/dbus/test/data"
#endif
