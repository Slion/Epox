/** @file ../include/grp.h
@internalComponent
*/

/** @fn  endgrent(void)

Refer to  getgrent() for the documentation


 

@publishedAll
@externallyDefinedApi
*/

/** @fn  *getgrent(void)

Note: This description also covers the following functions -
 getgrnam()  getgrnam_r()  getgrgid()  getgrgid_r()  setgroups()  setgrent()  endgrent() 
 


@code

@endcode
  These APIs are build supported but not available functionally. Symbian OS 
does not support multiple users and groups.


 

@publishedAll
@externallyDefinedApi
*/

/** @fn  *getgrgid(gid_t gid)
@param gid
Refer to  getgrent() for the documentation

@return The functions getgrent, getgrnam, and getgrgid, return a pointer to a group structure on success or NULL if the entry is not found or if an error occurs. If an error does occur, errno will be set. The functions getgrnam_r and getgrgid_r return 0 if no error occurred, or an error number to indicate failure. It is not an error if a matching entry is not found. (Thus, if result is set to NULL and the return value is 0, no matching entry exists.) 
The setgrent return the value 1 if successful, otherwise the value 0 is returned. The endgrent API has no return value. 

 

@publishedAll
@externallyDefinedApi
*/

/** @fn  *getgrnam(const char *)

Refer to  getgrent() for the documentation


 

@publishedAll
@externallyDefinedApi
*/

/** @fn  setgrent(void)

Refer to  getgrent() for the documentation


 

@publishedAll
@externallyDefinedApi
*/

/** @fn  getgrgid_r(gid_t gid, struct group *grp, char *, size_t, struct group **result)
@param gid
@param grp
@param result
Refer to  getgrent() for the documentation


 

@publishedAll
@externallyDefinedApi
*/

/** @fn  getgrnam_r(const char *name, struct group *grp, char *, size_t, struct group **result)
@param name
@param grp
@param result

Refer to  getgrent() for the documentation


 

@publishedAll
@externallyDefinedApi
*/

/** @struct group 

Includes the following members,

@publishedAll
@externallyDefinedApi
*/

/** @var group::gr_name
group name
*/

/** @var group::gr_passwd
group password
*/

/** @var group::gr_gid
group id
*/

/** @var group::gr_mem
group members
*/

/** @def _PATH_GROUP
@publishedAll
@released
*/
