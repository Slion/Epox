/** @file   ../include/sys/endian.h
@internalComponent	   
*/
 
/** @fn be16dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn be32dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/

/** @fn be64dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn le16dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn le32dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn le64dec(const void *pp)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn be16enc(void *pp, uint16_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/

/** @fn be32enc(void *pp, uint32_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @fn be64enc(void *pp, uint64_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/

/** @fn le16enc(void *pp, uint16_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/

/** @fn le32enc(void *pp, uint32_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/

/** @fn le64enc(void *pp, uint64_t u)

Alignment-agnostic encode or decode bytestream to or from little or big endian.

@publishedAll
@released
*/


/** @def bswap16(x)

General byte order swapping functions.

@publishedAll
@externallyDefinedApi
*/


/** @def bswap32(x)

General byte order swapping functions.

@publishedAll
@externallyDefinedApi
*/


/**@def	bswap64(x)

General byte order swapping functions.

@publishedAll
@externallyDefinedApi
*/

/** @def	htobe16(x)

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/


/** @def	htobe32(x)

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	htobe64(x)

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/


/** @def	htole16(x)	

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/


/** @def	htole32(x)	

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	htole64(x)

Macro returning a integer in the system's native byte order converted to big endian byte order.  
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	be16toh(x)

Macro returning a big endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	be32toh(x)

Macro returning a big endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	be64toh(x)

Macro returning a big endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on big endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	le16toh(x)

Macro returning a little endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on little endian systems.

@publishedAll
@externallyDefinedApi
*/

/** @def	le32toh(x)

Macro returning a little endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on little endian systems.
	
@publishedAll
@externallyDefinedApi
*/

/** @def	le64toh(x)

Macro returning a little endian byte ordered integer converted to the system's native byte order.	
The return value will be the same as the argument on little endian systems.

@publishedAll
@externallyDefinedApi
*/


