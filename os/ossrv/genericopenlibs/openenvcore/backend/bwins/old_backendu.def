EXPORTS
	??0CLocalSystemInterface@@QAE@XZ @ 1 NONAME ; CLocalSystemInterface::CLocalSystemInterface(void)
	??0TUSockAddr@@QAE@PBXI@Z @ 2 NONAME ; TUSockAddr::TUSockAddr(void const *, unsigned int)
	??1CLocalSystemInterface@@UAE@XZ @ 3 NONAME ; CLocalSystemInterface::~CLocalSystemInterface(void)
	?Alloc@CLocalSystemInterface@@QAEPAXI@Z @ 4 NONAME ; void * CLocalSystemInterface::Alloc(unsigned int)
	?AllocTLD@CLocalSystemInterface@@QAEPAXH@Z @ 5 NONAME ; void * CLocalSystemInterface::AllocTLD(int)
	?Backend@@YAPAVCLocalSystemInterface@@XZ @ 6 NONAME ; class CLocalSystemInterface * Backend(void)
	?CheckOrigins@CLocalSystemInterface@@QAEXAAPAPAGAAH@Z @ 7 NONAME ; void CLocalSystemInterface::CheckOrigins(unsigned short * * &, int &)
	?Close@CFileDescBase@@QAEHXZ @ 8 NONAME ; int CFileDescBase::Close(void)
	?Free@CLocalSystemInterface@@QAEXPAX@Z @ 9 NONAME ; void CLocalSystemInterface::Free(void *)
	?Get@TUSockAddr@@QAEXPAXPAK@Z @ 10 NONAME ; void TUSockAddr::Get(void *, unsigned long *)
	?GetDesc@CLocalSystemInterface@@QAEPAVCFileDescBase@@H@Z @ 11 NONAME ; class CFileDescBase * CLocalSystemInterface::GetDesc(int)
	?MapError@@YAHHAAH@Z @ 12 NONAME ; int MapError(int, int &)
	?ReAlloc@CLocalSystemInterface@@QAEPAXPAXI@Z @ 13 NONAME ; void * CLocalSystemInterface::ReAlloc(void *, unsigned int)
	?ResolvePath@CLocalSystemInterface@@QAEHAAVTParse@@PBGPAVTDes16@@@Z @ 14 NONAME ; int CLocalSystemInterface::ResolvePath(class TParse &, unsigned short const *, class TDes16 *)
	?Truncate@CLocalSystemInterface@@QAEHH_JAAH@Z @ 15 NONAME ; int CLocalSystemInterface::Truncate(int, long long, int &)
	?_ReadSysSplFile@@YAHPBGPADHAAHAAVRSessionBase@@@Z @ 16 NONAME ; int _ReadSysSplFileL(unsigned short const *, char *, int, int &, class RSessionBase &)
	?_SystemSpecialFileBasedFilePath@@YA?AW4TSpecialFileType@@PBGAAHAAVRSessionBase@@@Z @ 17 NONAME ; enum TSpecialFileType _SystemSpecialFileBasedFilePath(unsigned short const *, int &, class RSessionBase &)
	BackendAlloc @ 18 NONAME
	BackendAllocTLD @ 19 NONAME
	BackendFree @ 20 NONAME
	BackendReAlloc @ 21 NONAME
	_accept_r @ 22 NONAME
	_bind_r @ 23 NONAME
	_chdir_r @ 24 NONAME
	_chmod_r @ 25 NONAME
	_chown @ 26 NONAME
	_close_r @ 27 NONAME
	_connect_r @ 28 NONAME
	_dup2_r @ 29 NONAME
	_dup_r @ 30 NONAME
	_exit_r @ 31 NONAME
	_fchdir_r @ 32 NONAME
	_fchmod_r @ 33 NONAME
	_fcntl_r @ 34 NONAME
	_fstat_r @ 35 NONAME
	_fsync_r @ 36 NONAME
	_getcwd_r @ 37 NONAME
	_getegid @ 38 NONAME
	_geteuid @ 39 NONAME
	_getgid @ 40 NONAME
	_getgroups @ 41 NONAME
	_gethostbyaddr_r @ 42 NONAME
	_gethostbyname_r @ 43 NONAME
	_gethostname_r @ 44 NONAME
	_getpeername_r @ 45 NONAME
	_getpgid @ 46 NONAME
	_getpgrp @ 47 NONAME
	_getppid @ 48 NONAME
	_getprotobyname_r @ 49 NONAME
	_getprotobynumber_r @ 50 NONAME
	_getsockname_r @ 51 NONAME
	_getsockopt_r @ 52 NONAME
	_getuid @ 53 NONAME
	_iconv_close_r @ 54 NONAME
	_iconv_open_r @ 55 NONAME
	_iconv_r @ 56 NONAME
	_ioctl_r @ 57 NONAME
	_lchown @ 58 NONAME
	_link_r @ 59 NONAME
	_listen_r @ 60 NONAME
	_lseek_r @ 61 NONAME
	_mkdir_r @ 62 NONAME
	_mkfifo_r @ 63 NONAME
	_open_r @ 64 NONAME
	_opendir_r @ 65 NONAME
	_pclose_r @ 66 NONAME
	_pipe_r @ 67 NONAME
	_posix_spawn_r @ 68 NONAME
	_read_r @ 69 NONAME
	_readdir_r @ 70 NONAME
	_recvfrom_r @ 71 NONAME
	_rename_r @ 72 NONAME
	_rmdir_r @ 73 NONAME
	_select_r @ 74 NONAME
	_semctl_r @ 75 NONAME
	_semget_r @ 76 NONAME
	_semop_r @ 77 NONAME
	_sendto_r @ 78 NONAME
	_setegid @ 79 NONAME
	_seteuid @ 80 NONAME
	_setgid @ 81 NONAME
	_setpgid @ 82 NONAME
	_setpgrp @ 83 NONAME
	_setregid @ 84 NONAME
	_setreuid @ 85 NONAME
	_setsid @ 86 NONAME
	_setsockopt_r @ 87 NONAME
	_setuid @ 88 NONAME
	_shmat_r @ 89 NONAME
	_shmctl_r @ 90 NONAME
	_shmdt_r @ 91 NONAME
	_shmget_r @ 92 NONAME
	_shutdown_r @ 93 NONAME
	_socket_r @ 94 NONAME
	_stat_r @ 95 NONAME
	_umask @ 96 NONAME
	_unlink_r @ 97 NONAME
	_utime_r @ 98 NONAME
	_wait_r @ 99 NONAME
	_waitpid_r @ 100 NONAME
	_wchdir_r @ 101 NONAME
	_wchmod_r @ 102 NONAME
	_wgetcwd_r @ 103 NONAME
	_wmkdir_r @ 104 NONAME
	_wopen_r @ 105 NONAME
	_wpopen3_r @ 106 NONAME
	_wpopen_r @ 107 NONAME
	_wreaddir_r @ 108 NONAME
	_wrealpath_r @ 109 NONAME
	_wrename_r @ 110 NONAME
	_wrewinddir_r @ 111 NONAME
	_write_r @ 112 NONAME
	_wrmdir_r @ 113 NONAME
	_wstat_r @ 114 NONAME
	_wsystem_r @ 115 NONAME
	_wunlink_r @ 116 NONAME
	_msgctl_r @ 117 NONAME
	_msgget_r @ 118 NONAME
	_msgrcv_r @ 119 NONAME
	_msgsnd_r @ 120 NONAME
	_mmap_r @ 121 NONAME
	_mprotect_r @ 122 NONAME
	_msync_r @ 123 NONAME
	_munmap_r @ 124 NONAME
	?FileSession@CLocalSystemInterface@@QAEAAVRFs@@XZ @ 125 NONAME ; class RFs & CLocalSystemInterface::FileSession(void)
	?Heap@CLocalSystemInterface@@QAEPAVRHeap@@XZ @ 126 NONAME ; class RHeap * CLocalSystemInterface::Heap(void)
	_wclosedir_r @ 127 NONAME
	_setecho_r @ 128 NONAME
	_freeaddrinfo_r @ 129 NONAME
	_getaddrinfo_r @ 130 NONAME
	_setdefaultif_r @ 131 NONAME
	_alarm_r @ 132 NONAME ABSENT
	_bsd_signal_r @ 133 NONAME ABSENT
	_kill_r @ 134 NONAME ABSENT
	_raise_r @ 135 NONAME ABSENT
	_sigaction_r @ 136 NONAME ABSENT
	_sigaddset_r @ 137 NONAME ABSENT
	_sigandset_r @ 138 NONAME ABSENT
	_sigdelset_r @ 139 NONAME ABSENT
	_sigemptyset_r @ 140 NONAME ABSENT
	_sigfillset_r @ 141 NONAME ABSENT
	_sighold_r @ 142 NONAME ABSENT
	_sigignore_r @ 143 NONAME ABSENT
	_sigisemptyset_r @ 144 NONAME ABSENT
	_sigismember_r @ 145 NONAME ABSENT
	_signal_r @ 146 NONAME ABSENT
	_sigorset_r @ 147 NONAME ABSENT
	_sigpause_r @ 148 NONAME ABSENT
	_sigpending_r @ 149 NONAME ABSENT
	_sigprocmask_r @ 150 NONAME ABSENT
	_sigqueue_r @ 151 NONAME ABSENT
	_sigrelse_r @ 152 NONAME ABSENT
	_sigset_r @ 153 NONAME ABSENT
	_sigtimedwait_r @ 154 NONAME ABSENT
	_sigwait_r @ 155 NONAME ABSENT
	_sigwaitinfo_r @ 156 NONAME ABSENT
	?InitSignalHandler@CLocalSystemInterface@@QAEXXZ @ 157 NONAME ABSENT ; void CLocalSystemInterface::InitSignalHandler(void)
	?AddTimer@CLocalSystemInterface@@QAEHABH@Z @ 158 NONAME ABSENT ; int CLocalSystemInterface::AddTimer(int const &)
	?DeleteTimer@CLocalSystemInterface@@QAEHABH@Z @ 159 NONAME ABSENT ; int CLocalSystemInterface::DeleteTimer(int const &)
	?IncrementOverrun@CLocalSystemInterface@@QAEHABH@Z @ 160 NONAME ABSENT ; int CLocalSystemInterface::IncrementOverrun(int const &)
	?Overrun@CLocalSystemInterface@@QAEHABH@Z @ 161 NONAME ABSENT ; int CLocalSystemInterface::Overrun(int const &)
	?ResetOverrun@CLocalSystemInterface@@QAEHABH@Z @ 162 NONAME ABSENT ; int CLocalSystemInterface::ResetOverrun(int const &)
	?RaiseTimerSignal@CLocalSystemInterface@@QAEHHH@Z @ 163 NONAME ABSENT ; int CLocalSystemInterface::RaiseTimerSignal(int, int)
	?FindTimer@CLocalSystemInterface@@AAEHABH@Z @ 164 NONAME ABSENT ; int CLocalSystemInterface::FindTimer(int const &)
	?_eselect_r@@YAHPAHHPAUfd_set@@11PAUtimeval@@HPAVTRequestStatus@@@Z @ 165 NONAME ; int _eselect_r(int *, int, struct fd_set *, struct fd_set *, struct fd_set *, struct timeval *, int, class TRequestStatus *)
	?_cancelaselect_r@@YAHPAHPAVTRequestStatus@@@Z @ 166 NONAME ; int _cancelaselect_r(int *, class TRequestStatus *)
	?_aselect_r@@YAHPAHHPAUfd_set@@11PAUtimeval@@PAVTRequestStatus@@@Z @ 167 NONAME ; int _aselect_r(int *, int, struct fd_set *, struct fd_set *, struct fd_set *, struct timeval *, class TRequestStatus *)
	_sigenable_r @ 168 NONAME ABSENT
	_memcpy_r @ 169 NONAME
	_memmove_r @ 170 NONAME
	_lstat_r @ 171 NONAME
	_unsetdefaultif_r @ 172 NONAME
	?TZServer@CLocalSystemInterface@@QAEAAVRTz@@AAH@Z @ 173 NONAME ; class RTz & CLocalSystemInterface::TZServer(int &)
