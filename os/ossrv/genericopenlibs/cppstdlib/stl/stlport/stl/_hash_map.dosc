
/** @file _hash_map.h
@internalComponent
*/

/** @class std::hash_map
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/


/** @typedef std::hash_map::key_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::data_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::mapped_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::value_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::_Ht
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::hasher
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::key_equal
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::size_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::difference_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::const_pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::const_reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::iterator
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::const_iterator
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::allocator_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @fn std::hash_map::hash_funct() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::key_eq() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::get_allocator() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::hash_map()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::hash_map(size_type __n)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@return -
*/

/** @fn std::hash_map::hash_map(size_type __n, const hasher &__hf)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@param __hf -
@return -
*/

/** @fn std::hash_map::hash_map(size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@param __hf -
@param __eql -
@param __a -
@return -
*/

/** @fn std::hash_map::hash_map(__move_source< _Self > src)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param src -
@return -
*/

/** @fn std::hash_map::hash_map(_InputIterator __f, _InputIterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_map::hash_map(_InputIterator __f, _InputIterator __l, size_type __n)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@return -
*/

/** @fn std::hash_map::hash_map(_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@param __hf -
@return -
*/

/** @fn std::hash_map::hash_map(_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@param __hf -
@param __eql -
@param __a -
@return -
*/

/** @fn std::hash_map::size() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::max_size() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::empty() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::swap(_Self &__hs)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __hs -
@return -
*/

/** @fn std::hash_map::begin()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::end()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::begin() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::end() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::insert(const value_type &__obj)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __obj -
@return -
*/

/** @fn std::hash_map::insert(_InputIterator __f, _InputIterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_map::insert_noresize(const value_type &__obj)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __obj -
@return -
*/

/** @fn std::hash_map::find(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::find(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::operator[](const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::count(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::equal_range(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::equal_range(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::erase(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_map::erase(iterator __it)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __it -
@return -
*/

/** @fn std::hash_map::erase(iterator __f, iterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_map::clear()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::resize(size_type __hint)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __hint -
@return -
*/

/** @fn std::hash_map::bucket_count() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::max_bucket_count() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_map::elems_in_bucket(size_type __n) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@return -
*/

/** @typedef std::hash_map::_Self
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_map::_HashMapTraits
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @var std::hash_map::_M_ht
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @class std::hash_multimap
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/


/** @typedef std::hash_multimap::key_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::data_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::mapped_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::value_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::_Ht
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::hasher
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::key_equal
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::size_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::difference_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::const_pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::const_reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::iterator
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::const_iterator
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::allocator_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @fn std::hash_multimap::hash_funct() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::key_eq() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::get_allocator() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::hash_multimap()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::hash_multimap(size_type __n)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(size_type __n, const hasher &__hf)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@param __hf -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@param __hf -
@param __eql -
@param __a -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(__move_source< _Self > src)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param src -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(_InputIterator __f, _InputIterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(_InputIterator __f, _InputIterator __l, size_type __n)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@param __hf -
@return -
*/

/** @fn std::hash_multimap::hash_multimap(_InputIterator __f, _InputIterator __l, size_type __n, const hasher &__hf, const key_equal &__eql, const allocator_type &__a=allocator_type())
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@param __n -
@param __hf -
@param __eql -
@param __a -
@return -
*/

/** @fn std::hash_multimap::size() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::max_size() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::empty() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::swap(_Self &__hs)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __hs -
@return -
*/

/** @fn std::hash_multimap::begin()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::end()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::begin() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::end() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::insert(const value_type &__obj)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __obj -
@return -
*/

/** @fn std::hash_multimap::insert(_InputIterator __f, _InputIterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_multimap::insert_noresize(const value_type &__obj)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __obj -
@return -
*/

/** @fn std::hash_multimap::find(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::find(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::count(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::equal_range(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::equal_range(const _KT &__key) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::erase(const _KT &__key)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __key -
@return -
*/

/** @fn std::hash_multimap::erase(iterator __it)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __it -
@return -
*/

/** @fn std::hash_multimap::erase(iterator __f, iterator __l)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __f -
@param __l -
@return -
*/

/** @fn std::hash_multimap::clear()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::resize(size_type __hint)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __hint -
@return -
*/

/** @fn std::hash_multimap::bucket_count() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::max_bucket_count() const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::hash_multimap::elems_in_bucket(size_type __n) const
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
@param __n -
@return -
*/

/** @typedef std::hash_multimap::_Self
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @typedef std::hash_multimap::_HashMultimapTraits
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @var std::hash_multimap::_M_ht
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@publishedAll
@externallyDefinedApi
*/

/** @class std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/


/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::container_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::iterator_category
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::value_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::difference_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::insert_iterator(_Container &__x)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __x -
@return -
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::insert_iterator(_Container &__x, typename _Container::iterator)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __x -
@param # -
@return -
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator=(const typename _Container::value_type &__val)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __val -
@return -
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator *()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator++()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator++(int)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param # -
@return -
*/

/** @typedef std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::_Container
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @var std::insert_iterator< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::container
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @class std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/


/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::container_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::iterator_category
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::value_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::difference_type
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::pointer
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::reference
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::insert_iterator(_Container &__x)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __x -
@return -
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::insert_iterator(_Container &__x, typename _Container::iterator)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __x -
@param # -
@return -
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator=(const typename _Container::value_type &__val)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param __val -
@return -
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator *()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator++()
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@return -
*/

/** @fn std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::operator++(int)
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
@param # -
@return -
*/

/** @typedef std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::_Container
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @var std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::container
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @var std::insert_iterator< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >::iter
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @struct std::__move_traits< hash_map< _Key, _Tp, _HashFn, _EqKey, _Alloc > >
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/


/** @struct std::__move_traits< hash_multimap< _Key, _Tp, _HashFn, _EqKey, _Alloc > >
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/


/** @def _STLP_TEMPLATE_HEADER
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @def _STLP_TEMPLATE_CONTAINER
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

/** @def _STLP_TEMPLATE_CONTAINER
For full documentation see: http://www.sgi.com/tech/stl/table_of_contents.html

The Symbian implementation of this API fully supports all STL functionality.

@internalComponent		//Changed from publishedAll
@externallyDefinedApi
*/

