;==========================================================================
;   This is the configuration file for the "win_drive.fxt" filesystem extension for the emulator.
;   See \emulator\wins\win_drive.
;
;   This file shall reside in \epoc32\data\ directory.
;
;==========================================================================

[Drive_T]


[Drive_X]
;--------------------------------------------------------------------------
; The name of the Windows device that can be used by win_drive.fxt extension as the media.
; The device can be "physical", for example HDD partition or removable drive or "image file", when 
; the specifie file will be used as EPOC drive.

; 1. "Physical" media:
;   This key value shall look like: DeviceName=\\.\F:
;   'F:' in this case is the Windows drive letter that will be used. This drive can be removable or 
;   non-removable. 
;   preferable settings:
;     * BytesPerSector=0 or not defined, it is unlikely that Windows drives will use something different
;                        from 512 bytes; '0' means "use windows volume partition information"
;
;     * MediaSizeInSectors=0 or not defined if you wish to use existing partition information for this windows volume.
;       Or it can be the number of sectors, less than the real number of sectors on this windows drive; in this
;       case only a part of the drive will be used. It can't be more than maximal number of sectors on the 
;       specified windows drive - it's impossible to increase the partition size.
;
; 2."Image file" media
;   This key value shall look like: DeviceName=\epoc32\data\media\my_image_file.bin
;   preferable settings:
;     * BytesPerSector=0 or not defined for 512 bps; 1024, 2048 and 4096 bps are also valid, 
;       but if they are supported or not, depends on the appropriate .fsy for this epoc drive.
;
;     * MediaSizeInSectors=0 or not defined only for the case, when the image file already exists.
;       In this case EPOC drive geometry will be calculated depending on the image file size and BytesPerSector value
;       If 'MediaSizeInSectors' value is specified, the image file will be created/expanded/shunk to correspond
;       to this size; its size in bytes will be MediaSizeInSectors*BytesPerSector
;
; Default value: there is no devault value, the device name must be correctly specified

;DeviceName=\\.\F:
;DeviceName=\\.\Z:
DeviceName=\epoc32\data\media\MMCCRD0A1.BIN

;--------------------------------------------------------------------------
; bytes per sector. Valid values are: 0, 512, 1024, 2048, 4096.
; '0' means 'Auto' if the media is a physical volume, its partition info will be used in this case,
;   if the media is the image file, 512 bytes per sector will be used.
; Actually, using anything rather than 512 is not recommended.
;
; Default value:0

;BytesPerSector=0

;--------------------------------------------------------------------------
; This parameter specifies the EPOC media size in sectors. 
;* Value '0' means "Auto". 
;   In this case if the 'DeviceName' parameter specifies the windows physical volume,
;   its partition information will be used. If the 'DeviceName' parameter specifies the image file, this file
;   must exist and its total length will be used to calculate media size in sectors.
;
;* If the value of this key is > 0
;    For physical media it can't be more than maximal number of the sectors on the windows volume;
;    if less, only the beginning of the partition will be used.
;    If "image file" media is used, this image file will be opened/created and its size set to MediaSizeInSectors*BytesPerSector
;
; Default value:0

MediaSizeInSectors=40960


;--------------------------------------------------------------------------
; If this parameter !=0, this EPOC drive ([Drive_*]) will be visible as Read-Only  
;
; Default value:0
;
;ReadOnly = 1;

;--------------------------------------------------------------------------
; You can override media type (TMediaType) for this particular drive.
;
; Default value:0, which means that it won't be overriden by this extension and taken from the original media driver.
;
;MediaTypeOverride=3 ;EMediaHardDisk

;--------------------------------------------------------------------------
; You can override media attributes (TLocalDriveCaps::iMediaAtt) for this particular drive by specify 'AND' and 'OR'. 
; masks that can be applied to the TLocalDriveCaps::iMediaAtt field returned by the original media driver.  
; These values mut be in hex!
;
; Default value for "AND" mask :0xFFFFFFFF
; Default value for "OR"  mask :0x0
;MediaAttOverride_AND=0xFFFFFFFD ; will clear KMediaAttFormattable flag
;MediaAttOverride_OR=0x010 ; will set KMediaAttLockable flag 



;--------------------------------------------------------------------------
; You can override drive attributes (TLocalDriveCaps::iDriveAtt) for this particular drive by specify 'AND' and 'OR'. 
; masks that can be applied to the TLocalDriveCaps::iDriveAtt field returned by the original media driver.  
; These values mut be in hex!
;
; Default value for "AND" mask :0xFFFFFFFF
; Default value for "OR"  mask :0x0
;DriveAttOverride_AND=
;DriveAttOverride_OR=





