//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE	T_mmcsd


START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0001
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0001
//! @SYMAPI			User::LoadLogicalDevice(const TDesC {ref});
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		11/04/2008
//! @SYMTestCaseDesc		Load Logical Device Driver.
//! @SYMTestActions		Load D_MMCSDIF LDD Driver
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	KErrNone
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	LoadDriver		BASE-BSP-MMC-DRIVER-MANUALSocket-0001-001-LoadDriver_command02
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0001

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0002
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0002
//! @SYMAPI			DMMCSocket::CardIsPresent();
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		11/04/2008
//! @SYMTestCaseDesc		Card Is Present Test - Display if an MMC/SD card is present.
//! @SYMTestActions		1. Create RMMCSDTestControllerInterface Handle object.
//!				2. Open the driver connection
//!				3. Ask user to make sure card in is drive
//!				4. Check that a card is present
//!				5. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	A card is present.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDSocket	mmcsdsocket1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-MMC-DRIVER-MANUALSocket-0002-001-DriverOpen_command01
		COMMAND		mmcsdsocket1	NewL			BASE-BSP-MMC-DRIVER-MANUALSocket-0002-001-NewL_command02
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0002-001-PromptUser_command03
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0002-001-CardIsPresent_command04
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdsocket1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0002

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0003
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0003
//! @SYMAPI			DMMCSocket::CardIsPresent();
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Card Is Present Test - Display if an MMC/SD card is present.
//! @SYMTestActions		1. Create RMMCSDTestControllerInterface Handle object.
//!				2. Open the driver connection
//!				3. Ask user to make sure card is not in drive
//!				4. Check that a card is not present
//!				5. Ask user to make sure card is in drive
//!				6. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	A card is not present.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDSocket	mmcsdsocket1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-MMC-DRIVER-MANUALSocket-0003-001-DriverOpen_command01
		COMMAND		mmcsdsocket1	NewL			BASE-BSP-MMC-DRIVER-MANUALSocket-0003-001-NewL_command02
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0003-001-PromptUser_command03
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0003-001-CardIsPresent_command04
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0003-001-PromptUser_command05
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdsocket1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0003

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0004
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0004
//! @SYMAPI			DMMCSocket::CardIsPresent();
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Card Is Present Test - Display if an MMC/SD card is present.
//! @SYMTestActions		1. Create RMMCSDTestControllerInterface Handle object.
//!				2. Open the driver connection
//!				3. Ask user to make sure card is in drive
//!				4. Check that a card is present
//!				5. Ask user to make sure card is not in drive
//!				6. Check that a card is not present
//!				7. Ask user to make sure card is in drive
//!				8. Check that a card is present
//!				9. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	A card is not present.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDSocket	mmcsdsocket1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-DriverOpen_command01
		COMMAND		mmcsdsocket1	NewL			BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-NewL_command02
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-PromptUser_command03
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-CardIsPresent_command04
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-PromptUser_command05
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-CardIsPresent_command06
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-PromptUser_command07
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0004-001-CardIsPresent_command08
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdsocket1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0004

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0005
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0005
//! @SYMAPI			DMMCSocket::CardIsPresent();
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Card Is Present Test - Display if an MMC/SD card is present after reset.
//! @SYMTestActions    		1. Create RMMCSDTestControllerInterface Handle object.
//!				2. Open the driver connection
//!				3. Reset the socket by powering down the stack
//!				4. Ask user to make sure card is in drive
//!				5. Check that a card is present
//!				6. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	A card is present.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDSocket	mmcsdsocket1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-MMC-DRIVER-MANUALSocket-0005-001-DriverOpen_command01
		COMMAND		mmcsdsocket1	NewL			BASE-BSP-MMC-DRIVER-MANUALSocket-0005-001-NewL_command02
		COMMAND		mmcsdsocket1	Reset1
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0005-001-PromptUser_command04
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0005-001-CardIsPresent_command05
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdsocket1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0005

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0006
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0006
//! @SYMAPI			DMMCSocket::CardIsPresent();
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Card Is Present Test - Display if an MMC/SD card is present after double reset.
//! @SYMTestActions    		1. Create RMMCSDTestControllerInterface Handle object.
//!				2. Open the driver connection
//!				3. Reset the socket by powering down the stack
//!				4. Reset the socket and free up allocated resources
//!				5. Ask user to make sure card is in drive
//!				6. Check that a card is present
//!				7. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	A card is present.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDSocket	mmcsdsocket1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-MMC-DRIVER-MANUALSocket-0006-001-DriverOpen_command01
		COMMAND		mmcsdsocket1	NewL			BASE-BSP-MMC-DRIVER-MANUALSocket-0006-001-NewL_command02
		COMMAND		mmcsdsocket1	Reset1
		COMMAND		mmcsdsocket1	Reset2
		COMMAND		mmcsdsocket1	utilityPromptMessage	BASE-BSP-MMC-DRIVER-MANUALSocket-0006-001-PromptUser_command05
		COMMAND		mmcsdsocket1	CardIsPresent		BASE-BSP-MMC-DRIVER-MANUALSocket-0006-001-CardIsPresent_command06
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdsocket1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0006

START_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0007
//! @SYMTestCaseID		BASE-BSP-MMC-DRIVER-MANUALSocket-0007
//! @SYMAPI			FreeLogicalDevice(const TDesC {ref});
//! @SYMAuthor			James Mechen
//! @SYMCreationDate		11/04/2008
//! @SYMTestCaseDesc		Free the Logical Device Driver
//! @SYMTestActions    		Free the D_MMCSDIF LDD Driver
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		high
//! @SYMTestExpectedResults	Displayed Power supply information.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-MMC-SOCKET-DRIVER-MANUAL.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	UnLoadDriver		BASE-BSP-MMC-DRIVER-MANUALSocket-0007-001-UnLoadDriver_command02
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-MMC-DRIVER-MANUALSocket-0007
