//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

LOAD_SUITE	T_mmcsd


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0001
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0001
//! @SYMTestCaseDesc		Load MMC/SD Logical Device Driver
//! @SYMTestPriority		high
//! @SYMTestActions		Load  D_MMCSDIF LDD Driver
//! @SYMTestExpectedResults	KErrNone
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor		Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			User::LoadLogicalDevice(const TDesC {ref});
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	LoadDriver		BASE-BSP-SD-DRIVER-LDDName-CMD0001
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0001


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0002
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0002
//! @SYMTestCaseDesc		Checks whether this PSU is powering a bus containing a locked device,
//!				i.e. one that is recognised and in use by a client
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the power bus locked flag
//!				5. Display the power bus locked counter value
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed the power bus locked counter value (TRUE or FALSE)
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::IsLocked();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	IsLocked		BASE-BSP-SD-DRIVER-IsLocked-CMD002
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0002


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0003
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0003
//! @SYMTestCaseDesc		Checks whether the PSU is off.
//!				The PSU is off when it is in the EPsuOff state
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the Psu State flag
//!				5. Display the PSU State
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed the  PSU State value (TRUE or FALSE)
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::IsOff();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	IsOff			BASE-BSP-SD-DRIVER-IsOff-CMD003
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0003

START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0004
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0004
//! @SYMTestCaseDesc		Gets the maximum current (in microAmps) that the PSU is able to supply
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads maximum current (in microAmps)
//!				5. Display the maximum current that the PSU is able to supply
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed the  maximum current (in microAmps)
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::MaxCurrentInMicroAmps();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	MaxCurrentInMicroAmps	BASE-BSP-SD-DRIVER-MaxCurrentInMicroAmps-CMD004
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0004


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0005
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0005
//! @SYMTestCaseDesc		Resets inactivity and not-locked counts
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Resets inactivity and not-locked counts
//!				5. Display the inactivity and not-locked counter values
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed the  inactivity and not-locked counter values
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor		Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::ResetInactivityTimer();
//!				DPBusPsuBase::iInactivityCount();
//!				DPBusPsuBase::iNotLockedCount();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	ResetInactivityTimer
		COMMAND		mmcsdpsubase1	InactivityCount		BASE-BSP-SD-DRIVER-InactivityCount-CMD005
		COMMAND		mmcsdpsubase1	NotLockedCount		BASE-BSP-SD-DRIVER-NotLockedCount-CMD005
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0005


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0006
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0006
//! @SYMTestCaseDesc		Gets the voltage level, or range of supported voltage levels
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the voltage level, or range of supported voltage levels
//!				5. Display the voltage in OCR format
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed the voltage in OCR format
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::VoltageSupported();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	VoltageSupported	BASE-BSP-SD-DRIVER-VoltageSupported-CMD006
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0006


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0007
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0007
//! @SYMTestCaseDesc		Reads the Bus inactivity counter value
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the Bus inactivity counter.
//!				5. Display the Bus inactivity counter.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed Bus inactivity counter
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor		Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iInactivityCount();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	InactivityCount		BASE-BSP-SD-DRIVER-InactivityCount-CMD007
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0007


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0008
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0008
//! @SYMTestCaseDesc		Reads Bus not locked counter
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the BBus not locked counter.
//!				5. Display the Bus not locked counter.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed Bus not locked counter value
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iInactivityCount();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	NotLockedCount		BASE-BSP-SD-DRIVER-NotLockedCount-CMD008
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0008


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0009
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0009
//! @SYMTestCaseDesc		Reads Bus inactivity timeout period, in seconds, when clients are registered
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the Bus inactivity timeout counter.
//!				5. Display the inactivity timeout counter.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed inactivity timeout counter value
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iInactivityTimeout();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	InactivityTimeout	BASE-BSP-SD-DRIVER-InactivityTimeout-CMD009
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0009


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0010
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0010
//! @SYMTestCaseDesc		Reads Bus not locked timeout period, in seconds, when no clients are registered
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the not locked timeout counter.
//!				5. Display the not locked timeout counter.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed not locked timeout counter value
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iNotLockedTimeout();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	NotLockedTimeout	BASE-BSP-SD-DRIVER-NotLockedTimeout-CMD010
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0010


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0011
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0011
//! @SYMTestCaseDesc		Reads the voltage level, or range of voltages supported .
//!				The voltage level, or range of voltages is reported as a
//!				bit mask in the same format as defined for the OCR register.
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the voltage level in OCR format.
//!				5. Display the voltage level in OCR format.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed voltage level in OCR format
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iVoltageSupported();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	MemVoltageSupported	BASE-BSP-SD-DRIVER-MemVoltageSupported-CMD011
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0011


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0012
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0012
//! @SYMTestCaseDesc		The maximum current (in microAmps) that the PSU is able to supply
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the maximum current (in microAmps).
//!				5. Display the maximum current (in microAmps).
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed maximum current (in microAmps)
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iMaxCurrentInMicroAmps();
	START_TEST_BLOCK	100		T_mmcsd				\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	MemMaxCurrentInMicroAmps	BASE-BSP-SD-DRIVER-MemMaxCurrentInMicroAmps-CMD012
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0012


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0013
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0013
//! @SYMTestCaseDesc		Indicates whether the platform hardware has support for checking whether the voltage level of the
//!				PSU is within its expected voltage limit while turned on
//! @SYMTestPriority		high
//! @SYMTestActions		1. Create  RMMCSDTestControllerInterface Handle object.
//!				2. Load the Driver
//!				3. Open the driver connection
//!				4. Reads the Volt Check Interval.
//!				5. Display the Volt Check Interval.
//!				6. Close the driver connection
//!				7. Destroy the object
//! @SYMTestExpectedResults	Displayed Volt Check Interval value
//! @SYMTestType		CIT
//! @SYMCreationDate		15/07/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			DPBusPsuBase::iVoltCheckInterval();
	START_TEST_BLOCK	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		CREATE_OBJECT	MMCSDPsuBase	mmcsdpsubase1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	DriverOpen		BASE-BSP-SD-DRIVER-StackNumber
		COMMAND		mmcsdpsubase1	NewL			BASE-BSP-SD-DRIVER-SessionWrapperName
		COMMAND		mmcsdpsubase1	VoltCheckInterval	BASE-BSP-SD-DRIVER-VoltCheckInterval-CMD013
		COMMAND		mmcsdsession1	Close
		COMMAND		mmcsdpsubase1	~
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0013


START_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0014
//! @SYMTestCaseID		BASE-BSP-SD-DRIVER-DMMCPsuBase-0014
//! @SYMTestCaseDesc		UnLoad MMC/SD Logical Device Driver.
//! @SYMTestPriority		high
//! @SYMTestActions		Load D_MMCSDIF LDD Driver
//! @SYMTestExpectedResults	KErrNone
//! @SYMTestType		CIT
//! @SYMCreationDate		1/4/2008
//! @SYMAuthor			Saravanakumar
//! @SYMTestStatus		Implemented
//! @SYMAPI			User::FreeLogicalDevice(const TDesC{ref});
	START_TEST_BLOCK 	100		T_mmcsd			\base\mmcsd\BASE-BSP-SD-PSUBASE-DRIVER.ini
		CREATE_OBJECT	MMCSDSession	mmcsdsession1
		COMMAND		mmcsdsession1	NewL
		COMMAND		mmcsdsession1	UnLoadDriver		BASE-BSP-SD-DRIVER-LDDName-CMD0001
		COMMAND		mmcsdsession1	~
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-SD-DRIVER-DMMCPsuBase-0014
