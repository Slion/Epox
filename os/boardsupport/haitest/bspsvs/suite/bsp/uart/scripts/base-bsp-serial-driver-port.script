//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		base-bsp-serial-driver-PORT<port>
//! @SYMScriptTestEnvironment	This test script requires a base port ROM

/////////////////////////////////////////////////////////////////////
// base-bsp-serial-driver-PORT<port>.script
//
//
// Tests elements of the RBusDevComm
// as a means of confidence that the HAI APIs work as expected.
//
// Tests are validated through environment settings found in the file t_serial.ini
//
// The purpose is to provide a regression test suite of publishedPartner APIs for RBusDevComm.
// Negative testing is performed to confirm that correct errors are returned when incorrect parameters are given.
// The tests are fully automated.
/////////////////////////////////////////////////////////////////////

LOAD_SUITE	t_serial


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0001
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0001
//! @SYMAPI			RBusDevComm::RBusDevComm()
//!				RBusDevComm::~RBusDevComm()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Create a RBusDevComm object
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	RBusDevComm created
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0001


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0002
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0002
//! @SYMAPI			RBusDevComm::VersionRequired()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Get version of software
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Get version info
//!				3. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Expected version information should be returned
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new

		COMMAND		busDevComm	VersionRequired		BASE-BSP-SERIAL-DRIVER-PORT<port>-0002

		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0002


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0003
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0003
//! @SYMAPI			RBusDevComm::Open()
//!				RBusDevComm::Close()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Open serial port com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Close the port
//!				4. Destroy the object
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	RBusDevComm opened and closed successfully
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new

		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Close

		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0003


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0004
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0004
//! @SYMAPI			RBusDevComm::QueryReceiveBuffer()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Query the number of bytes waiting in the input buffer.
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Query and validate the receive buffer contents as being empty
//!				4. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	QueryReceiveBuffer should complete with no error and be empty
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND		busDevComm	QueryReceiveBuffer	BASE-BSP-SERIAL-DRIVER-PORT<port>-0004-QueryReceiveBuffer_003

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0004


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0005
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0005
//! @SYMAPI			RBusDevComm::NotifyReceiveDataAvailable(TRequestStatus {ref})
//!				RBusDevComm::NotifyReceiveDataAvailableCancel()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		19/06/2008
//! @SYMTestCaseDesc		Cancel notification of data available
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Request to be notified of data available
//!				5. Cancel the request
//!				4. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	NotifyReceiveDataAvailable should complete with the error KErrCancel (-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK		10		t_serial			\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT		RBusDevComm	busDevComm
		COMMAND			busDevComm	new
		COMMAND			busDevComm	Open				BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND !AsyncError=-3	busDevComm	NotifyReceiveDataAvailable
		COMMAND			busDevComm	NotifyReceiveDataAvailableCancel
		OUTSTANDING

		COMMAND			busDevComm	Close
		COMMAND			busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0005


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006
//! @SYMAPI			RBusDevComm::Config(TDes8 {ref})
//!				TCommConfigV01::TCommConfigV01()
//!				TCommConfigV01::~TCommConfigV01()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Get com<port> configuration and verify default values
//! @SYMTestActions    		1. Create RBusDevComm and TCommConfigV01 object
//!				2. Open serial port com<port>
//!				3. Get config values
//!				4. Verify values
//!				5. Close the port
//!				6. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCommConfigV01 values should have the default startup values
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		CREATE_OBJECT	TCommConfigV01	config
		COMMAND		busDevComm	new
		COMMAND		config		new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Config			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-Config

		COMMAND		config		iDataBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iDataBits
		COMMAND		config		iFifo			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iFifo
		COMMAND		config		iHandshake		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iHandshake
		COMMAND		config		iParity			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iParity
		COMMAND		config		iParityError		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iParityError
		COMMAND		config		iParityErrorChar	BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iParityErrorChar
		COMMAND		config		iRate			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iRate
		COMMAND		config		iSIREnable		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iSIREnable
		COMMAND		config		iSIRSettings		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iSIRSettings
		COMMAND		config		iSpecialRate		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iSpecialRate
		COMMAND		config		iStopBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iStopBits
		COMMAND		config		iTerminator		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iTerminator
		COMMAND		config		iTerminatorCount	BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iTerminatorCount
		COMMAND		config		iXoffChar		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iXoffChar
		COMMAND		config		iXonChar		BASE-BSP-SERIAL-DRIVER-PORT<port>-0006-iXonChar

		COMMAND		busDevComm	Close
		COMMAND		config		~
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0006


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0007
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0007
//! @SYMAPI			RBusDevComm::Caps(TDes8 {ref})
//!				TCommCapsV01::TCommCapsV01()
//!				TCommCapsV01::~TCommCapsV01()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		11/07/2008
//! @SYMTestCaseDesc		Get com<port> V1 capabilities and verify default values
//! @SYMTestActions    		1. Create RBusDevComm and TCommCapsV03 object
//!				2. Open serial port com<port>
//!				3. Get V1 capability values
//!				4. Verify values
//!				5. Close the port
//!				6. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCommCapsV03 values should have the default startup values
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		CREATE_OBJECT	TCommCapsV01	caps
		COMMAND		busDevComm	new
		COMMAND		caps		new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Caps			BASE-BSP-SERIAL-DRIVER-PORT<port>-0007-Caps

		COMMAND		caps		iDataBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iDataBits
		COMMAND		caps		iFifo			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iFifo
		COMMAND		caps		iHandshake		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iHandshake
		COMMAND		caps		iParity			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iParity
		COMMAND		caps		iRate			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iRate
		COMMAND		caps		iSIR			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSIR
		COMMAND		caps		iSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSignals
		COMMAND		caps		iStopBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iStopBits

		COMMAND		busDevComm	Close
		COMMAND		caps		~
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0007


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0008
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0008
//! @SYMAPI			RBusDevComm::Caps(TDes8 {ref})
//!				TCommCapsV02::TCommCapsV02()
//!				TCommCapsV02::~TCommCapsV02()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		11/07/2008
//! @SYMTestCaseDesc		Get com<port> V2 capabilities and verify default values
//! @SYMTestActions    		1. Create RBusDevComm and TCommCapsV03 object
//!				2. Open serial port com<port>
//!				3. Get V2 capability values
//!				4. Verify values
//!				5. Close the port
//!				6. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCommCapsV03 values should have the default startup values
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		CREATE_OBJECT	TCommCapsV02	caps
		COMMAND		busDevComm	new
		COMMAND		caps		new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Caps			BASE-BSP-SERIAL-DRIVER-PORT<port>-0008-Caps

		COMMAND		caps		iDataBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iDataBits
		COMMAND		caps		iFifo			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iFifo
		COMMAND		caps		iHandshake		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iHandshake
		COMMAND		caps		iParity			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iParity
		COMMAND		caps		iRate			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iRate
		COMMAND		caps		iSIR			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSIR
		COMMAND		caps		iSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSignals
		COMMAND		caps		iStopBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iStopBits
		COMMAND		caps		iFlowControlCaps	BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iFlowControlCaps
		COMMAND		caps		iNotificationCaps	BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iNotificationCaps
		COMMAND		caps		iRoleCaps		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iRoleCaps

		COMMAND		busDevComm	Close
		COMMAND		caps		~
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0008


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0009
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0009
//! @SYMAPI			RBusDevComm::Caps(TDes8 {ref})
//!				TCommCapsV03::TCommCapsV03()
//!				TCommCapsV03::~TCommCapsV03()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		11/07/2008
//! @SYMTestCaseDesc		Get com<port> V3 capabilities and verify default values
//! @SYMTestActions    		1. Create RBusDevComm and TCommCapsV03 object
//!				2. Open serial port com<port>
//!				3. Get V3 capability values
//!				4. Verify values
//!				5. Close the port
//!				6. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	TCommCapsV03 values should have the default startup values
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		CREATE_OBJECT	TCommCapsV03	caps
		COMMAND		busDevComm	new
		COMMAND		caps		new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Caps			BASE-BSP-SERIAL-DRIVER-PORT<port>-0009-Caps

		COMMAND		caps		iDataBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iDataBits
		COMMAND		caps		iFifo			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iFifo
		COMMAND		caps		iHandshake		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iHandshake
		COMMAND		caps		iParity			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iParity
		COMMAND		caps		iRate			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iRate
		COMMAND		caps		iSIR			BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSIR
		COMMAND		caps		iSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iSignals
		COMMAND		caps		iStopBits		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iStopBits
		COMMAND		caps		iFlowControlCaps	BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iFlowControlCaps
		COMMAND		caps		iNotificationCaps	BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iNotificationCaps
		COMMAND		caps		iRoleCaps		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iRoleCaps
		COMMAND		caps		iBreakSupported		BASE-BSP-SERIAL-DRIVER-PORT<port>-Caps-iBreakSupported

		COMMAND		busDevComm	Close
		COMMAND		caps		~
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0009


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0010
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0010
//! @SYMAPI			RBusDevComm::ResetBuffers()
//!				RBusDevComm::QueryReceiveBuffer()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Reset the buffers on com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. ResetBuffers and verofy that the buffer is empty
//!				4. Close the port
//!				5. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Buffers should be reset
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND		busDevComm	ResetBuffers
		COMMAND		busDevComm	QueryReceiveBuffer	BASE-BSP-SERIAL-DRIVER-PORT<port>-0010-QueryReceiveBuffer_004

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0010


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0011
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0011
//! @SYMAPI			RBusDevComm::MinTurnaroundTime()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Get minimum turnaround time for com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. MinTurnaroundTime
//!				4. Close the port
//!				5. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	MinTurnaroundTime should have its startup value
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND		busDevComm	MinTurnaroundTime	BASE-BSP-SERIAL-DRIVER-PORT<port>-0011-MinTurnaroundTime

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0011


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0012
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0012
//! @SYMAPI			RBusDevComm::SetMinTurnaroundTime(TUint)
//!				RBusDevComm::MinTurnaroundTime()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Edit the minimum turnaround time for com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and save startup MinTurnaroundTime
//!				3. Set MinTurnaroundTime to a new value and get it to verify it
//!				4. Restore MinTurnaroundTime and Close the port
//!				5. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	MinTurnaroundTime should have set value
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	MinTurnaroundTime	BASE-BSP-SERIAL-DRIVER-PORT<port>-0012-MinTurnaroundTime_001

		COMMAND		busDevComm	SetMinTurnaroundTime	BASE-BSP-SERIAL-DRIVER-PORT<port>-0012-SetMinTurnaroundTime_002
		COMMAND		busDevComm	MinTurnaroundTime	BASE-BSP-SERIAL-DRIVER-PORT<port>-0012-MinTurnaroundTime_003

		COMMAND		busDevComm	SetMinTurnaroundTime
		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0012


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0013
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0013
//! @SYMAPI			RBusDevComm::ReceiveBufferLength()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Get receive buffer length for com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. ReceiveBufferLength
//!				4. Close the port
//!				5. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	ReceiveBufferLength should have its startup value
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND		busDevComm	ReceiveBufferLength	BASE-BSP-SERIAL-DRIVER-PORT<port>-0013-ReceiveBufferLength

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0013


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0014
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0014
//! @SYMAPI			RBusDevComm::ReceiveBufferLength()
//!				RBusDevComm::SetReceiveBufferLength(TInt)
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Edit the receive buffer length for com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and save startup ReceiveBufferLength
//!				3. Set ReceiveBufferLength to a new value and get it to verify it
//!				4. Restore ReceiveBufferLength and Close the port
//!				5. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	ReceiveBufferLength read should be the value set
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	ReceiveBufferLength	BASE-BSP-SERIAL-DRIVER-PORT<port>-0014-ReceiveBufferLength_001

		COMMAND		busDevComm	SetReceiveBufferLength	BASE-BSP-SERIAL-DRIVER-PORT<port>-0014-SetReceiveBufferLength_002
		COMMAND		busDevComm	ReceiveBufferLength	BASE-BSP-SERIAL-DRIVER-PORT<port>-0014-ReceiveBufferLength_003

		COMMAND		busDevComm	SetReceiveBufferLength
		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0014


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0015
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0015
//! @SYMAPI			RBusDevComm::Read(TRequestStatus {ref}, TDesC8 {ref}, TInt)
//!				RBusDevComm::ReadCancel()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Cancel a read operation on com<port> when specifying the length of the buffer
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Cancel a read operation from com port specifying the length of the data
//!				4. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Read operation should fail with error KErrCancel (-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK		10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT		RBusDevComm	busDevComm
		COMMAND			busDevComm	new
		COMMAND			busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND	!AsyncError=-3	busDevComm	Read			BASE-BSP-SERIAL-DRIVER-PORT<port>-0015-Read_002
		COMMAND			busDevComm	ReadCancel
		OUTSTANDING
		COMMAND			busDevComm	ResetBuffers

		COMMAND			busDevComm	Close
		COMMAND			busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0015


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0016
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0016
//! @SYMAPI			RBusDevComm::Read(TRequestStatus {ref}, TDesC8 {ref})
//!				RBusDevComm::ReadCancel()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Cancel a read operation on com<port> when not specifying the length of the buffer
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Cancel a read operation from com port specifying the length of the data
//!				4. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Read operation should fail with error KErrCancel (-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK		10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT		RBusDevComm	busDevComm
		COMMAND			busDevComm	new
		COMMAND			busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND	!AsyncError=-3	busDevComm	Read			BASE-BSP-SERIAL-DRIVER-PORT<port>-0016-Read_002
		COMMAND			busDevComm	ReadCancel
		OUTSTANDING
		COMMAND			busDevComm	ResetBuffers

		COMMAND			busDevComm	Close
		COMMAND			busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0016


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0017
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0017
//! @SYMAPI			RBusDevComm::ReadOneOrMore(TRequestStatus {ref}, TDesC8 {ref})
//!				RBusDevComm::ReadCancel()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		27/03/2008
//! @SYMTestCaseDesc		Cancel a read one or more operation on com<port>
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port>
//!				3. Cancel a read operation from com port
//!				4. Destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Read operation should fail with error KErrCancel (-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK		10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT		RBusDevComm	busDevComm
		COMMAND			busDevComm	new
		COMMAND			busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open

		COMMAND	!AsyncError=-3	busDevComm	ReadOneOrMore		BASE-BSP-SERIAL-DRIVER-PORT<port>-0017-Read_002
		COMMAND			busDevComm	ReadCancel
		OUTSTANDING
		COMMAND			busDevComm	ResetBuffers

		COMMAND			busDevComm	Close
		COMMAND			busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0017


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0023
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0023
//! @SYMAPI			RBusDevComm::Signals()
//!				RBusDevComm::SetSignals(TUint, TUint)
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Clear all signals on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Save the current signals
//!				4. Clear all signals and verify that they are cleared
//!				5. Restore signals
//!				6. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Signals should be NULL
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY		1000000

		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0023-Signals_002

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0023-SetSignals_003
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0023-Signals_004

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0023-SetSignals_005

		DELAY		1500000

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0023


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0024
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0024
//! @SYMAPI			RBusDevComm::Signals()
//!				RBusDevComm::SetSignals(TUint, TUint)
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Set all signals high on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Save the current signals
//!				4. Set all signals and verify that they are set
//!				5. Restore signals
//!				6. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Signals should be HIGH
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY		1000000

		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0024-Signals_002

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0024-SetSignals_003
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0024-Signals_004

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0024-SetSignals_005

		DELAY		1500000

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0024


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0025
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0025
//! @SYMAPI			RBusDevComm::SetSignals(TUint, TUint)
//!				RBusDevComm::NotifySignalChange(TRequestStatus {ref}, TUint {ref}, TUint)
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Get notification of a signal change on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Save the current signals
//!				4. Set all signals and wait for notification
//!				5. Restore signals
//!				6. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Notification should complete with no errors
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY		1000000

		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0025-Signals_002

		COMMAND		busDevComm	NotifySignalChange
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0025-SetSignals_004
		OUTSTANDING

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0025-SetSignals_005

		DELAY		1500000

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0025


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0026
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0026
//! @SYMAPI			RBusDevComm::SetSignals(TUint, TUint)
//!				RBusDevComm::NotifySignalChange(TRequestStatus {ref}, TUint {ref}, TUint)
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Get notification of specified signal changes on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Save the current signals
//!				4. Set all signals and wait for notification using a mask
//!				5. Restore signals
//!				6. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Notification should complete with no errors
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY		1000000

		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0026-Signals_002
		COMMAND		busDevComm	NotifySignalChange	BASE-BSP-SERIAL-DRIVER-PORT<port>-0026-NotifySignalChange_003
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0026-SetSignals_004
		OUTSTANDING
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0026-SetSignals_005

		DELAY		1500000

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0026


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0027
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0027
//! @SYMAPI			RBusDevComm::NotifySignalChange(TRequestStatus {ref}, TUint {ref}, TUint)
//!				RBusDevComm::NotifySignalChangeCancel()
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Cancel notification of specified signal changes on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Cancel a notification for signal change
//!				4. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Notification should complete with error KErrCancel (-3)
//! @SYMTestType		CIT
	START_TEST_BLOCK		10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT		RBusDevComm	busDevComm
		COMMAND			busDevComm	new
		COMMAND			busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND			busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY			1000000

		COMMAND			busDevComm	NotifySignalChange
		OUTSTANDING
		COMMAND !AsyncError=-3	busDevComm	NotifySignalChange	BASE-BSP-SERIAL-DRIVER-PORT<port>-0027-NotifySignalChange_003
		COMMAND			busDevComm	NotifySignalChangeCancel
		OUTSTANDING

		DELAY			1500000

		COMMAND			busDevComm	Close
		COMMAND			busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0027


START_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028
//! @SYMTestCaseID		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028
//! @SYMAPI			RBusDevComm::Signals()
//!				RBusDevComm::SetSignals(TUint, TUint)
//! @SYMAuthor			Louis Henry Nayegon
//! @SYMCreationDate		25/06/2008
//! @SYMTestCaseDesc		Test individual signals on com<port> when echo server is closed
//! @SYMTestActions    		1. Create RBusDevComm object
//!				2. Open serial port com<port> and close echoserver for 2 seconds
//!				3. Save the current signals
//!				4. Set and verify individual signals 0x0010, 0x0020, 0x0040, 0x0080
//!				4. Clear all signals
//!				5. Restore signals
//!				6. Wait for echo server to open and destroy the objects
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Signals should be HIGH
//! @SYMTestType		CIT
	START_TEST_BLOCK	10		t_serial		\base\serial\base-bsp-serial-driver-PORT<port>.ini
		CREATE_OBJECT	RBusDevComm	busDevComm
		COMMAND		busDevComm	new
		COMMAND		busDevComm	Open			BASE-BSP-SERIAL-DRIVER-PORT<port>-Open
		COMMAND		busDevComm	Write			BASE-BSP-SERIAL-DRIVER-ECHO-Write-2SecondDisconnect
		OUTSTANDING
		DELAY		1000000

		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-Signals_002

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-SetSignals_003
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-Signals_004
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-SetSignals_005
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-Signals_006
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-SetSignals_007
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-Signals_008
		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-SetSignals_009
		COMMAND		busDevComm	Signals			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-Signals_010

		COMMAND		busDevComm	SetSignals		BASE-BSP-SERIAL-DRIVER-PORT<port>-0028-SetSignals_011

		DELAY		1500000

		COMMAND		busDevComm	Close
		COMMAND		busDevComm	~
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-SERIAL-DRIVER-PORT<port>-0028
