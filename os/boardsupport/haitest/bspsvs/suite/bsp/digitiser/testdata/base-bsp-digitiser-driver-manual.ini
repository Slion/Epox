[include]
file1                    =\base\digitiser\t_digitiser.ini

[digitiser1]
name                    =digitiser1

[console1]
name                    =console1

[BASE-BSP-DIGITISER-DRIVER-DISPLAYMODE_MANUAL]
halEValue               =EDisplayMode
value                   ={displayMode,value}
expected                ={displayMode,expected}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-ReadKey]
timeout			=0
timeoutExpected         =FALSE
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,keyDown}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=TRUE

eventType2		={rawEvent,keyUp}
eventOccurance2		=EEventOccuranceOnce
dataDraw2               =FALSE
dataVerify2		=TRUE

keyCode1		={generic,keyCode}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-WriteFeedback]
text           ={confirm,instructions}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-Init]
consoleName		=Console_Window

[BASE-BSP-DIGITISER-DRIVER-MANUAL-ControlOn]
consoleControl          =+M +I +R

[BASE-BSP-DIGITISER-DRIVER-MANUAL-RAWMODEOFF]
consoleControl          =-R

[BASE-BSP-DIGITISER-DRIVER-MANUAL-ControlOff]
consoleControl          =-I -M 

[BASE-BSP-DIGITISER-DRIVER-MANUAL-PenClickState]
halEValue               =EPenClickState
value                   ={halDataOn,value}
expected                ={halDataOn,expected}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-EPenState_Setup]
halEValue               =EPenState
value                   ={halDataOn,value}
expected                ={halDataOn,expected}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0001-Instructions]
text			={randomPixels,instructions}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0001-WriteFeedback]
text			={randomPixels,pixelfeedback}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0001-Read]
timeout			=0
synchronous             =FALSE
black                   ={colour,black}
white                   ={colour,white}
errorMargin             ={generic,errorMargin}

exitRectangle_minX      ={exitBox,minX}
exitRectangle_minY      ={exitBox,minY}
exitRectangle_maxX      ={exitBox,maxX}
exitRectangle_maxY      ={exitBox,maxY}

tests                   ={randomPixels,pointsTotal}

eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataDraw2               =FALSE
dataVerify2		=FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataDraw3               =TRUE
dataVerify3		=FALSE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0002-Instructions]
text			={randomLine,instructions}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0002-WriteFeedback]
text			={randomLine,pixelfeedback}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0002-Read]
timeout			=0
synchronous             =FALSE
black                   ={colour,black}
white                   ={colour,white}
errorMargin             ={generic,errorMargin}

exitRectangle_minX      ={exitBox,minX}
exitRectangle_minY      ={exitBox,minY}
exitRectangle_maxX      ={exitBox,maxX}
exitRectangle_maxY      ={exitBox,maxY}

tests                   ={randomLine,pointsTotal}

eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =TRUE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceOneOrMore
dataDraw2               =TRUE
dataVerify2		=FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataDraw3               =TRUE
dataVerify3		=FALSE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0003-Instructions]
text			={preDrawnDots,instructions}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0003-Read]
timeout			=0
synchronous             =FALSE
black                   ={colour,black}
white                   ={colour,white}
errorMargin             ={generic,errorMargin}

exitRectangle_minX      ={exitBox,minX}
exitRectangle_minY      ={exitBox,minY}
exitRectangle_maxX      ={exitBox,maxX}
exitRectangle_maxY      ={exitBox,maxY}

tests                   ={preDrawnDots,pointsTotal}
point1_x  		={preDrawnDots,1_x}
point1_y		={preDrawnDots,1_y}
point2_x		={preDrawnDots,2_x}
point2_y		={preDrawnDots,2_y}
point3_x		={preDrawnDots,3_x}
point3_y		={preDrawnDots,3_y}

eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=TRUE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataDraw2               =FALSE
dataVerify2		=TRUE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataDraw3               =TRUE
dataVerify3		=TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0004-Instructions]
text			={preDrawnRect,instructions}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0004-Read]

rect1_minX  		={preDrawnRect,tl_x}
rect1_minY		={preDrawnRect,tl_y}
rect1_maxX 		={preDrawnRect,br_x}
rect1_maxY 		={preDrawnRect,br_y}

timeout			=0
synchronous             =FALSE
black                   ={colour,black}
white                   ={colour,white}
errorMargin             ={generic,errorMargin}

exitRectangle_minX      ={exitBox,minX}
exitRectangle_minY      ={exitBox,minY}
exitRectangle_maxX      ={exitBox,maxX}
exitRectangle_maxY      ={exitBox,maxY}

tests                   ={preDrawnRect,eventTotal}

eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =TRUE
dataVerify1		=TRUE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceOneOrMore
dataDraw2               =TRUE
dataVerify2		=TRUE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataDraw3               =TRUE
dataVerify3		=TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0005-PenState]
text                    =Please touch the screen manual checking of penstate off we should not recieve a pen event ( a pixel should NOT highlight). If no reaction please let this read timeout.
halEValue               =EPenState
value                   ={halDataOff,value}
expected                ={halDataOff,expected}
timeout			={generic,maxTimeout}
timeoutExpected         =TRUE
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0005-WriteFeedback]
text                    =EPen state should be off if pen event recieved please fail the testcase.

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0006-PenState]
text                    =Please touch the screen manual checking of penstate On we should recieve a pen event (a pixel should highlight). If no reaction please let this read timeout.
timeout			={generic,maxTimeout}
timeoutExpected         =FALSE
synchronous             =FALSE
halEValue               =EPenState
value                   ={halDataOn,value}
expected                ={halDataOn,expected}

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0006-WriteFeedback]
text                    =EPen state should be ON if pen event recieved please pass the testcase.

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0007-WriteFeedback]
text                    =EPenClick should be on, Did a pen click produce a Click sound?.

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0007-PenClick]
text                    =Please touch the screen manual checking of EPenClick,we should hear a click sound. If no reaction please let this read timeout.
halEValue               =EPenClick
value                   ={halDataOn,value}
expected                ={halDataOn,expected}
timeout			={generic,maxTimeout}
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0008-WriteFeedback]
text                    =EPenClick should be off, Did a pen click produce a Click sound?.

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0008-Setup]
halEValue               =EPenState
value                   ={halDataOn,value}
expected                ={halDataOn,value}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0008-PenClick]
text                    =Please touch the screen manual checking of EPenClick,we should NOT hear a click sound. If no reaction please let this read timeout.
halEValue               =EPenClick
value                   ={halDataOff,value}
expected                ={halDataOff,expected}
timeout			={generic,maxTimeout}
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-EDisplayStateOn]
halEValue               =EDisplayState
value                   ={halDataOn,value}
expected                ={halDataOn,expected}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-EDisplayStateOff]
halEValue               =EDisplayState
value                   ={halDataOff,value}
expected                ={halDataOff,expected}

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0011-EPenDisplayOn]
text                    =Pen tap state switched on, a pen click should switch on the display. Please wait for the backlight to switch off before tapping screen. If no reaction please let this read timeout.
halEValue               =EPenDisplayOn
value                   ={halDataOn,value}
expected                ={halDataOn,expected}
timeout			={generic,maxTimeout}
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0011-WriteFeedback]
text                    =Pen tap state switched on, Did a pen tap switch on the display? 

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0011-EPenDisplayOnRestore]
halEValue               =EPenDisplayOn
expected                =1
value                   =1

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0012-EPenDisplayOn]
halEValue               =EPenDisplayOn
text                    =Pen tap state switched off, a pen click should NOT switch on the display. Please wait for the backlight to switch off before tapping screen. If no reaction please let this read timeout.
value                   ={halDataOff,value}
expected                ={halDataOff,expected}
timeout			={generic,maxTimeout}
synchronous             =FALSE

tests                   =1
eventType1		={rawEvent,button1Down}
eventOccurance1		=EEventOccuranceOnce
dataDraw1               =FALSE
dataVerify1		=FALSE

eventType2		={rawEvent,pointerMove}
eventOccurance2		=EEventOccuranceZeroOrMore
dataVerify2		=FALSE
dataDraw2               =FALSE

eventType3		={rawEvent,button1Up}
eventOccurance3		=EEventOccuranceOnce
dataVerify3		=FALSE
dataDraw3               =TRUE

[BASE-BSP-DIGITISER-DRIVER-MANUAL-0012-WriteFeedback]
text                    =Pen tap state switched off,  a pen tap should not switch on the display fail if it did. 
