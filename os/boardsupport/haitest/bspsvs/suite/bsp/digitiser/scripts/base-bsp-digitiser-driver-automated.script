//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		base-bsp-digitiser-driver-automated
//! @SYMScriptTestEnvironment	This test script requires a base port ROM

/////////////////////////////////////////////////////////////////////
// base-bsp-digitiser-driver-automated.script
//
// Tests the Digitiser through the HAL::Set(TAttribute, TInt) and HAL:Get() methods with the attributes in 
// EHalGroupDigitiser, EHalGroupSound and EHalGroupPower  HAL groups. 
//
// The tests are automated. 
/////////////////////////////////////////////////////////////////////

LOAD_SUITE	T_Digitiser

START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0001
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0001
//! @SYMAPI			HAL::Get(EPenState, TInt{ref});  
//!                             TDigitiserHalFunction::EDigitiserHalXYState
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		Pen State Test 
//!                             Confirm that the Pen State for the digitiser is enabled. 
//!				Uses API elements: HAL::Get, EDigitiserHalXYState
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Get the current EPenState and validate that it is enabled (value is 1), 
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser State (touch Screen state) is enabled 
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0001-GetCurrentPenState
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0001


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0002
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0002
//! @SYMAPI			Hal::Set(EPenState, TInt);    
//!                             TDigitiserHalFunction::EDigitiserHalXYState
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		Pen State Test 
//!                             Disable the the Pen State for the digitiser. 
//!				Uses API elements: HAL::Set, EDigitiserHalXYState
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Disable the EPenState (value is 0) using HAL:Set.
//!				3. Get EPenState using HAL::Get, and validate that it is disabled (value is 0).
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser State (touch Screen state) is disabled.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0002-PenState
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0002-PenState
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0002	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0003
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0003
//! @SYMAPI			HAL::Set(EPenState, TInt);    
//!                             HAL::Get(EPenState, TInt{ref});
//!                             TDigitiserHalFunction::EDigitiserHalXYState
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		Pen State Test 
//!                             Disable the the Pen State for the digitiser. 
//!				Uses API elements: HAL::Set, EDigitiserHalXYState
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Enable the EPenState (value is 1) using HAL:Set.
//!				3. Get EPenState using HAL::Get, and validate that it is enabled (value is 1).
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser State (touch Screen state) is enabled 
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0003-PenState
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0003-PenState
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0003	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004
//! @SYMAPI			HAL::Set(EPenState, TInt);
//!                             HAL::Get(EPenState, TInt{ref}); 
//!                             TDigitiserHalFunction::EDigitiserHalXYState
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		Pen State Test 
//!                             Confirm that the Pen State for the digitiser is enabled. 
//!                             Disable the the Pen State for the digitiser.
//!                             Validate the Pen State of digitiser is disabled 
//!                             Restore the Pen State to original state (enabled)
//!                             Validate that the Pen State is the original state. 
//!				Uses API elements: HAL::Set,HAL::Get, EDigitiserHalXYState
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Get the current EPenState and validate that it is enabled (value is 1), 
//!                                using HAL::Get
//!				3. Disable the EPenState (value is 0) using HAL:Set.
//!				4. Get EPenState using HAL::Get, and validate that it is disabled (value is 0).
//!				5. Restore EPenState to enabled (value is 1) using HAL:Set.
//!				6. Get EPenState using HAL::Get, and validate that it is enabled (value is 1).
//!				7. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser State (touch Screen state) is enabled  
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004-GetCurrentPenState
                COMMAND		digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004-SetPenState
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004-GetPenState
                COMMAND		digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004-SetRestoredPenState
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004-GetRestoredPenState
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0004	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0005
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0005
//! @SYMAPI			HAL::Get(EPen, TInt{ref}); 
//!                             TDigitiserHalFunction::EDigitiserHalXYInfo
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		Pen Test
//!                             Retreive the digitiser for input state. 
//!				Uses API elements:HAL::Get, EDigitiserHalXYInfo
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Get the current Pen and validate that it is enabled (value is 1), 
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) is enabled  for input
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1      Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0005-GetPen                
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0005	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0006
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0006
//! @SYMAPI			HAL::Get(EPenX, TInt{ref}); 
//!                             TDigitiserHalFunction::EDigitiserHalXYInfo
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		PenX Test
//!                             Retrieve the pen/digitizer horizontal resolution, in pixels
//!                             and Validate that it  is as expected.
//!				Uses API elements:HAL::Get, EDigitiserHalXYInfo
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve the pen/digitizer horizontal resolution, in pixels
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) horizontal screen resolution in pixels is as expected
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0006-GetPenX                
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0006	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0007
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0007
//! @SYMAPI			HAL::Get(EPenY, TInt{ref}); 
//!                             TDigitiserHalFunction::EDigitiserHalXYInfo
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		PenY Test
//!                             Retrieve the pen/digitizer vertical resolution, in pixels
//!                             and Validate that it is as expected.
//!				Uses API elements:HAL::Get, EDigitiserHalXYInfo
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve the pen/digitizer vertical resolution, in pixels
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) vertical screen resolution in pixels is as expected
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0007-GetPenY                
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0007	


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0008
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0008
//! @SYMAPI			HAL::Get(EPenClick, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalPointerClickEnabled
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClick Test
//!                             Confirm whether digitiser supports production of click sound via
//!                             retrieval of EPenClick.                          
//!				Uses API elements:HAL::Get, ESoundHalPointerClickEnabled
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve the click sound for pen tap's in digitiser and validate that it is as expected.
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) click sound for pen is as expected (disabled).
//!                             The device cannot produce a click sound.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0008-PenClick               
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0008


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0011
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0011
//! @SYMAPI			HAL::Get(EPenClickState, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalSetPointerClickEnabled;
//!                             TSoundHalFunction::ESoundHalPointerClickEnabled
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickState Test
//!                             Retrieve click sound for pen tap's in digitiser and validate that it is disabled.                          
//!				Uses API elements:HAL::Get, ESoundHalPointerClickEnabled
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve the click sound for pen tap's in digitiser and validate that it is as expected.
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) click sound for pen is as expected (disabled).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0011-PenClickState               
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0011


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0012
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0012
//! @SYMAPI			HAL::Set(EPenClickState, TInt);
//!                             HAL::Get(EPenClickState, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalSetPointerClickEnabled;
//!                             TSoundHalFunction::ESoundHalPointerClickEnabled
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickState Test
//!                             Set the click state for pen tap's in digitiser to enabled.
//!                             Retrieve click state for pen tap's in digitiser and validate that it is enabled.                          
//!				Uses API elements:HAL::Get, ESoundHalPointerClickEnabled
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set the click sound for the pen taps digitiser to enabled using HAL::Set
//!                             3. Retrieve the click sound for pen tap's in digitiser and validate that it is as expected.
//!                                using HAL::Get
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) click sound for pen is as expected (enabled).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0012-PenClickState 
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0012-PenClickState               
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0012


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0013
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0013
//! @SYMAPI			HAL::Set(EPenClickState, TInt);
//!                             HAL::Get(EPenClickState, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalSetPointerClickEnabled;
//!                             TSoundHalFunction::ESoundHalPointerClickEnabled
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickState Test
//!                             Retrieve click sound for pen tap's in digitiser and validate that it is disabled.                          
//!				Uses API elements:HAL::Get, ESoundHalPointerClickEnabled
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set the click sound for the pen taps digitiser to disabled using HAL::Set
//!                             3. Retrieve the click sound for pen tap's in digitiser and validate that it is as expected.
//!                                using HAL::Get
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	Digitiser (touch Screen) click sound for pen is as expected (disabled).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData          digitiser1
                COMMAND	        digitiser1	Set		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0013-PenClickState 
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0013-PenClickState               
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0013


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0014
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0014
//! @SYMAPI			HAL::Get(EPenClickVolumeMax, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalPointerClickVolumeMax
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickVolumeMax Test
//!                             Retrieve the maximum value for the pen click volume level (EPenClickVolume).                          
//!				Uses API elements:HAL::Get, ESoundHalPointerClickVolumeMax
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve maximum value for the pen click volume level and validate that it is as expected.
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The maximum value for the pen click volume level is as expected in the Digitiser (touch Screen).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0014-EPenClickVolumeMax              
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0014


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0015
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0015
//! @SYMAPI			HAL::Get(EPenClickVolume, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalPointerClickVolumeMax;
//!                             TSoundHalFunction::ESoundHalSetPointerClickLoud;
//!                             TSoundHalFunction::ESoundHalPointerClickLoud
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickVolume Test
//!                             Retrieve the pen click volume and validate that it is as expected.
//!				Uses API elements:HAL::Get, ESoundHalPointerClickVolumeMax,ESoundHalSetPointerClickLoud
//!                             ESoundHalPointerClickLoud
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Retrieve the value for the pen click volume level and validate that it is as expected.
//!                                using HAL::Get
//!				3. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The value for the pen click volume level is as expected in the Digitiser (touch Screen).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser	\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1        
                COMMAND	        digitiser1	Get		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0015-EPenClickVolume              
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0015


START_TESTCASE 	        BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0016
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0016
//! @SYMAPI			HAL::Get(EPenClickVolume, TInt{ref}); 
//!                             TSoundHalFunction::ESoundHalPointerClickVolumeMax;
//!                             TSoundHalFunction::ESoundHalSetPointerClickLoud;
//!                             TSoundHalFunction::ESoundHalPointerClickLoud
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickVolume Test
//!                             Set and Retrieve the pen click volume and validate that its is as expected.           
//!				Uses API elements:HAL::Set,HAL::Get ESoundHalPointerClickVolumeMax,ESoundHalSetPointerClickLoud
//!                             ESoundHalPointerClickLoud
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set the value for the pen click volume level. 
//!                             3. Retrieve maximum value for the pen click volume level and validate that it is as expected.
//!                                using HAL::Get
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The value for the pen click volume level is as expected in the Digitiser (touch Screen).
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser		\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1 
               COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0016-EPenClickVolume 
               COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0016-EPenClickVolume              
	END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0016


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017
//! @SYMAPI			HAL::Get(EPenClickVolume, TInt{ref}); 
//!                             HAL::Set(EPenClickVolume, TInt);
//!                             TSoundHalFunction::ESoundHalPointerClickVolumeMax;
//!                             TSoundHalFunction::ESoundHalSetPointerClickLoud;
//!                             TSoundHalFunction::ESoundHalPointerClickLoud
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenClickVolume Negative Test case
//!                             Set and Retrieve the pen click volume ( here the value is lower than the maximum volume). 
//!                             Set the pen click volume Higher than the maximum volume.
//!                             Retrieve the pen click volume and validate that it is in the original state.
//!				Uses API elements:HAL::Get,HAL::Set(TAttribute, TInt),ESoundHalPointerClickVolumeMax,ESoundHalSetPointerClickLoud
//!                             ESoundHalPointerClickLoud
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set the value for the pen click volume level, using HAL::Set
//!                             3. Retrieve  value for the pen click volume level and validate that it is as expected.
//!                                using HAL::Get
//!                             4. Set the value for the pen click volume level,Higher than the maximum volume using HAL::Set.
//!                             5. Retrieve  value for the pen click volume level and validate that it is as expected.
//!                                using HAL::Get
//!				6. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	The value for the pen click volume level is as expected in the Digitiser (touch Screen).
//!                             and setting the pen click volume Higher than the maximum volume returns an error
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser		\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1        
                COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017-EPenClickVolume              
                COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017-EPenClickVolume 
                COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017-EPenClickVolumeNegative              
                COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017-EPenClickVolume 
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0017


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0018
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0018
//! @SYMAPI			HAL::Get(EPenDisplayOn, TInt{ref}); 
//!                             TPowerHalFunction::EPowerHalPointerSwitchesOn;
//!                             TPowerHalFunction::EPowerHalSetPointerSwitchesOn
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenDisplayOn Test
//!                             Retrieve the pen tap state and validate that it is as expected.
//!				Uses API elements:HAL::Get,EPowerHalSetPointerSwitchesOn,EPowerHalPointerSwitchesOn
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set EPenDisplayOn state to disabled
//!                                using HAL::Set
//!                             3. Retrieve  EPenDisplayOn state and validate that it is as expected.
//!                                using HAL::Get
//!				4. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	A pen tap has no effect, on the display state
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser		\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1        
                COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0018-EPenDisplayOn
                COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0018-EPenDisplayOn                 
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0018


START_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019
//! @SYMTestCaseID		BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019
//! @SYMAPI			HAL::Get(EPenDisplayOn, TInt{ref});
//!                             HAL::Set(EPenDisplayOn, TInt);
//!                             TPowerHalFunction::EPowerHalPointerSwitchesOn;
//!                             TPowerHalFunction::EPowerHalSetPointerSwitchesOn
//! @SYMAuthor			Rehana Anwar
//! @SYMCreationDate		03/04/2008
//! @SYMTestCaseDesc		EPenDisplayOn Test
//!                             Retrieve the pen tap state and validate that it is as expected.
//!				Uses API elements:HAL::Get,EPowerHalSetPointerSwitchesOn,EPowerHalPointerSwitchesOn
//! @SYMTestActions    		1. Create Hal Handle object. 
//!                             2. Set the pen tap state using Hal::Set
//!                             3. Retrieve pen tap state and validate that it is as expected.
//!                                using HAL::Get
//!                             4. Set the pen tap state to original using Hal::Set
//!                             5. Confirm thatthe pen tap state is in original state using Hal::Get
//!				6. Destroy the HAL Handle object.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults  	A Pen tap or press enables the display.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100	        T_Digitiser		\base\digitiser\base-bsp-digitiser-driver-automated.ini
		CREATE_OBJECT	HalData         digitiser1        
                COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019-EPenDisplayOn 
                COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019-EPenDisplayOn
                COMMAND	        digitiser1	Set			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019-EPenDisplayOnRestore
                COMMAND	        digitiser1	Get			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019-EPenDisplayOnRestore                                 
        END_TEST_BLOCK
END_TESTCASE 			BASE-BSP-DIGITISER-DRIVER-AUTOMATED-0019


