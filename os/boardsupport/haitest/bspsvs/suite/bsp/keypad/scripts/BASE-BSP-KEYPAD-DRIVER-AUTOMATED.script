//
// Copyright (c) 2005-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//
//! @file
//! @SYMTestSuiteName		BASE-BSP-KEYPAD-DRIVER-AUTOMATED
//! @SYMScriptDescription	Tests all published elements of the TKeyboardHalFunction class as a means of confidence that the APIs
//!				work as expected.
//! @SYMScriptAutomation	The tests are fully automated with Test Driver and TEF.
//! @SYMScriptTestEnvironment	This test script requires a basic ROM and Text Shell Window Server.
///////////////////////////////////////////////////////////////////////////////



LOAD_SUITE	T_Keypad
DELAY		2000

START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardState;
//!				TKeyboardHalFunction::EKeyboardHalKeyboardState;
//!				TKeyboardHalFunction::EKeyboardHalSetKeyboardState;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Disable the keypad
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the default EKeyboardState value and check that it is as expected
//!				3. Set EKeyboardState 0 (disabled) using HAL:Set.
//!				4. Get EKeyboardState using HAL::Get, and check that it is 0 (disabled).
//!				5. Restore EKeyboardState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad state attribute value is changed to 0 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001-GetCurrentKeypadState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001-SetKeypadState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001-GetKeypadState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001-RestoreKeypadState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0001


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardState;
//!				TKeyboardHalFunction::EKeyboardHalKeyboardState;
//!				TKeyboardHalFunction::EKeyboardHalSetKeyboardState;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Enable the keypad
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the default EKeyboardState value and check that it is as expected
//!				3. Set EKeyboardState 1 (enabled) using HAL:Set.
//!				4. Get EKeyboardState using HAL::Get, and check that it is 1 (enabled).
//!				5. Restore EKeyboardState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad state attribute value is changed to 1 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002-GetCurrentKeypadState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002-SetKeypadState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002-GetKeypadState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002-RestoreKeypadState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0002


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003
//! @SYMAPI			HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboard;
//!				TAttribute::EKeyboardDeviceKeys;
//!				TAttribute::EKeyboardAppKeys;
//!				TKeyboardHalFunction::EKeyboardHalKeyboardInfo;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Keypad Info Test - Get information about the keypad (can be different on different hardware;
//!				specified in t_keypad.ini).
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the keypad type using HAL::Get, and check it against expected value.
//!				3. Get the number of device keys using HAL::Get, and check it against expected value.
//!				4. Get the number of application keys using HAL::Get, and check it against expected value.
//!				5. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad information is returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003-GetKeypadType
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003-GetKeypadDeviceKeys
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003-GetKeypadAppKeys
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0003


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickState;
//!				TSoundHalFunction::ESoundHalSetKeyClickEnabled;
//!				TSoundHalFunction::ESoundHalKeyClickEnabled;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Disable Keypad Click State - Change the value of the Keypad click state attribute (EKeyboardClickState)
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 0 (disabled) using HAL:Set.
//!				4. Get EKeyboardClickState using HAL::Get, and check that it is 0 (disabled).
//!				5. Restore EKeyboardClickState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click state attribute value is changed to 0 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004-GetCurrentKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004-SetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004-GetKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004-RestoreKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0004


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickState;
//!				TSoundHalFunction::ESoundHalSetKeyClickEnabled;
//!				TSoundHalFunction::ESoundHalKeyClickEnabled;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Enable Keypad Click State - Change the value of the Keypad click state attribute (EKeyboardClickState)
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 1 (enabled) using HAL:Set.
//!				4. Get EKeyboardClickState using HAL::Get, and check that it is 1 (enabled).
//!				5. Restore EKeyboardClickState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click state attribute value is changed to 1 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005-GetCurrentKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005-SetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005-GetKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005-RestoreKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0005


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClick;
//!				TSoundHalFunction::ESoundHalSetKeyClickEnabled;
//!				TSoundHalFunction::ESoundHalKeyClickEnabled;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Check that the value of the Keypad click indicator attribute (EKeyboardClick) is disabled.
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 0 (disabled) using HAL:Set.
//!				4. Get EKeyboardClick using HAL::Get, and check that it is 0
//!				5. Restore EKeyboardClickState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click indicator value is 0 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006-GetCurrentKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006-SetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006-GetKeypadClick
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006-RestoreKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0006


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClick;
//!				TSoundHalFunction::ESoundHalSetKeyClickEnabled;
//!				TSoundHalFunction::ESoundHalKeyClickEnabled;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Check the value of the Keypad click indicator attribute (EKeyboardClick) is enabled.
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 1 (enabled) using HAL:Set.
//!				4. Get EKeyboardClick using HAL::Get, and check that it is 1
//!				5. Restore EKeyboardClickState to the default value using HAL:Set.
//!				6. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click indicator value is 1 as expected.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007-GetCurrentKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007-SetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007-GetKeypadClick
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007-RestoreKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0007


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0008
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0008
//! @SYMAPI			HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickVolumeMax;
//!				TSoundHalFunction::ESoundHalKeyClickVolumeMax;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Keypad Click Max Volume Test - Gets the keypad click max volume level (EKeyboardClickVolumeMax
//!				attribute) value (can be different on different hardware; specified in t_keypad.ini).
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get EKeyboardClickVolumeMax value using using HAL::Get, and check it against expected value.
//!				3. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click max volume level value is returned successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0008-GetKeypadClickVolumeMax
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0008


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickVolume;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Keypad Click Volume Test - Sets different volume levels for keypad click (EKeyboardClickVolume
//!				attribute) and validates them (max volume level can be different on different hardware;
//!				specified in t_keypad.ini).
//! @SYMTestActions		1.  Create Hal Handle object.
//!				2.  Get the current EKeyboardClickState value and check that it is the default value
//!				3.  Set EKeyboardClickState 1 (enabled) using HAL:Set.
//!				4.  Get EKeyboardClickState using HAL::Get, and check that it is 1 (enabled).
//!				5.  Get the current EKeyboardClickVolume value using HAL::Get.
//!				6.  Get EKeyboardClickVolumeMax value using using HAL::Get, and check it against expected value.
//!				7.  Set EKeyboardClickVolume to 0 using HAL::Set.
//!				8.  Get EKeyboardClickVolume using HAL::Get and verify it against expected value
//!				9.  Set EKeyboardClickVolume between 0 and max volume level using HAL::Set.
//!				10. Get EKeyboardClickVolume using HAL::Get and verify it against expected value
//!				11. Set EKeyboardClickVolume to max volume level using HAL::Set.
//!				12. Get EKeyboardClickVolume using HAL::Get and verify it against expected value
//!				13. Restore the initial EKeyboardClickVolume value using HAL::Set.
//!				14. Restore EKeyboardClickState to the default value using HAL:Set.
//!				15. Destroy all objects.
//! @SYMTestStatus		Implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	Keypad click volume level is set and verified successfully.
//! @SYMTestType		CIT
	START_TEST_BLOCK	100		T_Keypad		\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT	Keypad		keypad1
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetCurrentKeypadClickState
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-SetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetKeypadClickState
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetCurrentKeypadClickVolume
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetKeypadClickVolumeMax
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-SetKeypadClickVolume0
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetKeypadClickVolume0
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-SetKeypadClickVolumeAvg
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetKeypadClickVolumeAvg
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-SetKeypadClickVolumeMaxValue
		COMMAND		keypad1		Get			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-GetKeypadClickVolumeMaxValue
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-RestoreKeypadClickVolume
		COMMAND		keypad1		Set			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009-RestoreKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0009


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickVolume;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Keypad Click Volume Negative Test - Sets -1 as volume level for keypad click (EKeyboardClickVolume
//!				attribute)
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 1 (enabled) using HAL:Set.
//!				4. Get EKeyboardClickState using HAL::Get, and check that it is 1 (enabled).
//!				5. Set EKeyboardClickVolume to -1 using HAL::Set.
//!				6. Restore EKeyboardClickState to the default value using HAL:Set.
//!				7. Get EKeyboardClickState using HAL::Get, and check that it is the default value as expected.
//!				8. Destroy all objects.
//! @SYMTestStatus		Not implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	HAL::Set() returns KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_Keypad	\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT		Keypad		keypad1
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-GetCurrentKeypadClickState
		COMMAND			keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-SetKeypadClickState
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-GetKeypadClickState
		COMMAND	!Error=-6	keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-SetKeypadClickVolumeMinus1
		COMMAND			keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-RestoreKeypadClickState
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010-GetRestoredKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0010


START_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011
//! @SYMTestCaseID		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011
//! @SYMAPI			HAL::Set(TAttribute, TInt);
//!				HAL::Get(TAttribute, TInt&);
//!				TAttribute::EKeyboardClickVolume;
//! @SYMAuthor			Runno Sgirka
//! @SYMCreationDate		16/07/2008
//! @SYMTestCaseDesc		Keypad Click Volume Negative Test - Sets volume level for keypad click (EKeyboardClickVolume
//!				attribute) more than the max volume (EKeyboardClickVolumeMax attribute).
//! @SYMTestActions		1. Create Hal Handle object.
//!				2. Get the current EKeyboardClickState value and check that it is the default value
//!				3. Set EKeyboardClickState 1 (enabled) using HAL:Set.
//!				4. Get EKeyboardClickState using HAL::Get, and check that it is 1 (enabled).
//!				5. Get EKeyboardClickVolumeMax value using using HAL::Get, and check it against expected value.
//!				6. Set EKeyboardClickVolume to more than max volume using HAL::Set.
//!				7. Restore EKeyboardClickState to the default value using HAL:Set.
//!				8. Get EKeyboardClickState using HAL::Get, and check that it is the default value as expected.
//!				9. Destroy all objects.
//! @SYMTestStatus		Not implemented
//! @SYMTestPriority		High
//! @SYMTestExpectedResults	HAL::Set() returns KErrArgument.
//! @SYMTestType		CIT
	START_TEST_BLOCK		100		T_Keypad	\base\keypad\BASE-BSP-KEYPAD-DRIVER.ini
		CREATE_OBJECT		Keypad		keypad1
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-GetCurrentKeypadClickState
		COMMAND			keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-SetKeypadClickState
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-GetKeypadClickState
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-GetKeypadClickVolumeMax
		COMMAND	!Error=-6	keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-SetKeypadClickVolumeMoreThanMax
		COMMAND			keypad1		Set		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-RestoreKeypadClickState
		COMMAND			keypad1		Get		BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011-GetRestoredKeypadClickState
	END_TEST_BLOCK
END_TESTCASE			BASE-BSP-KEYPAD-DRIVER-AUTOMATED-0011
