// Copyright (c) 2010 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description: This script doesn't have serial test for platform that doesn't support serial port
//


//! @file
//! @SYMTestSuiteName               	utfv1-api-uloggerv1-integration-test-suite.script
//! @SYMScriptTestEnvironment       	TEF



LOAD_SUITE te_uloggermclsuite


PRINT API_Functionality_Tests

START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrim-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrim-0001
//! @SYMTestCaseDesc     Run test for classification filter settings in ULoggerv1 server
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple Primary filter set() methods and check the contents of the get() methods on server return the filters as expected
//! @SYMTestExpectedResults     Verify that the returned gettings match those expected from settings (test step returns a test pass if so)
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ                    
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerAPIPrimTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrim-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPISecond-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPISecond-0001
//! @SYMTestCaseDesc     Run test for ModuleUid filter settings in ULoggerv1 server
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple Secondary filter set() methods and check the contents of the get() methods on server return the filters as expected
//! @SYMTestExpectedResults     Verify that the returned gettings match those expected from settings (test step returns a test pass if so)
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ                   
RUN_TEST_STEP 20000 te_uloggermclsuite ULoggerAPISecondTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPISecond-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPILogging-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPILogging-0001
//! @SYMTestCaseDesc     Run test for logging in ULoggerv1 server for trace compiled in on user side
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple filter and filtering set() methods instrument user-side trace points accordingly for positive, begative and multiple setting tests
//! @SYMTestExpectedResults     Verify that the returned trace data and the output trace log files match the setttings in the ulogger accordingly
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 			
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerAPILoggingTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPILogging-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerBufferSizing-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerBufferSizing-0001
//! @SYMTestCaseDesc     Run test for buffersizing settings in ULoggerv1 server for trace compiled in
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of buffer resizing methods and run over various stress testing trace instrumentations. check the contents of the output file is as expected
//! @SYMTestExpectedResults     Verify that output file contains #traces as expected
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ   
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerBufferSizingStep
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerBufferSizing-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerBufferMode-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerBufferMode-0001
//! @SYMTestCaseDesc     Run test for buffer mode settings in ULoggerv1 server for trace compiled in
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of buffer mode change methods and run over various stress testing trace instrumentations. check the contents of the output file is as expected
//! @SYMTestExpectedResults     Verify that output file contains a trace pattern as expected from buffer mode type
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerBufferModeStep
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerBufferMode-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernel-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernel-0001
//! @SYMTestCaseDesc     Run test for logging in ULoggerv1 server for trace points compiled in on kernel side
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple filter and filtering set() methods instrument kernel-side trace points accordingly for positive, begative and multiple setting tests
//! @SYMTestExpectedResults     Verify that the returned trace data and the output trace log files match the setttings in the ulogger accordingly
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerAPIKernelTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernel-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrintf-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrintf-0001
//! @SYMTestCaseDesc     Run test for logging in ULoggerv1 server for trace printf-style points compiled in on user side
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple filter and filtering set() methods instrument user-side trace printf-style points accordingly for positive, begative and multiple setting tests
//! @SYMTestExpectedResults     Verify that the returned trace data and the output trace log files match the setttings in the ulogger accordingly
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerAPIPrintfTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIPrintf-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernelPrintf-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernelPrintf-0001
//! @SYMTestCaseDesc     Run test for logging in ULoggerv1 server for trace printf-style points compiled in on kernel side
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of single and multiple filter and filtering set() methods instrument kernel-side trace printf-style points accordingly for positive, begative and multiple setting tests
//! @SYMTestExpectedResults     Verify that the returned trace data and the output trace log files match the setttings in the ulogger accordingly
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerAPIKernelPrintfTestStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerAPIKernelPrintf-0001

PRINT Plugin_Tests


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerFilePlugin-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerFilePlugin-0001
//! @SYMTestCaseDesc     Run test for logging to the file plugin for trace compiled in
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of plguin configuration methods for the file plugin and log over trace instrumentaion
//! @SYMTestExpectedResults     Verify that the trace data is output as expected to the file plugin
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerFilePluginStep 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerFilePlugin-0001


START_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerFilePluginStepErr-0001
//! @SYMTestCaseID		DT-DEBUG-TRACE-UTFv1-ULoggerFilePluginStepErr-0001
//! @SYMTestCaseDesc     Run test for error returns from plugin methods for trace compiled in
//! @SYMTestPriority     Critical
//! @SYMTestActions    Run a combination of plguin configuration methods for the file plugin and test on the return errors
//! @SYMTestExpectedResults     Verify that the errors returned are as expected
//! @SYMTestType         CT
//! @SYMTestStatus   Implemented
//! @SYMPREQ                 PREQ1635
//! @SYMREQ 
RUN_TEST_STEP 1000 te_uloggermclsuite ULoggerFilePluginStepErr 
END_TESTCASE			DT-DEBUG-TRACE-UTFv1-ULoggerFilePluginStepErr-0001


PRINT Complete_te_ULogger_Tests
