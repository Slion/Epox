// Copyright (c) 1999-2009 Nokia Corporation and/or its subsidiary(-ies).
// All rights reserved.
// This component and the accompanying materials are made available
// under the terms of "Eclipse Public License v1.0"
// which accompanies this distribution, and is available
// at the URL "http://www.eclipse.org/legal/epl-v10.html".
//
// Initial Contributors:
// Nokia Corporation - initial contribution.
//
// Contributors:
//
// Description:
//

// General
#define ELogEnable 1
#define ELogDisable 0
#define ELogUnique 1
#define ELogUndefined -1

STRUCT CONFIG
	{
	WORD size;
	BYTE recent;
	LONG age;
	}


// Used for definition of capabilities in logwrap.rss
// There may be a maximum of 7 CAPABILITIES defined per operation in logwrap.rss because
// 7 is the max number of TCapability(s) that can be used to instantiate a TSecurityPolicy.
//
STRUCT CAPABILITY
	{
	LONG cap;
	}
	
// used to define a security policy in logwrap.rss.  Each SECURITY
// struct defines the capabilities required to read/write log events
// of the type specified by 'uid'.  These entries will be used as 
// constructor arguments to a TSecurityPolicy.
// Note that SID-based security isn't supported in the Log Engine.
//
STRUCT SECURITY
	{
	LONG uid;
	STRUCT read_caps[];
	STRUCT write_caps[];
	}	

STRUCT ETYPE
	{
	LONG uid;
	LTEXT description;
	BYTE enabled = ELogEnable;
	}
	
ENUM {EAsc,EDesc};

STRUCT KEY
	{
	LTEXT col;
	WORD order = EAsc;
	WORD len = ELogUndefined;
	}

ENUM { EDbCompareNormal, EDbCompareFolded, EDbCompareCollated };

STRUCT INDEX
	{
	LTEXT name;
	LTEXT table;
	STRUCT keys[];
	BYTE unique = 0;
	BYTE compare = EDbCompareNormal;
	}

STRUCT RECENT
	{
	BYTE id;
	WORD duplicate = 0;
	STRUCT conditions[];
	}

STRUCT MATCH
	{
	WORD field;
	LTEXT string = "";
	LONG value = 0;
	}
